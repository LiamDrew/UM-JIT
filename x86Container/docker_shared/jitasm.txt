
jit:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 3f 00 00 	mov    0x3fd9(%rip),%rax        # 4fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 22 3f 00 00    	push   0x3f22(%rip)        # 4f48 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 23 3f 00 00 	bnd jmp *0x3f23(%rip)        # 4f50 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	push   $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	push   $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	push   $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	68 0c 00 00 00       	push   $0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10ff:	90                   	nop
    1100:	f3 0f 1e fa          	endbr64 
    1104:	68 0d 00 00 00       	push   $0xd
    1109:	f2 e9 11 ff ff ff    	bnd jmp 1020 <_init+0x20>
    110f:	90                   	nop
    1110:	f3 0f 1e fa          	endbr64 
    1114:	68 0e 00 00 00       	push   $0xe
    1119:	f2 e9 01 ff ff ff    	bnd jmp 1020 <_init+0x20>
    111f:	90                   	nop

Disassembly of section .plt.got:

0000000000001120 <__cxa_finalize@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 cd 3e 00 00 	bnd jmp *0x3ecd(%rip)        # 4ff8 <__cxa_finalize@GLIBC_2.2.5>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001130 <free@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 1d 3e 00 00 	bnd jmp *0x3e1d(%rip)        # 4f58 <free@GLIBC_2.2.5>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <fclose@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 15 3e 00 00 	bnd jmp *0x3e15(%rip)        # 4f60 <fclose@GLIBC_2.2.5>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <__stack_chk_fail@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 0d 3e 00 00 	bnd jmp *0x3e0d(%rip)        # 4f68 <__stack_chk_fail@GLIBC_2.4>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <mmap@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 05 3e 00 00 	bnd jmp *0x3e05(%rip)        # 4f70 <mmap@GLIBC_2.2.5>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <__assert_fail@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 fd 3d 00 00 	bnd jmp *0x3dfd(%rip)        # 4f78 <__assert_fail@GLIBC_2.2.5>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001180 <memset@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 f5 3d 00 00 	bnd jmp *0x3df5(%rip)        # 4f80 <memset@GLIBC_2.2.5>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <calloc@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 ed 3d 00 00 	bnd jmp *0x3ded(%rip)        # 4f88 <calloc@GLIBC_2.2.5>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011a0 <stat@plt>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	f2 ff 25 e5 3d 00 00 	bnd jmp *0x3de5(%rip)        # 4f90 <stat@GLIBC_2.33>
    11ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011b0 <memcpy@plt>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	f2 ff 25 dd 3d 00 00 	bnd jmp *0x3ddd(%rip)        # 4f98 <memcpy@GLIBC_2.14>
    11bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011c0 <realloc@plt>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	f2 ff 25 d5 3d 00 00 	bnd jmp *0x3dd5(%rip)        # 4fa0 <realloc@GLIBC_2.2.5>
    11cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011d0 <__printf_chk@plt>:
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	f2 ff 25 cd 3d 00 00 	bnd jmp *0x3dcd(%rip)        # 4fa8 <__printf_chk@GLIBC_2.3.4>
    11db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011e0 <fopen@plt>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	f2 ff 25 c5 3d 00 00 	bnd jmp *0x3dc5(%rip)        # 4fb0 <fopen@GLIBC_2.2.5>
    11eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011f0 <fwrite@plt>:
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	f2 ff 25 bd 3d 00 00 	bnd jmp *0x3dbd(%rip)        # 4fb8 <fwrite@GLIBC_2.2.5>
    11fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001200 <__fprintf_chk@plt>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	f2 ff 25 b5 3d 00 00 	bnd jmp *0x3db5(%rip)        # 4fc0 <__fprintf_chk@GLIBC_2.3.4>
    120b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001210 <getc@plt>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	f2 ff 25 ad 3d 00 00 	bnd jmp *0x3dad(%rip)        # 4fc8 <getc@GLIBC_2.2.5>
    121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001220 <_start>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	31 ed                	xor    %ebp,%ebp
    1226:	49 89 d1             	mov    %rdx,%r9
    1229:	5e                   	pop    %rsi
    122a:	48 89 e2             	mov    %rsp,%rdx
    122d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1231:	50                   	push   %rax
    1232:	54                   	push   %rsp
    1233:	45 31 c0             	xor    %r8d,%r8d
    1236:	31 c9                	xor    %ecx,%ecx
    1238:	48 8d 3d 15 02 00 00 	lea    0x215(%rip),%rdi        # 1454 <main>
    123f:	ff 15 93 3d 00 00    	call   *0x3d93(%rip)        # 4fd8 <__libc_start_main@GLIBC_2.34>
    1245:	f4                   	hlt    
    1246:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    124d:	00 00 00 

0000000000001250 <deregister_tm_clones>:
    1250:	48 8d 3d b9 3d 00 00 	lea    0x3db9(%rip),%rdi        # 5010 <__TMC_END__>
    1257:	48 8d 05 b2 3d 00 00 	lea    0x3db2(%rip),%rax        # 5010 <__TMC_END__>
    125e:	48 39 f8             	cmp    %rdi,%rax
    1261:	74 15                	je     1278 <deregister_tm_clones+0x28>
    1263:	48 8b 05 76 3d 00 00 	mov    0x3d76(%rip),%rax        # 4fe0 <_ITM_deregisterTMCloneTable@Base>
    126a:	48 85 c0             	test   %rax,%rax
    126d:	74 09                	je     1278 <deregister_tm_clones+0x28>
    126f:	ff e0                	jmp    *%rax
    1271:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1278:	c3                   	ret    
    1279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001280 <register_tm_clones>:
    1280:	48 8d 3d 89 3d 00 00 	lea    0x3d89(%rip),%rdi        # 5010 <__TMC_END__>
    1287:	48 8d 35 82 3d 00 00 	lea    0x3d82(%rip),%rsi        # 5010 <__TMC_END__>
    128e:	48 29 fe             	sub    %rdi,%rsi
    1291:	48 89 f0             	mov    %rsi,%rax
    1294:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1298:	48 c1 f8 03          	sar    $0x3,%rax
    129c:	48 01 c6             	add    %rax,%rsi
    129f:	48 d1 fe             	sar    %rsi
    12a2:	74 14                	je     12b8 <register_tm_clones+0x38>
    12a4:	48 8b 05 45 3d 00 00 	mov    0x3d45(%rip),%rax        # 4ff0 <_ITM_registerTMCloneTable@Base>
    12ab:	48 85 c0             	test   %rax,%rax
    12ae:	74 08                	je     12b8 <register_tm_clones+0x38>
    12b0:	ff e0                	jmp    *%rax
    12b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    12b8:	c3                   	ret    
    12b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012c0 <__do_global_dtors_aux>:
    12c0:	f3 0f 1e fa          	endbr64 
    12c4:	80 3d 7d 3d 00 00 00 	cmpb   $0x0,0x3d7d(%rip)        # 5048 <completed.0>
    12cb:	75 2b                	jne    12f8 <__do_global_dtors_aux+0x38>
    12cd:	55                   	push   %rbp
    12ce:	48 83 3d 22 3d 00 00 	cmpq   $0x0,0x3d22(%rip)        # 4ff8 <__cxa_finalize@GLIBC_2.2.5>
    12d5:	00 
    12d6:	48 89 e5             	mov    %rsp,%rbp
    12d9:	74 0c                	je     12e7 <__do_global_dtors_aux+0x27>
    12db:	48 8b 3d 26 3d 00 00 	mov    0x3d26(%rip),%rdi        # 5008 <__dso_handle>
    12e2:	e8 39 fe ff ff       	call   1120 <__cxa_finalize@plt>
    12e7:	e8 64 ff ff ff       	call   1250 <deregister_tm_clones>
    12ec:	c6 05 55 3d 00 00 01 	movb   $0x1,0x3d55(%rip)        # 5048 <completed.0>
    12f3:	5d                   	pop    %rbp
    12f4:	c3                   	ret    
    12f5:	0f 1f 00             	nopl   (%rax)
    12f8:	c3                   	ret    
    12f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001300 <frame_dummy>:
    1300:	f3 0f 1e fa          	endbr64 
    1304:	e9 77 ff ff ff       	jmp    1280 <register_tm_clones>

0000000000001309 <initialize_zero_segment>:
    1309:	f3 0f 1e fa          	endbr64 
    130d:	55                   	push   %rbp
    130e:	53                   	push   %rbx
    130f:	48 83 ec 08          	sub    $0x8,%rsp
    1313:	48 89 fd             	mov    %rdi,%rbp
    1316:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    131c:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    1322:	b9 22 00 00 00       	mov    $0x22,%ecx
    1327:	ba 07 00 00 00       	mov    $0x7,%edx
    132c:	48 89 fe             	mov    %rdi,%rsi
    132f:	bf 00 00 00 00       	mov    $0x0,%edi
    1334:	e8 27 fe ff ff       	call   1160 <mmap@plt>
    1339:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    133d:	74 17                	je     1356 <initialize_zero_segment+0x4d>
    133f:	48 89 ea             	mov    %rbp,%rdx
    1342:	be 00 00 00 00       	mov    $0x0,%esi
    1347:	48 89 c7             	mov    %rax,%rdi
    134a:	e8 31 fe ff ff       	call   1180 <memset@plt>
    134f:	48 83 c4 08          	add    $0x8,%rsp
    1353:	5b                   	pop    %rbx
    1354:	5d                   	pop    %rbp
    1355:	c3                   	ret    
    1356:	48 8d 0d 13 1d 00 00 	lea    0x1d13(%rip),%rcx        # 3070 <__PRETTY_FUNCTION__.0>
    135d:	ba 7e 00 00 00       	mov    $0x7e,%edx
    1362:	48 8d 35 9b 1c 00 00 	lea    0x1c9b(%rip),%rsi        # 3004 <_IO_stdin_used+0x4>
    1369:	48 8d 3d 9a 1c 00 00 	lea    0x1c9a(%rip),%rdi        # 300a <_IO_stdin_used+0xa>
    1370:	e8 fb fd ff ff       	call   1170 <__assert_fail@plt>

0000000000001375 <load_zero_segment>:
    1375:	f3 0f 1e fa          	endbr64 
    1379:	55                   	push   %rbp
    137a:	53                   	push   %rbx
    137b:	48 83 ec 28          	sub    $0x28,%rsp
    137f:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    1384:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    1389:	48 89 d7             	mov    %rdx,%rdi
    138c:	48 89 14 24          	mov    %rdx,(%rsp)
    1390:	e8 7b fe ff ff       	call   1210 <getc@plt>
    1395:	83 f8 ff             	cmp    $0xffffffff,%eax
    1398:	0f 84 af 00 00 00    	je     144d <load_zero_segment+0xd8>
    139e:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    13a5:	00 00 
    13a7:	bb 00 00 00 00       	mov    $0x0,%ebx
    13ac:	bd 00 00 00 00       	mov    $0x0,%ebp
    13b1:	eb 30                	jmp    13e3 <load_zero_segment+0x6e>
    13b3:	89 da                	mov    %ebx,%edx
    13b5:	c1 fa 1f             	sar    $0x1f,%edx
    13b8:	c1 ea 1e             	shr    $0x1e,%edx
    13bb:	8d 04 13             	lea    (%rbx,%rdx,1),%eax
    13be:	83 e0 03             	and    $0x3,%eax
    13c1:	29 d0                	sub    %edx,%eax
    13c3:	83 f8 01             	cmp    $0x1,%eax
    13c6:	74 2f                	je     13f7 <load_zero_segment+0x82>
    13c8:	83 f8 02             	cmp    $0x2,%eax
    13cb:	74 3b                	je     1408 <load_zero_segment+0x93>
    13cd:	83 f8 03             	cmp    $0x3,%eax
    13d0:	74 41                	je     1413 <load_zero_segment+0x9e>
    13d2:	83 c3 01             	add    $0x1,%ebx
    13d5:	48 8b 3c 24          	mov    (%rsp),%rdi
    13d9:	e8 32 fe ff ff       	call   1210 <getc@plt>
    13de:	83 f8 ff             	cmp    $0xffffffff,%eax
    13e1:	74 6a                	je     144d <load_zero_segment+0xd8>
    13e3:	89 c1                	mov    %eax,%ecx
    13e5:	f6 c3 03             	test   $0x3,%bl
    13e8:	75 c9                	jne    13b3 <load_zero_segment+0x3e>
    13ea:	81 e5 ff ff ff 00    	and    $0xffffff,%ebp
    13f0:	c1 e0 18             	shl    $0x18,%eax
    13f3:	09 c5                	or     %eax,%ebp
    13f5:	eb db                	jmp    13d2 <load_zero_segment+0x5d>
    13f7:	81 e5 ff ff 00 ff    	and    $0xff00ffff,%ebp
    13fd:	0f b6 c9             	movzbl %cl,%ecx
    1400:	48 c1 e1 10          	shl    $0x10,%rcx
    1404:	09 cd                	or     %ecx,%ebp
    1406:	eb ca                	jmp    13d2 <load_zero_segment+0x5d>
    1408:	0f b6 c9             	movzbl %cl,%ecx
    140b:	89 e8                	mov    %ebp,%eax
    140d:	88 cc                	mov    %cl,%ah
    140f:	89 c5                	mov    %eax,%ebp
    1411:	eb bf                	jmp    13d2 <load_zero_segment+0x5d>
    1413:	0f b6 c9             	movzbl %cl,%ecx
    1416:	89 ed                	mov    %ebp,%ebp
    1418:	48 09 e9             	or     %rbp,%rcx
    141b:	89 ce                	mov    %ecx,%esi
    141d:	8d 43 03             	lea    0x3(%rbx),%eax
    1420:	85 db                	test   %ebx,%ebx
    1422:	0f 49 c3             	cmovns %ebx,%eax
    1425:	c1 f8 02             	sar    $0x2,%eax
    1428:	48 98                	cltq   
    142a:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    142f:	89 0c 87             	mov    %ecx,(%rdi,%rax,4)
    1432:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    1437:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    143c:	e8 04 0b 00 00       	call   1f45 <compile_instruction>
    1441:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1446:	bd 00 00 00 00       	mov    $0x0,%ebp
    144b:	eb 85                	jmp    13d2 <load_zero_segment+0x5d>
    144d:	48 83 c4 28          	add    $0x28,%rsp
    1451:	5b                   	pop    %rbx
    1452:	5d                   	pop    %rbp
    1453:	c3                   	ret    

0000000000001454 <main>:
    1454:	f3 0f 1e fa          	endbr64 
    1458:	55                   	push   %rbp
    1459:	53                   	push   %rbx
    145a:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    1461:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1468:	00 00 
    146a:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
    1471:	00 
    1472:	31 c0                	xor    %eax,%eax
    1474:	83 ff 02             	cmp    $0x2,%edi
    1477:	74 43                	je     14bc <main+0x68>
    1479:	48 8b 0d c0 3b 00 00 	mov    0x3bc0(%rip),%rcx        # 5040 <stderr@GLIBC_2.2.5>
    1480:	ba 1c 00 00 00       	mov    $0x1c,%edx
    1485:	be 01 00 00 00       	mov    $0x1,%esi
    148a:	48 8d 3d 8c 1b 00 00 	lea    0x1b8c(%rip),%rdi        # 301d <_IO_stdin_used+0x1d>
    1491:	e8 5a fd ff ff       	call   11f0 <fwrite@plt>
    1496:	b8 01 00 00 00       	mov    $0x1,%eax
    149b:	48 8b 94 24 a8 00 00 	mov    0xa8(%rsp),%rdx
    14a2:	00 
    14a3:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    14aa:	00 00 
    14ac:	0f 85 32 02 00 00    	jne    16e4 <main+0x290>
    14b2:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
    14b9:	5b                   	pop    %rbx
    14ba:	5d                   	pop    %rbp
    14bb:	c3                   	ret    
    14bc:	48 89 f3             	mov    %rsi,%rbx
    14bf:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
    14c3:	48 8d 35 70 1b 00 00 	lea    0x1b70(%rip),%rsi        # 303a <_IO_stdin_used+0x3a>
    14ca:	e8 11 fd ff ff       	call   11e0 <fopen@plt>
    14cf:	48 89 04 24          	mov    %rax,(%rsp)
    14d3:	48 85 c0             	test   %rax,%rax
    14d6:	0f 84 b9 01 00 00    	je     1695 <main+0x241>
    14dc:	c7 05 7a 3b 00 00 00 	movl   $0x0,0x3b7a(%rip)        # 5060 <gs>
    14e3:	00 00 00 
    14e6:	c7 05 90 3b 00 00 00 	movl   $0x0,0x3b90(%rip)        # 5080 <gs+0x20>
    14ed:	00 00 00 
    14f0:	c7 05 8a 3b 00 00 80 	movl   $0x80,0x3b8a(%rip)        # 5084 <gs+0x24>
    14f7:	00 00 00 
    14fa:	48 c7 05 63 3b 00 00 	movq   $0x0,0x3b63(%rip)        # 5068 <gs+0x8>
    1501:	00 00 00 00 
    1505:	be 08 00 00 00       	mov    $0x8,%esi
    150a:	bf 80 00 00 00       	mov    $0x80,%edi
    150f:	e8 7c fc ff ff       	call   1190 <calloc@plt>
    1514:	48 89 05 55 3b 00 00 	mov    %rax,0x3b55(%rip)        # 5070 <gs+0x10>
    151b:	be 04 00 00 00       	mov    $0x4,%esi
    1520:	bf 80 00 00 00       	mov    $0x80,%edi
    1525:	e8 66 fc ff ff       	call   1190 <calloc@plt>
    152a:	48 89 05 47 3b 00 00 	mov    %rax,0x3b47(%rip)        # 5078 <gs+0x18>
    1531:	c7 05 55 3b 00 00 00 	movl   $0x0,0x3b55(%rip)        # 5090 <gs+0x30>
    1538:	00 00 00 
    153b:	c7 05 4f 3b 00 00 80 	movl   $0x80,0x3b4f(%rip)        # 5094 <gs+0x34>
    1542:	00 00 00 
    1545:	be 04 00 00 00       	mov    $0x4,%esi
    154a:	bf 80 00 00 00       	mov    $0x80,%edi
    154f:	e8 3c fc ff ff       	call   1190 <calloc@plt>
    1554:	48 89 05 2d 3b 00 00 	mov    %rax,0x3b2d(%rip)        # 5088 <gs+0x28>
    155b:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    1560:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    1564:	e8 37 fc ff ff       	call   11a0 <stat@plt>
    1569:	85 c0                	test   %eax,%eax
    156b:	0f 85 69 01 00 00    	jne    16da <main+0x286>
    1571:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
    1576:	40 f6 c5 03          	test   $0x3,%bpl
    157a:	0f 85 3b 01 00 00    	jne    16bb <main+0x267>
    1580:	48 6b fd 0a          	imul   $0xa,%rbp,%rdi
    1584:	e8 80 fd ff ff       	call   1309 <initialize_zero_segment>
    1589:	48 89 c3             	mov    %rax,%rbx
    158c:	be 04 00 00 00       	mov    $0x4,%esi
    1591:	48 89 ef             	mov    %rbp,%rdi
    1594:	e8 f7 fb ff ff       	call   1190 <calloc@plt>
    1599:	48 89 e9             	mov    %rbp,%rcx
    159c:	48 8b 14 24          	mov    (%rsp),%rdx
    15a0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    15a5:	48 89 c6             	mov    %rax,%rsi
    15a8:	48 89 df             	mov    %rbx,%rdi
    15ab:	e8 c5 fd ff ff       	call   1375 <load_zero_segment>
    15b0:	48 8b 05 b9 3a 00 00 	mov    0x3ab9(%rip),%rax        # 5070 <gs+0x10>
    15b7:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    15bc:	48 89 08             	mov    %rcx,(%rax)
    15bf:	48 c1 ed 02          	shr    $0x2,%rbp
    15c3:	48 8b 05 ae 3a 00 00 	mov    0x3aae(%rip),%rax        # 5078 <gs+0x18>
    15ca:	89 28                	mov    %ebp,(%rax)
    15cc:	83 05 ad 3a 00 00 01 	addl   $0x1,0x3aad(%rip)        # 5080 <gs+0x20>
    15d3:	48 89 1d 8e 3a 00 00 	mov    %rbx,0x3a8e(%rip)        # 5068 <gs+0x8>
    15da:	49 c7 c0 00 00 00 00 	mov    $0x0,%r8
    15e1:	49 c7 c1 00 00 00 00 	mov    $0x0,%r9
    15e8:	49 c7 c2 00 00 00 00 	mov    $0x0,%r10
    15ef:	49 c7 c3 00 00 00 00 	mov    $0x0,%r11
    15f6:	49 c7 c4 00 00 00 00 	mov    $0x0,%r12
    15fd:	49 c7 c5 00 00 00 00 	mov    $0x0,%r13
    1604:	49 c7 c6 00 00 00 00 	mov    $0x0,%r14
    160b:	49 c7 c7 00 00 00 00 	mov    $0x0,%r15
    1612:	48 85 db             	test   %rbx,%rbx
    1615:	74 1b                	je     1632 <main+0x1de>
    1617:	8b 05 43 3a 00 00    	mov    0x3a43(%rip),%eax        # 5060 <gs>
    161d:	8d 04 80             	lea    (%rax,%rax,4),%eax
    1620:	c1 e0 03             	shl    $0x3,%eax
    1623:	89 c0                	mov    %eax,%eax
    1625:	48 01 d8             	add    %rbx,%rax
    1628:	ff d0                	call   *%rax
    162a:	48 89 c3             	mov    %rax,%rbx
    162d:	48 85 c0             	test   %rax,%rax
    1630:	75 e5                	jne    1617 <main+0x1c3>
    1632:	83 3d 47 3a 00 00 00 	cmpl   $0x0,0x3a47(%rip)        # 5080 <gs+0x20>
    1639:	74 23                	je     165e <main+0x20a>
    163b:	bb 00 00 00 00       	mov    $0x0,%ebx
    1640:	48 8d 2d 19 3a 00 00 	lea    0x3a19(%rip),%rbp        # 5060 <gs>
    1647:	89 da                	mov    %ebx,%edx
    1649:	48 8b 45 10          	mov    0x10(%rbp),%rax
    164d:	48 8b 3c d0          	mov    (%rax,%rdx,8),%rdi
    1651:	e8 da fa ff ff       	call   1130 <free@plt>
    1656:	83 c3 01             	add    $0x1,%ebx
    1659:	39 5d 20             	cmp    %ebx,0x20(%rbp)
    165c:	77 e9                	ja     1647 <main+0x1f3>
    165e:	48 8b 3d 0b 3a 00 00 	mov    0x3a0b(%rip),%rdi        # 5070 <gs+0x10>
    1665:	e8 c6 fa ff ff       	call   1130 <free@plt>
    166a:	48 8b 3d 07 3a 00 00 	mov    0x3a07(%rip),%rdi        # 5078 <gs+0x18>
    1671:	e8 ba fa ff ff       	call   1130 <free@plt>
    1676:	48 8b 3d 0b 3a 00 00 	mov    0x3a0b(%rip),%rdi        # 5088 <gs+0x28>
    167d:	e8 ae fa ff ff       	call   1130 <free@plt>
    1682:	48 8b 3c 24          	mov    (%rsp),%rdi
    1686:	e8 b5 fa ff ff       	call   1140 <fclose@plt>
    168b:	b8 00 00 00 00       	mov    $0x0,%eax
    1690:	e9 06 fe ff ff       	jmp    149b <main+0x47>
    1695:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
    1699:	48 8d 15 9c 19 00 00 	lea    0x199c(%rip),%rdx        # 303c <_IO_stdin_used+0x3c>
    16a0:	be 01 00 00 00       	mov    $0x1,%esi
    16a5:	48 8b 3d 94 39 00 00 	mov    0x3994(%rip),%rdi        # 5040 <stderr@GLIBC_2.2.5>
    16ac:	e8 4f fb ff ff       	call   1200 <__fprintf_chk@plt>
    16b1:	b8 01 00 00 00       	mov    $0x1,%eax
    16b6:	e9 e0 fd ff ff       	jmp    149b <main+0x47>
    16bb:	48 8d 0d c6 19 00 00 	lea    0x19c6(%rip),%rcx        # 3088 <__PRETTY_FUNCTION__.1>
    16c2:	ba 44 00 00 00       	mov    $0x44,%edx
    16c7:	48 8d 35 36 19 00 00 	lea    0x1936(%rip),%rsi        # 3004 <_IO_stdin_used+0x4>
    16ce:	48 8d 3d 85 19 00 00 	lea    0x1985(%rip),%rdi        # 305a <_IO_stdin_used+0x5a>
    16d5:	e8 96 fa ff ff       	call   1170 <__assert_fail@plt>
    16da:	bd 00 00 00 00       	mov    $0x0,%ebp
    16df:	e9 9c fe ff ff       	jmp    1580 <main+0x12c>
    16e4:	e8 67 fa ff ff       	call   1150 <__stack_chk_fail@plt>

00000000000016e9 <assemble_word>:
    16e9:	f3 0f 1e fa          	endbr64 
    16ed:	49 89 f9             	mov    %rdi,%r9
    16f0:	89 d7                	mov    %edx,%edi
    16f2:	49 89 c8             	mov    %rcx,%r8
    16f5:	8d 4e ff             	lea    -0x1(%rsi),%ecx
    16f8:	ba 02 00 00 00       	mov    $0x2,%edx
    16fd:	48 d3 e2             	shl    %cl,%rdx
    1700:	48 83 ea 01          	sub    $0x1,%rdx
    1704:	48 89 d0             	mov    %rdx,%rax
    1707:	89 f9                	mov    %edi,%ecx
    1709:	48 d3 e0             	shl    %cl,%rax
    170c:	48 f7 d0             	not    %rax
    170f:	4c 21 c8             	and    %r9,%rax
    1712:	49 d3 e0             	shl    %cl,%r8
    1715:	4c 09 c0             	or     %r8,%rax
    1718:	c3                   	ret    

0000000000001719 <read_char>:
    1719:	f3 0f 1e fa          	endbr64 
    171d:	48 83 ec 08          	sub    $0x8,%rsp
    1721:	48 8b 3d f8 38 00 00 	mov    0x38f8(%rip),%rdi        # 5020 <stdin@GLIBC_2.2.5>
    1728:	e8 e3 fa ff ff       	call   1210 <getc@plt>
    172d:	83 f8 ff             	cmp    $0xffffffff,%eax
    1730:	74 05                	je     1737 <read_char+0x1e>
    1732:	48 83 c4 08          	add    $0x8,%rsp
    1736:	c3                   	ret    
    1737:	48 8d 0d 3a 1a 00 00 	lea    0x1a3a(%rip),%rcx        # 3178 <__PRETTY_FUNCTION__.1>
    173e:	ba 0c 00 00 00       	mov    $0xc,%edx
    1743:	48 8d 35 43 19 00 00 	lea    0x1943(%rip),%rsi        # 308d <__PRETTY_FUNCTION__.1+0x5>
    174a:	48 8d 3d 47 19 00 00 	lea    0x1947(%rip),%rdi        # 3098 <__PRETTY_FUNCTION__.1+0x10>
    1751:	e8 1a fa ff ff       	call   1170 <__assert_fail@plt>

0000000000001756 <unmap_segment>:
    1756:	f3 0f 1e fa          	endbr64 
    175a:	53                   	push   %rbx
    175b:	89 fb                	mov    %edi,%ebx
    175d:	8b 05 31 39 00 00    	mov    0x3931(%rip),%eax        # 5094 <gs+0x34>
    1763:	39 05 27 39 00 00    	cmp    %eax,0x3927(%rip)        # 5090 <gs+0x30>
    1769:	74 1d                	je     1788 <unmap_segment+0x32>
    176b:	8b 05 1f 39 00 00    	mov    0x391f(%rip),%eax        # 5090 <gs+0x30>
    1771:	8d 50 01             	lea    0x1(%rax),%edx
    1774:	89 15 16 39 00 00    	mov    %edx,0x3916(%rip)        # 5090 <gs+0x30>
    177a:	89 c0                	mov    %eax,%eax
    177c:	48 8b 15 05 39 00 00 	mov    0x3905(%rip),%rdx        # 5088 <gs+0x28>
    1783:	89 1c 82             	mov    %ebx,(%rdx,%rax,4)
    1786:	5b                   	pop    %rbx
    1787:	c3                   	ret    
    1788:	01 c0                	add    %eax,%eax
    178a:	89 05 04 39 00 00    	mov    %eax,0x3904(%rip)        # 5094 <gs+0x34>
    1790:	89 c0                	mov    %eax,%eax
    1792:	48 8d 34 85 00 00 00 	lea    0x0(,%rax,4),%rsi
    1799:	00 
    179a:	48 8b 3d e7 38 00 00 	mov    0x38e7(%rip),%rdi        # 5088 <gs+0x28>
    17a1:	e8 1a fa ff ff       	call   11c0 <realloc@plt>
    17a6:	48 89 05 db 38 00 00 	mov    %rax,0x38db(%rip)        # 5088 <gs+0x28>
    17ad:	eb bc                	jmp    176b <unmap_segment+0x15>

00000000000017af <map_segment>:
    17af:	f3 0f 1e fa          	endbr64 
    17b3:	55                   	push   %rbp
    17b4:	53                   	push   %rbx
    17b5:	48 83 ec 18          	sub    $0x18,%rsp
    17b9:	89 7c 24 08          	mov    %edi,0x8(%rsp)
    17bd:	8b 05 cd 38 00 00    	mov    0x38cd(%rip),%eax        # 5090 <gs+0x30>
    17c3:	85 c0                	test   %eax,%eax
    17c5:	0f 85 eb 00 00 00    	jne    18b6 <map_segment+0x107>
    17cb:	8b 05 b3 38 00 00    	mov    0x38b3(%rip),%eax        # 5084 <gs+0x24>
    17d1:	39 05 a9 38 00 00    	cmp    %eax,0x38a9(%rip)        # 5080 <gs+0x20>
    17d7:	74 18                	je     17f1 <map_segment+0x42>
    17d9:	8b 05 a1 38 00 00    	mov    0x38a1(%rip),%eax        # 5080 <gs+0x20>
    17df:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    17e3:	83 c0 01             	add    $0x1,%eax
    17e6:	89 05 94 38 00 00    	mov    %eax,0x3894(%rip)        # 5080 <gs+0x20>
    17ec:	e9 de 00 00 00       	jmp    18cf <map_segment+0x120>
    17f1:	01 c0                	add    %eax,%eax
    17f3:	89 05 8b 38 00 00    	mov    %eax,0x388b(%rip)        # 5084 <gs+0x24>
    17f9:	89 c0                	mov    %eax,%eax
    17fb:	48 8d 34 85 00 00 00 	lea    0x0(,%rax,4),%rsi
    1802:	00 
    1803:	48 8b 3d 6e 38 00 00 	mov    0x386e(%rip),%rdi        # 5078 <gs+0x18>
    180a:	e8 b1 f9 ff ff       	call   11c0 <realloc@plt>
    180f:	48 89 05 62 38 00 00 	mov    %rax,0x3862(%rip)        # 5078 <gs+0x18>
    1816:	48 85 c0             	test   %rax,%rax
    1819:	74 5d                	je     1878 <map_segment+0xc9>
    181b:	8b 35 63 38 00 00    	mov    0x3863(%rip),%esi        # 5084 <gs+0x24>
    1821:	48 c1 e6 03          	shl    $0x3,%rsi
    1825:	48 8b 3d 44 38 00 00 	mov    0x3844(%rip),%rdi        # 5070 <gs+0x10>
    182c:	e8 8f f9 ff ff       	call   11c0 <realloc@plt>
    1831:	48 89 05 38 38 00 00 	mov    %rax,0x3838(%rip)        # 5070 <gs+0x10>
    1838:	48 85 c0             	test   %rax,%rax
    183b:	74 5a                	je     1897 <map_segment+0xe8>
    183d:	8b 05 3d 38 00 00    	mov    0x383d(%rip),%eax        # 5080 <gs+0x20>
    1843:	3b 05 3b 38 00 00    	cmp    0x383b(%rip),%eax        # 5084 <gs+0x24>
    1849:	73 8e                	jae    17d9 <map_segment+0x2a>
    184b:	48 8d 15 0e 38 00 00 	lea    0x380e(%rip),%rdx        # 5060 <gs>
    1852:	89 c1                	mov    %eax,%ecx
    1854:	48 8b 72 10          	mov    0x10(%rdx),%rsi
    1858:	48 c7 04 ce 00 00 00 	movq   $0x0,(%rsi,%rcx,8)
    185f:	00 
    1860:	48 8b 72 18          	mov    0x18(%rdx),%rsi
    1864:	c7 04 8e 00 00 00 00 	movl   $0x0,(%rsi,%rcx,4)
    186b:	83 c0 01             	add    $0x1,%eax
    186e:	39 42 24             	cmp    %eax,0x24(%rdx)
    1871:	77 df                	ja     1852 <map_segment+0xa3>
    1873:	e9 61 ff ff ff       	jmp    17d9 <map_segment+0x2a>
    1878:	48 8d 0d e9 18 00 00 	lea    0x18e9(%rip),%rcx        # 3168 <__PRETTY_FUNCTION__.0>
    187f:	ba 39 00 00 00       	mov    $0x39,%edx
    1884:	48 8d 35 02 18 00 00 	lea    0x1802(%rip),%rsi        # 308d <__PRETTY_FUNCTION__.1+0x5>
    188b:	48 8d 3d 0f 18 00 00 	lea    0x180f(%rip),%rdi        # 30a1 <__PRETTY_FUNCTION__.1+0x19>
    1892:	e8 d9 f8 ff ff       	call   1170 <__assert_fail@plt>
    1897:	48 8d 0d ca 18 00 00 	lea    0x18ca(%rip),%rcx        # 3168 <__PRETTY_FUNCTION__.0>
    189e:	ba 3d 00 00 00       	mov    $0x3d,%edx
    18a3:	48 8d 35 e3 17 00 00 	lea    0x17e3(%rip),%rsi        # 308d <__PRETTY_FUNCTION__.1+0x5>
    18aa:	48 8d 3d 04 18 00 00 	lea    0x1804(%rip),%rdi        # 30b5 <__PRETTY_FUNCTION__.1+0x2d>
    18b1:	e8 ba f8 ff ff       	call   1170 <__assert_fail@plt>
    18b6:	83 e8 01             	sub    $0x1,%eax
    18b9:	89 05 d1 37 00 00    	mov    %eax,0x37d1(%rip)        # 5090 <gs+0x30>
    18bf:	89 c0                	mov    %eax,%eax
    18c1:	48 8b 15 c0 37 00 00 	mov    0x37c0(%rip),%rdx        # 5088 <gs+0x28>
    18c8:	8b 04 82             	mov    (%rdx,%rax,4),%eax
    18cb:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    18cf:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
    18d3:	48 8b 05 96 37 00 00 	mov    0x3796(%rip),%rax        # 5070 <gs+0x10>
    18da:	48 8d 2c d8          	lea    (%rax,%rbx,8),%rbp
    18de:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    18e2:	48 85 ff             	test   %rdi,%rdi
    18e5:	74 10                	je     18f7 <map_segment+0x148>
    18e7:	48 8b 05 8a 37 00 00 	mov    0x378a(%rip),%rax        # 5078 <gs+0x18>
    18ee:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    18f2:	39 0c 98             	cmp    %ecx,(%rax,%rbx,4)
    18f5:	73 2d                	jae    1924 <map_segment+0x175>
    18f7:	8b 74 24 08          	mov    0x8(%rsp),%esi
    18fb:	48 c1 e6 02          	shl    $0x2,%rsi
    18ff:	e8 bc f8 ff ff       	call   11c0 <realloc@plt>
    1904:	48 89 45 00          	mov    %rax,0x0(%rbp)
    1908:	48 8b 05 61 37 00 00 	mov    0x3761(%rip),%rax        # 5070 <gs+0x10>
    190f:	48 83 3c d8 00       	cmpq   $0x0,(%rax,%rbx,8)
    1914:	74 36                	je     194c <map_segment+0x19d>
    1916:	48 8b 05 5b 37 00 00 	mov    0x375b(%rip),%rax        # 5078 <gs+0x18>
    191d:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    1921:	89 0c 98             	mov    %ecx,(%rax,%rbx,4)
    1924:	8b 54 24 08          	mov    0x8(%rsp),%edx
    1928:	48 c1 e2 02          	shl    $0x2,%rdx
    192c:	48 8b 05 3d 37 00 00 	mov    0x373d(%rip),%rax        # 5070 <gs+0x10>
    1933:	48 8b 3c d8          	mov    (%rax,%rbx,8),%rdi
    1937:	be 00 00 00 00       	mov    $0x0,%esi
    193c:	e8 3f f8 ff ff       	call   1180 <memset@plt>
    1941:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    1945:	48 83 c4 18          	add    $0x18,%rsp
    1949:	5b                   	pop    %rbx
    194a:	5d                   	pop    %rbp
    194b:	c3                   	ret    
    194c:	48 8d 0d 15 18 00 00 	lea    0x1815(%rip),%rcx        # 3168 <__PRETTY_FUNCTION__.0>
    1953:	ba 54 00 00 00       	mov    $0x54,%edx
    1958:	48 8d 35 2e 17 00 00 	lea    0x172e(%rip),%rsi        # 308d <__PRETTY_FUNCTION__.1+0x5>
    195f:	48 8d 3d 62 17 00 00 	lea    0x1762(%rip),%rdi        # 30c8 <__PRETTY_FUNCTION__.1+0x40>
    1966:	e8 05 f8 ff ff       	call   1170 <__assert_fail@plt>

000000000000196b <print_registers>:
    196b:	f3 0f 1e fa          	endbr64 
    196f:	48 83 ec 58          	sub    $0x58,%rsp
    1973:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    197a:	00 00 
    197c:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    1981:	31 c0                	xor    %eax,%eax
    1983:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    1988:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    198d:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
    1992:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
    1997:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
    199c:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
    19a1:	4c 89 74 24 38       	mov    %r14,0x38(%rsp)
    19a6:	4c 89 7c 24 40       	mov    %r15,0x40(%rsp)
    19ab:	ff 74 24 40          	push   0x40(%rsp)
    19af:	ff 74 24 40          	push   0x40(%rsp)
    19b3:	ff 74 24 40          	push   0x40(%rsp)
    19b7:	ff 74 24 40          	push   0x40(%rsp)
    19bb:	4c 8b 4c 24 40       	mov    0x40(%rsp),%r9
    19c0:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
    19c5:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    19ca:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    19cf:	48 8d 35 12 17 00 00 	lea    0x1712(%rip),%rsi        # 30e8 <__PRETTY_FUNCTION__.1+0x60>
    19d6:	bf 01 00 00 00       	mov    $0x1,%edi
    19db:	e8 f0 f7 ff ff       	call   11d0 <__printf_chk@plt>
    19e0:	48 83 c4 20          	add    $0x20,%rsp
    19e4:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    19e9:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    19f0:	00 00 
    19f2:	75 05                	jne    19f9 <print_registers+0x8e>
    19f4:	48 83 c4 58          	add    $0x58,%rsp
    19f8:	c3                   	ret    
    19f9:	e8 52 f7 ff ff       	call   1150 <__stack_chk_fail@plt>

00000000000019fe <load_reg>:
    19fe:	f3 0f 1e fa          	endbr64 
    1a02:	48 01 f7             	add    %rsi,%rdi
    1a05:	c6 07 41             	movb   $0x41,(%rdi)
    1a08:	c6 47 01 c7          	movb   $0xc7,0x1(%rdi)
    1a0c:	83 ca c0             	or     $0xffffffc0,%edx
    1a0f:	88 57 02             	mov    %dl,0x2(%rdi)
    1a12:	88 4f 03             	mov    %cl,0x3(%rdi)
    1a15:	0f b6 c5             	movzbl %ch,%eax
    1a18:	88 47 04             	mov    %al,0x4(%rdi)
    1a1b:	89 c8                	mov    %ecx,%eax
    1a1d:	c1 e8 10             	shr    $0x10,%eax
    1a20:	88 47 05             	mov    %al,0x5(%rdi)
    1a23:	c1 e9 18             	shr    $0x18,%ecx
    1a26:	88 4f 06             	mov    %cl,0x6(%rdi)
    1a29:	c6 47 07 eb          	movb   $0xeb,0x7(%rdi)
    1a2d:	c6 47 08 1f          	movb   $0x1f,0x8(%rdi)
    1a31:	b8 28 00 00 00       	mov    $0x28,%eax
    1a36:	c3                   	ret    

0000000000001a37 <add_regs>:
    1a37:	f3 0f 1e fa          	endbr64 
    1a3b:	48 01 f7             	add    %rsi,%rdi
    1a3e:	c6 07 44             	movb   $0x44,(%rdi)
    1a41:	c6 47 01 89          	movb   $0x89,0x1(%rdi)
    1a45:	c1 e1 03             	shl    $0x3,%ecx
    1a48:	83 c9 c0             	or     $0xffffffc0,%ecx
    1a4b:	88 4f 02             	mov    %cl,0x2(%rdi)
    1a4e:	c6 47 03 44          	movb   $0x44,0x3(%rdi)
    1a52:	c6 47 04 01          	movb   $0x1,0x4(%rdi)
    1a56:	41 c1 e0 03          	shl    $0x3,%r8d
    1a5a:	41 83 c8 c0          	or     $0xffffffc0,%r8d
    1a5e:	44 88 47 05          	mov    %r8b,0x5(%rdi)
    1a62:	c6 47 06 41          	movb   $0x41,0x6(%rdi)
    1a66:	c6 47 07 89          	movb   $0x89,0x7(%rdi)
    1a6a:	83 ca c0             	or     $0xffffffc0,%edx
    1a6d:	88 57 08             	mov    %dl,0x8(%rdi)
    1a70:	c6 47 09 eb          	movb   $0xeb,0x9(%rdi)
    1a74:	c6 47 0a 1d          	movb   $0x1d,0xa(%rdi)
    1a78:	b8 28 00 00 00       	mov    $0x28,%eax
    1a7d:	c3                   	ret    

0000000000001a7e <handle_halt>:
    1a7e:	f3 0f 1e fa          	endbr64 
    1a82:	48 01 f7             	add    %rsi,%rdi
    1a85:	c6 07 48             	movb   $0x48,(%rdi)
    1a88:	c6 47 01 31          	movb   $0x31,0x1(%rdi)
    1a8c:	c6 47 02 c0          	movb   $0xc0,0x2(%rdi)
    1a90:	c6 47 03 c3          	movb   $0xc3,0x3(%rdi)
    1a94:	b8 28 00 00 00       	mov    $0x28,%eax
    1a99:	c3                   	ret    

0000000000001a9a <mult_regs>:
    1a9a:	f3 0f 1e fa          	endbr64 
    1a9e:	48 01 f7             	add    %rsi,%rdi
    1aa1:	c6 07 44             	movb   $0x44,(%rdi)
    1aa4:	c6 47 01 89          	movb   $0x89,0x1(%rdi)
    1aa8:	c1 e1 03             	shl    $0x3,%ecx
    1aab:	83 c9 c0             	or     $0xffffffc0,%ecx
    1aae:	88 4f 02             	mov    %cl,0x2(%rdi)
    1ab1:	c6 47 03 41          	movb   $0x41,0x3(%rdi)
    1ab5:	c6 47 04 f7          	movb   $0xf7,0x4(%rdi)
    1ab9:	41 83 c8 e0          	or     $0xffffffe0,%r8d
    1abd:	44 88 47 05          	mov    %r8b,0x5(%rdi)
    1ac1:	c6 47 06 41          	movb   $0x41,0x6(%rdi)
    1ac5:	c6 47 07 89          	movb   $0x89,0x7(%rdi)
    1ac9:	83 ca c0             	or     $0xffffffc0,%edx
    1acc:	88 57 08             	mov    %dl,0x8(%rdi)
    1acf:	c6 47 09 eb          	movb   $0xeb,0x9(%rdi)
    1ad3:	c6 47 0a 1d          	movb   $0x1d,0xa(%rdi)
    1ad7:	b8 28 00 00 00       	mov    $0x28,%eax
    1adc:	c3                   	ret    

0000000000001add <div_regs>:
    1add:	f3 0f 1e fa          	endbr64 
    1ae1:	48 01 f7             	add    %rsi,%rdi
    1ae4:	c6 07 48             	movb   $0x48,(%rdi)
    1ae7:	c6 47 01 31          	movb   $0x31,0x1(%rdi)
    1aeb:	c6 47 02 d2          	movb   $0xd2,0x2(%rdi)
    1aef:	c6 47 03 44          	movb   $0x44,0x3(%rdi)
    1af3:	c6 47 04 89          	movb   $0x89,0x4(%rdi)
    1af7:	c1 e1 03             	shl    $0x3,%ecx
    1afa:	83 c9 c0             	or     $0xffffffc0,%ecx
    1afd:	88 4f 05             	mov    %cl,0x5(%rdi)
    1b00:	c6 47 06 49          	movb   $0x49,0x6(%rdi)
    1b04:	c6 47 07 f7          	movb   $0xf7,0x7(%rdi)
    1b08:	41 83 c8 f0          	or     $0xfffffff0,%r8d
    1b0c:	44 88 47 08          	mov    %r8b,0x8(%rdi)
    1b10:	c6 47 09 49          	movb   $0x49,0x9(%rdi)
    1b14:	c6 47 0a 89          	movb   $0x89,0xa(%rdi)
    1b18:	83 ca c0             	or     $0xffffffc0,%edx
    1b1b:	88 57 0b             	mov    %dl,0xb(%rdi)
    1b1e:	c6 47 0c eb          	movb   $0xeb,0xc(%rdi)
    1b22:	c6 47 0d 1a          	movb   $0x1a,0xd(%rdi)
    1b26:	b8 28 00 00 00       	mov    $0x28,%eax
    1b2b:	c3                   	ret    

0000000000001b2c <cond_move>:
    1b2c:	f3 0f 1e fa          	endbr64 
    1b30:	48 01 f7             	add    %rsi,%rdi
    1b33:	c6 07 41             	movb   $0x41,(%rdi)
    1b36:	c6 47 01 83          	movb   $0x83,0x1(%rdi)
    1b3a:	41 83 c8 f8          	or     $0xfffffff8,%r8d
    1b3e:	44 88 47 02          	mov    %r8b,0x2(%rdi)
    1b42:	c6 47 03 00          	movb   $0x0,0x3(%rdi)
    1b46:	c6 47 04 74          	movb   $0x74,0x4(%rdi)
    1b4a:	c6 47 05 03          	movb   $0x3,0x5(%rdi)
    1b4e:	c6 47 06 45          	movb   $0x45,0x6(%rdi)
    1b52:	c6 47 07 89          	movb   $0x89,0x7(%rdi)
    1b56:	c1 e1 03             	shl    $0x3,%ecx
    1b59:	09 d1                	or     %edx,%ecx
    1b5b:	83 c9 c0             	or     $0xffffffc0,%ecx
    1b5e:	88 4f 08             	mov    %cl,0x8(%rdi)
    1b61:	c6 47 09 eb          	movb   $0xeb,0x9(%rdi)
    1b65:	c6 47 0a 1d          	movb   $0x1d,0xa(%rdi)
    1b69:	b8 28 00 00 00       	mov    $0x28,%eax
    1b6e:	c3                   	ret    

0000000000001b6f <nand_regs>:
    1b6f:	f3 0f 1e fa          	endbr64 
    1b73:	48 01 f7             	add    %rsi,%rdi
    1b76:	c6 07 44             	movb   $0x44,(%rdi)
    1b79:	c6 47 01 89          	movb   $0x89,0x1(%rdi)
    1b7d:	c1 e1 03             	shl    $0x3,%ecx
    1b80:	83 c9 c0             	or     $0xffffffc0,%ecx
    1b83:	88 4f 02             	mov    %cl,0x2(%rdi)
    1b86:	c6 47 03 44          	movb   $0x44,0x3(%rdi)
    1b8a:	c6 47 04 21          	movb   $0x21,0x4(%rdi)
    1b8e:	41 c1 e0 03          	shl    $0x3,%r8d
    1b92:	41 83 c8 c0          	or     $0xffffffc0,%r8d
    1b96:	44 88 47 05          	mov    %r8b,0x5(%rdi)
    1b9a:	c6 47 06 40          	movb   $0x40,0x6(%rdi)
    1b9e:	c6 47 07 f7          	movb   $0xf7,0x7(%rdi)
    1ba2:	c6 47 08 d0          	movb   $0xd0,0x8(%rdi)
    1ba6:	c6 47 09 41          	movb   $0x41,0x9(%rdi)
    1baa:	c6 47 0a 89          	movb   $0x89,0xa(%rdi)
    1bae:	83 ca c0             	or     $0xffffffc0,%edx
    1bb1:	88 57 0b             	mov    %dl,0xb(%rdi)
    1bb4:	c6 47 0c eb          	movb   $0xeb,0xc(%rdi)
    1bb8:	c6 47 0d 1a          	movb   $0x1a,0xd(%rdi)
    1bbc:	b8 28 00 00 00       	mov    $0x28,%eax
    1bc1:	c3                   	ret    

0000000000001bc2 <print_reg>:
    1bc2:	f3 0f 1e fa          	endbr64 
    1bc6:	48 01 f7             	add    %rsi,%rdi
    1bc9:	c6 07 44             	movb   $0x44,(%rdi)
    1bcc:	c6 47 01 89          	movb   $0x89,0x1(%rdi)
    1bd0:	c1 e2 03             	shl    $0x3,%edx
    1bd3:	83 ca c7             	or     $0xffffffc7,%edx
    1bd6:	88 57 02             	mov    %dl,0x2(%rdi)
    1bd9:	c6 47 03 41          	movb   $0x41,0x3(%rdi)
    1bdd:	c6 47 04 50          	movb   $0x50,0x4(%rdi)
    1be1:	c6 47 05 41          	movb   $0x41,0x5(%rdi)
    1be5:	c6 47 06 51          	movb   $0x51,0x6(%rdi)
    1be9:	c6 47 07 41          	movb   $0x41,0x7(%rdi)
    1bed:	c6 47 08 52          	movb   $0x52,0x8(%rdi)
    1bf1:	c6 47 09 41          	movb   $0x41,0x9(%rdi)
    1bf5:	c6 47 0a 53          	movb   $0x53,0xa(%rdi)
    1bf9:	c6 47 0b 48          	movb   $0x48,0xb(%rdi)
    1bfd:	c6 47 0c b8          	movb   $0xb8,0xc(%rdi)
    1c01:	48 8b 05 c8 33 00 00 	mov    0x33c8(%rip),%rax        # 4fd0 <putchar@GLIBC_2.2.5>
    1c08:	48 89 47 0d          	mov    %rax,0xd(%rdi)
    1c0c:	c6 47 15 ff          	movb   $0xff,0x15(%rdi)
    1c10:	c6 47 16 d0          	movb   $0xd0,0x16(%rdi)
    1c14:	c6 47 17 41          	movb   $0x41,0x17(%rdi)
    1c18:	c6 47 18 5b          	movb   $0x5b,0x18(%rdi)
    1c1c:	c6 47 19 41          	movb   $0x41,0x19(%rdi)
    1c20:	c6 47 1a 5a          	movb   $0x5a,0x1a(%rdi)
    1c24:	c6 47 1b 41          	movb   $0x41,0x1b(%rdi)
    1c28:	c6 47 1c 59          	movb   $0x59,0x1c(%rdi)
    1c2c:	c6 47 1d 41          	movb   $0x41,0x1d(%rdi)
    1c30:	c6 47 1e 58          	movb   $0x58,0x1e(%rdi)
    1c34:	c6 47 1f eb          	movb   $0xeb,0x1f(%rdi)
    1c38:	c6 47 20 07          	movb   $0x7,0x20(%rdi)
    1c3c:	b8 28 00 00 00       	mov    $0x28,%eax
    1c41:	c3                   	ret    

0000000000001c42 <read_into_reg>:
    1c42:	f3 0f 1e fa          	endbr64 
    1c46:	48 01 f7             	add    %rsi,%rdi
    1c49:	c6 07 48             	movb   $0x48,(%rdi)
    1c4c:	c6 47 01 b8          	movb   $0xb8,0x1(%rdi)
    1c50:	48 8d 05 c2 fa ff ff 	lea    -0x53e(%rip),%rax        # 1719 <read_char>
    1c57:	48 89 47 02          	mov    %rax,0x2(%rdi)
    1c5b:	c6 47 0a ff          	movb   $0xff,0xa(%rdi)
    1c5f:	c6 47 0b d0          	movb   $0xd0,0xb(%rdi)
    1c63:	c6 47 0c 41          	movb   $0x41,0xc(%rdi)
    1c67:	c6 47 0d 89          	movb   $0x89,0xd(%rdi)
    1c6b:	83 ca c0             	or     $0xffffffc0,%edx
    1c6e:	88 57 0e             	mov    %dl,0xe(%rdi)
    1c71:	c6 47 0f eb          	movb   $0xeb,0xf(%rdi)
    1c75:	c6 47 10 17          	movb   $0x17,0x10(%rdi)
    1c79:	b8 28 00 00 00       	mov    $0x28,%eax
    1c7e:	c3                   	ret    

0000000000001c7f <inject_map_segment>:
    1c7f:	f3 0f 1e fa          	endbr64 
    1c83:	48 01 f7             	add    %rsi,%rdi
    1c86:	c6 07 44             	movb   $0x44,(%rdi)
    1c89:	c6 47 01 89          	movb   $0x89,0x1(%rdi)
    1c8d:	c1 e1 03             	shl    $0x3,%ecx
    1c90:	83 c9 c7             	or     $0xffffffc7,%ecx
    1c93:	88 4f 02             	mov    %cl,0x2(%rdi)
    1c96:	c6 47 03 41          	movb   $0x41,0x3(%rdi)
    1c9a:	c6 47 04 50          	movb   $0x50,0x4(%rdi)
    1c9e:	c6 47 05 41          	movb   $0x41,0x5(%rdi)
    1ca2:	c6 47 06 51          	movb   $0x51,0x6(%rdi)
    1ca6:	c6 47 07 41          	movb   $0x41,0x7(%rdi)
    1caa:	c6 47 08 52          	movb   $0x52,0x8(%rdi)
    1cae:	c6 47 09 41          	movb   $0x41,0x9(%rdi)
    1cb2:	c6 47 0a 53          	movb   $0x53,0xa(%rdi)
    1cb6:	c6 47 0b 48          	movb   $0x48,0xb(%rdi)
    1cba:	c6 47 0c b8          	movb   $0xb8,0xc(%rdi)
    1cbe:	48 8d 05 ea fa ff ff 	lea    -0x516(%rip),%rax        # 17af <map_segment>
    1cc5:	48 89 47 0d          	mov    %rax,0xd(%rdi)
    1cc9:	c6 47 15 ff          	movb   $0xff,0x15(%rdi)
    1ccd:	c6 47 16 d0          	movb   $0xd0,0x16(%rdi)
    1cd1:	c6 47 17 41          	movb   $0x41,0x17(%rdi)
    1cd5:	c6 47 18 5b          	movb   $0x5b,0x18(%rdi)
    1cd9:	c6 47 19 41          	movb   $0x41,0x19(%rdi)
    1cdd:	c6 47 1a 5a          	movb   $0x5a,0x1a(%rdi)
    1ce1:	c6 47 1b 41          	movb   $0x41,0x1b(%rdi)
    1ce5:	c6 47 1c 59          	movb   $0x59,0x1c(%rdi)
    1ce9:	c6 47 1d 41          	movb   $0x41,0x1d(%rdi)
    1ced:	c6 47 1e 58          	movb   $0x58,0x1e(%rdi)
    1cf1:	c6 47 1f 41          	movb   $0x41,0x1f(%rdi)
    1cf5:	c6 47 20 89          	movb   $0x89,0x20(%rdi)
    1cf9:	83 ca c0             	or     $0xffffffc0,%edx
    1cfc:	88 57 21             	mov    %dl,0x21(%rdi)
    1cff:	c6 47 22 0f          	movb   $0xf,0x22(%rdi)
    1d03:	c6 47 23 1f          	movb   $0x1f,0x23(%rdi)
    1d07:	c6 47 24 00          	movb   $0x0,0x24(%rdi)
    1d0b:	c6 47 25 0f          	movb   $0xf,0x25(%rdi)
    1d0f:	c6 47 26 1f          	movb   $0x1f,0x26(%rdi)
    1d13:	c6 47 27 00          	movb   $0x0,0x27(%rdi)
    1d17:	b8 28 00 00 00       	mov    $0x28,%eax
    1d1c:	c3                   	ret    

0000000000001d1d <inject_unmap_segment>:
    1d1d:	f3 0f 1e fa          	endbr64 
    1d21:	48 01 f7             	add    %rsi,%rdi
    1d24:	c6 07 44             	movb   $0x44,(%rdi)
    1d27:	c6 47 01 89          	movb   $0x89,0x1(%rdi)
    1d2b:	c1 e2 03             	shl    $0x3,%edx
    1d2e:	83 ca c7             	or     $0xffffffc7,%edx
    1d31:	88 57 02             	mov    %dl,0x2(%rdi)
    1d34:	c6 47 03 41          	movb   $0x41,0x3(%rdi)
    1d38:	c6 47 04 50          	movb   $0x50,0x4(%rdi)
    1d3c:	c6 47 05 41          	movb   $0x41,0x5(%rdi)
    1d40:	c6 47 06 51          	movb   $0x51,0x6(%rdi)
    1d44:	c6 47 07 41          	movb   $0x41,0x7(%rdi)
    1d48:	c6 47 08 52          	movb   $0x52,0x8(%rdi)
    1d4c:	c6 47 09 41          	movb   $0x41,0x9(%rdi)
    1d50:	c6 47 0a 53          	movb   $0x53,0xa(%rdi)
    1d54:	c6 47 0b 48          	movb   $0x48,0xb(%rdi)
    1d58:	c6 47 0c b8          	movb   $0xb8,0xc(%rdi)
    1d5c:	48 8d 05 f3 f9 ff ff 	lea    -0x60d(%rip),%rax        # 1756 <unmap_segment>
    1d63:	48 89 47 0d          	mov    %rax,0xd(%rdi)
    1d67:	c6 47 15 ff          	movb   $0xff,0x15(%rdi)
    1d6b:	c6 47 16 d0          	movb   $0xd0,0x16(%rdi)
    1d6f:	c6 47 17 41          	movb   $0x41,0x17(%rdi)
    1d73:	c6 47 18 5b          	movb   $0x5b,0x18(%rdi)
    1d77:	c6 47 19 41          	movb   $0x41,0x19(%rdi)
    1d7b:	c6 47 1a 5a          	movb   $0x5a,0x1a(%rdi)
    1d7f:	c6 47 1b 41          	movb   $0x41,0x1b(%rdi)
    1d83:	c6 47 1c 59          	movb   $0x59,0x1c(%rdi)
    1d87:	c6 47 1d 41          	movb   $0x41,0x1d(%rdi)
    1d8b:	c6 47 1e 58          	movb   $0x58,0x1e(%rdi)
    1d8f:	c6 47 1f eb          	movb   $0xeb,0x1f(%rdi)
    1d93:	c6 47 20 07          	movb   $0x7,0x20(%rdi)
    1d97:	b8 28 00 00 00       	mov    $0x28,%eax
    1d9c:	c3                   	ret    

0000000000001d9d <inject_seg_load>:
    1d9d:	f3 0f 1e fa          	endbr64 
    1da1:	48 01 f7             	add    %rsi,%rdi
    1da4:	c6 07 48             	movb   $0x48,(%rdi)
    1da7:	c6 47 01 b8          	movb   $0xb8,0x1(%rdi)
    1dab:	48 8d 05 be 32 00 00 	lea    0x32be(%rip),%rax        # 5070 <gs+0x10>
    1db2:	48 89 47 02          	mov    %rax,0x2(%rdi)
    1db6:	c6 47 0a 48          	movb   $0x48,0xa(%rdi)
    1dba:	c6 47 0b 8b          	movb   $0x8b,0xb(%rdi)
    1dbe:	c6 47 0c 00          	movb   $0x0,0xc(%rdi)
    1dc2:	c6 47 0d 44          	movb   $0x44,0xd(%rdi)
    1dc6:	c6 47 0e 89          	movb   $0x89,0xe(%rdi)
    1dca:	c1 e1 03             	shl    $0x3,%ecx
    1dcd:	83 c9 c7             	or     $0xffffffc7,%ecx
    1dd0:	88 4f 0f             	mov    %cl,0xf(%rdi)
    1dd3:	c6 47 10 44          	movb   $0x44,0x10(%rdi)
    1dd7:	c6 47 11 89          	movb   $0x89,0x11(%rdi)
    1ddb:	41 c1 e0 03          	shl    $0x3,%r8d
    1ddf:	41 83 c8 c6          	or     $0xffffffc6,%r8d
    1de3:	44 88 47 12          	mov    %r8b,0x12(%rdi)
    1de7:	c6 47 13 48          	movb   $0x48,0x13(%rdi)
    1deb:	c6 47 14 8b          	movb   $0x8b,0x14(%rdi)
    1def:	c6 47 15 04          	movb   $0x4,0x15(%rdi)
    1df3:	c6 47 16 f8          	movb   $0xf8,0x16(%rdi)
    1df7:	c6 47 17 8b          	movb   $0x8b,0x17(%rdi)
    1dfb:	c6 47 18 04          	movb   $0x4,0x18(%rdi)
    1dff:	c6 47 19 b0          	movb   $0xb0,0x19(%rdi)
    1e03:	c6 47 1a 41          	movb   $0x41,0x1a(%rdi)
    1e07:	c6 47 1b 89          	movb   $0x89,0x1b(%rdi)
    1e0b:	83 ca c0             	or     $0xffffffc0,%edx
    1e0e:	88 57 1c             	mov    %dl,0x1c(%rdi)
    1e11:	c6 47 1d eb          	movb   $0xeb,0x1d(%rdi)
    1e15:	c6 47 1e 09          	movb   $0x9,0x1e(%rdi)
    1e19:	b8 28 00 00 00       	mov    $0x28,%eax
    1e1e:	c3                   	ret    

0000000000001e1f <inject_seg_store>:
    1e1f:	f3 0f 1e fa          	endbr64 
    1e23:	48 01 f7             	add    %rsi,%rdi
    1e26:	c6 07 48             	movb   $0x48,(%rdi)
    1e29:	c6 47 01 b8          	movb   $0xb8,0x1(%rdi)
    1e2d:	48 8d 05 3c 32 00 00 	lea    0x323c(%rip),%rax        # 5070 <gs+0x10>
    1e34:	48 89 47 02          	mov    %rax,0x2(%rdi)
    1e38:	c6 47 0a 48          	movb   $0x48,0xa(%rdi)
    1e3c:	c6 47 0b 8b          	movb   $0x8b,0xb(%rdi)
    1e40:	c6 47 0c 00          	movb   $0x0,0xc(%rdi)
    1e44:	c6 47 0d 44          	movb   $0x44,0xd(%rdi)
    1e48:	c6 47 0e 89          	movb   $0x89,0xe(%rdi)
    1e4c:	c1 e2 03             	shl    $0x3,%edx
    1e4f:	83 ca c7             	or     $0xffffffc7,%edx
    1e52:	88 57 0f             	mov    %dl,0xf(%rdi)
    1e55:	c6 47 10 44          	movb   $0x44,0x10(%rdi)
    1e59:	c6 47 11 89          	movb   $0x89,0x11(%rdi)
    1e5d:	c1 e1 03             	shl    $0x3,%ecx
    1e60:	83 c9 c6             	or     $0xffffffc6,%ecx
    1e63:	88 4f 12             	mov    %cl,0x12(%rdi)
    1e66:	c6 47 13 44          	movb   $0x44,0x13(%rdi)
    1e6a:	c6 47 14 89          	movb   $0x89,0x14(%rdi)
    1e6e:	41 c1 e0 03          	shl    $0x3,%r8d
    1e72:	41 83 c8 c2          	or     $0xffffffc2,%r8d
    1e76:	44 88 47 15          	mov    %r8b,0x15(%rdi)
    1e7a:	c6 47 16 48          	movb   $0x48,0x16(%rdi)
    1e7e:	c6 47 17 8b          	movb   $0x8b,0x17(%rdi)
    1e82:	c6 47 18 04          	movb   $0x4,0x18(%rdi)
    1e86:	c6 47 19 f8          	movb   $0xf8,0x19(%rdi)
    1e8a:	c6 47 1a 89          	movb   $0x89,0x1a(%rdi)
    1e8e:	c6 47 1b 14          	movb   $0x14,0x1b(%rdi)
    1e92:	c6 47 1c b0          	movb   $0xb0,0x1c(%rdi)
    1e96:	c6 47 1d eb          	movb   $0xeb,0x1d(%rdi)
    1e9a:	c6 47 1e 09          	movb   $0x9,0x1e(%rdi)
    1e9e:	b8 28 00 00 00       	mov    $0x28,%eax
    1ea3:	c3                   	ret    

0000000000001ea4 <inject_load_program>:
    1ea4:	f3 0f 1e fa          	endbr64 
    1ea8:	48 01 f7             	add    %rsi,%rdi
    1eab:	c6 07 44             	movb   $0x44,(%rdi)
    1eae:	c6 47 01 89          	movb   $0x89,0x1(%rdi)
    1eb2:	c1 e2 03             	shl    $0x3,%edx
    1eb5:	83 ca c7             	or     $0xffffffc7,%edx
    1eb8:	88 57 02             	mov    %dl,0x2(%rdi)
    1ebb:	c6 47 03 44          	movb   $0x44,0x3(%rdi)
    1ebf:	c6 47 04 89          	movb   $0x89,0x4(%rdi)
    1ec3:	c1 e1 03             	shl    $0x3,%ecx
    1ec6:	83 c9 c6             	or     $0xffffffc6,%ecx
    1ec9:	88 4f 05             	mov    %cl,0x5(%rdi)
    1ecc:	c6 47 06 41          	movb   $0x41,0x6(%rdi)
    1ed0:	c6 47 07 50          	movb   $0x50,0x7(%rdi)
    1ed4:	c6 47 08 41          	movb   $0x41,0x8(%rdi)
    1ed8:	c6 47 09 51          	movb   $0x51,0x9(%rdi)
    1edc:	c6 47 0a 41          	movb   $0x41,0xa(%rdi)
    1ee0:	c6 47 0b 52          	movb   $0x52,0xb(%rdi)
    1ee4:	c6 47 0c 41          	movb   $0x41,0xc(%rdi)
    1ee8:	c6 47 0d 53          	movb   $0x53,0xd(%rdi)
    1eec:	c6 47 0e 48          	movb   $0x48,0xe(%rdi)
    1ef0:	c6 47 0f b8          	movb   $0xb8,0xf(%rdi)
    1ef4:	48 8d 05 ab 01 00 00 	lea    0x1ab(%rip),%rax        # 20a6 <load_program>
    1efb:	48 89 47 10          	mov    %rax,0x10(%rdi)
    1eff:	c6 47 18 ff          	movb   $0xff,0x18(%rdi)
    1f03:	c6 47 19 d0          	movb   $0xd0,0x19(%rdi)
    1f07:	c6 47 1a 41          	movb   $0x41,0x1a(%rdi)
    1f0b:	c6 47 1b 5b          	movb   $0x5b,0x1b(%rdi)
    1f0f:	c6 47 1c 41          	movb   $0x41,0x1c(%rdi)
    1f13:	c6 47 1d 5a          	movb   $0x5a,0x1d(%rdi)
    1f17:	c6 47 1e 41          	movb   $0x41,0x1e(%rdi)
    1f1b:	c6 47 1f 59          	movb   $0x59,0x1f(%rdi)
    1f1f:	c6 47 20 41          	movb   $0x41,0x20(%rdi)
    1f23:	c6 47 21 58          	movb   $0x58,0x21(%rdi)
    1f27:	c6 47 22 0f          	movb   $0xf,0x22(%rdi)
    1f2b:	c6 47 23 1f          	movb   $0x1f,0x23(%rdi)
    1f2f:	c6 47 24 00          	movb   $0x0,0x24(%rdi)
    1f33:	c6 47 25 90          	movb   $0x90,0x25(%rdi)
    1f37:	c6 47 26 90          	movb   $0x90,0x26(%rdi)
    1f3b:	c6 47 27 c3          	movb   $0xc3,0x27(%rdi)
    1f3f:	b8 28 00 00 00       	mov    $0x28,%eax
    1f44:	c3                   	ret    

0000000000001f45 <compile_instruction>:
    1f45:	f3 0f 1e fa          	endbr64 
    1f49:	53                   	push   %rbx
    1f4a:	48 89 d3             	mov    %rdx,%rbx
    1f4d:	89 f0                	mov    %esi,%eax
    1f4f:	c1 e8 1c             	shr    $0x1c,%eax
    1f52:	83 f8 0d             	cmp    $0xd,%eax
    1f55:	74 39                	je     1f90 <compile_instruction+0x4b>
    1f57:	41 89 f0             	mov    %esi,%r8d
    1f5a:	41 83 e0 07          	and    $0x7,%r8d
    1f5e:	41 89 f1             	mov    %esi,%r9d
    1f61:	41 c1 e9 03          	shr    $0x3,%r9d
    1f65:	41 83 e1 07          	and    $0x7,%r9d
    1f69:	c1 ee 06             	shr    $0x6,%esi
    1f6c:	83 e6 07             	and    $0x7,%esi
    1f6f:	83 f8 0a             	cmp    $0xa,%eax
    1f72:	74 39                	je     1fad <compile_instruction+0x68>
    1f74:	83 f8 0c             	cmp    $0xc,%eax
    1f77:	0f 87 20 01 00 00    	ja     209d <compile_instruction+0x158>
    1f7d:	89 c0                	mov    %eax,%eax
    1f7f:	48 8d 15 aa 11 00 00 	lea    0x11aa(%rip),%rdx        # 3130 <__PRETTY_FUNCTION__.1+0xa8>
    1f86:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    1f8a:	48 01 d0             	add    %rdx,%rax
    1f8d:	3e ff e0             	notrack jmp *%rax
    1f90:	89 f1                	mov    %esi,%ecx
    1f92:	81 e1 ff ff ff 01    	and    $0x1ffffff,%ecx
    1f98:	c1 ee 19             	shr    $0x19,%esi
    1f9b:	89 f2                	mov    %esi,%edx
    1f9d:	83 e2 07             	and    $0x7,%edx
    1fa0:	48 89 de             	mov    %rbx,%rsi
    1fa3:	e8 56 fa ff ff       	call   19fe <load_reg>
    1fa8:	48 01 d8             	add    %rbx,%rax
    1fab:	eb 0e                	jmp    1fbb <compile_instruction+0x76>
    1fad:	44 89 c2             	mov    %r8d,%edx
    1fb0:	48 89 de             	mov    %rbx,%rsi
    1fb3:	e8 0a fc ff ff       	call   1bc2 <print_reg>
    1fb8:	48 01 d8             	add    %rbx,%rax
    1fbb:	5b                   	pop    %rbx
    1fbc:	c3                   	ret    
    1fbd:	44 89 c9             	mov    %r9d,%ecx
    1fc0:	89 f2                	mov    %esi,%edx
    1fc2:	48 89 de             	mov    %rbx,%rsi
    1fc5:	e8 6d fa ff ff       	call   1a37 <add_regs>
    1fca:	48 01 d8             	add    %rbx,%rax
    1fcd:	eb ec                	jmp    1fbb <compile_instruction+0x76>
    1fcf:	48 89 de             	mov    %rbx,%rsi
    1fd2:	e8 a7 fa ff ff       	call   1a7e <handle_halt>
    1fd7:	48 01 d8             	add    %rbx,%rax
    1fda:	eb df                	jmp    1fbb <compile_instruction+0x76>
    1fdc:	44 89 c9             	mov    %r9d,%ecx
    1fdf:	89 f2                	mov    %esi,%edx
    1fe1:	48 89 de             	mov    %rbx,%rsi
    1fe4:	e8 86 fb ff ff       	call   1b6f <nand_regs>
    1fe9:	48 01 d8             	add    %rbx,%rax
    1fec:	eb cd                	jmp    1fbb <compile_instruction+0x76>
    1fee:	44 89 c9             	mov    %r9d,%ecx
    1ff1:	89 f2                	mov    %esi,%edx
    1ff3:	48 89 de             	mov    %rbx,%rsi
    1ff6:	e8 9f fa ff ff       	call   1a9a <mult_regs>
    1ffb:	48 01 d8             	add    %rbx,%rax
    1ffe:	eb bb                	jmp    1fbb <compile_instruction+0x76>
    2000:	44 89 c9             	mov    %r9d,%ecx
    2003:	89 f2                	mov    %esi,%edx
    2005:	48 89 de             	mov    %rbx,%rsi
    2008:	e8 d0 fa ff ff       	call   1add <div_regs>
    200d:	48 01 d8             	add    %rbx,%rax
    2010:	eb a9                	jmp    1fbb <compile_instruction+0x76>
    2012:	44 89 c9             	mov    %r9d,%ecx
    2015:	89 f2                	mov    %esi,%edx
    2017:	48 89 de             	mov    %rbx,%rsi
    201a:	e8 0d fb ff ff       	call   1b2c <cond_move>
    201f:	48 01 d8             	add    %rbx,%rax
    2022:	eb 97                	jmp    1fbb <compile_instruction+0x76>
    2024:	44 89 c2             	mov    %r8d,%edx
    2027:	48 89 de             	mov    %rbx,%rsi
    202a:	e8 13 fc ff ff       	call   1c42 <read_into_reg>
    202f:	48 01 d8             	add    %rbx,%rax
    2032:	eb 87                	jmp    1fbb <compile_instruction+0x76>
    2034:	44 89 c9             	mov    %r9d,%ecx
    2037:	89 f2                	mov    %esi,%edx
    2039:	48 89 de             	mov    %rbx,%rsi
    203c:	e8 5c fd ff ff       	call   1d9d <inject_seg_load>
    2041:	48 01 d8             	add    %rbx,%rax
    2044:	e9 72 ff ff ff       	jmp    1fbb <compile_instruction+0x76>
    2049:	44 89 c9             	mov    %r9d,%ecx
    204c:	89 f2                	mov    %esi,%edx
    204e:	48 89 de             	mov    %rbx,%rsi
    2051:	e8 c9 fd ff ff       	call   1e1f <inject_seg_store>
    2056:	48 01 d8             	add    %rbx,%rax
    2059:	e9 5d ff ff ff       	jmp    1fbb <compile_instruction+0x76>
    205e:	44 89 c1             	mov    %r8d,%ecx
    2061:	44 89 ca             	mov    %r9d,%edx
    2064:	48 89 de             	mov    %rbx,%rsi
    2067:	e8 38 fe ff ff       	call   1ea4 <inject_load_program>
    206c:	48 01 d8             	add    %rbx,%rax
    206f:	e9 47 ff ff ff       	jmp    1fbb <compile_instruction+0x76>
    2074:	44 89 c1             	mov    %r8d,%ecx
    2077:	44 89 ca             	mov    %r9d,%edx
    207a:	48 89 de             	mov    %rbx,%rsi
    207d:	e8 fd fb ff ff       	call   1c7f <inject_map_segment>
    2082:	48 01 d8             	add    %rbx,%rax
    2085:	e9 31 ff ff ff       	jmp    1fbb <compile_instruction+0x76>
    208a:	44 89 c2             	mov    %r8d,%edx
    208d:	48 89 de             	mov    %rbx,%rsi
    2090:	e8 88 fc ff ff       	call   1d1d <inject_unmap_segment>
    2095:	48 01 d8             	add    %rbx,%rax
    2098:	e9 1e ff ff ff       	jmp    1fbb <compile_instruction+0x76>
    209d:	48 8d 43 28          	lea    0x28(%rbx),%rax
    20a1:	e9 15 ff ff ff       	jmp    1fbb <compile_instruction+0x76>

00000000000020a6 <load_program>:
    20a6:	f3 0f 1e fa          	endbr64 
    20aa:	55                   	push   %rbp
    20ab:	53                   	push   %rbx
    20ac:	48 83 ec 18          	sub    $0x18,%rsp
    20b0:	89 35 aa 2f 00 00    	mov    %esi,0x2faa(%rip)        # 5060 <gs>
    20b6:	48 8b 2d ab 2f 00 00 	mov    0x2fab(%rip),%rbp        # 5068 <gs+0x8>
    20bd:	85 ff                	test   %edi,%edi
    20bf:	75 0a                	jne    20cb <load_program+0x25>
    20c1:	48 89 e8             	mov    %rbp,%rax
    20c4:	48 83 c4 18          	add    $0x18,%rsp
    20c8:	5b                   	pop    %rbx
    20c9:	5d                   	pop    %rbp
    20ca:	c3                   	ret    
    20cb:	89 fd                	mov    %edi,%ebp
    20cd:	48 8b 05 a4 2f 00 00 	mov    0x2fa4(%rip),%rax        # 5078 <gs+0x18>
    20d4:	8b 04 a8             	mov    (%rax,%rbp,4),%eax
    20d7:	89 04 24             	mov    %eax,(%rsp)
    20da:	89 c6                	mov    %eax,%esi
    20dc:	48 89 f7             	mov    %rsi,%rdi
    20df:	be 04 00 00 00       	mov    $0x4,%esi
    20e4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    20e9:	e8 a2 f0 ff ff       	call   1190 <calloc@plt>
    20ee:	48 8b 1d 7b 2f 00 00 	mov    0x2f7b(%rip),%rbx        # 5070 <gs+0x10>
    20f5:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    20fa:	48 8d 14 b5 00 00 00 	lea    0x0(,%rsi,4),%rdx
    2101:	00 
    2102:	48 8b 34 eb          	mov    (%rbx,%rbp,8),%rsi
    2106:	48 89 c5             	mov    %rax,%rbp
    2109:	48 89 c7             	mov    %rax,%rdi
    210c:	e8 9f f0 ff ff       	call   11b0 <memcpy@plt>
    2111:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
    2116:	48 89 2b             	mov    %rbp,(%rbx)
    2119:	48 8b 05 58 2f 00 00 	mov    0x2f58(%rip),%rax        # 5078 <gs+0x18>
    2120:	8b 0c 24             	mov    (%rsp),%ecx
    2123:	89 08                	mov    %ecx,(%rax)
    2125:	8d 04 89             	lea    (%rcx,%rcx,4),%eax
    2128:	c1 e0 03             	shl    $0x3,%eax
    212b:	89 c3                	mov    %eax,%ebx
    212d:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    2133:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    2139:	b9 22 00 00 00       	mov    $0x22,%ecx
    213e:	ba 07 00 00 00       	mov    $0x7,%edx
    2143:	48 89 de             	mov    %rbx,%rsi
    2146:	bf 00 00 00 00       	mov    $0x0,%edi
    214b:	e8 10 f0 ff ff       	call   1160 <mmap@plt>
    2150:	48 89 c5             	mov    %rax,%rbp
    2153:	48 89 da             	mov    %rbx,%rdx
    2156:	be 00 00 00 00       	mov    $0x0,%esi
    215b:	48 89 c7             	mov    %rax,%rdi
    215e:	e8 1d f0 ff ff       	call   1180 <memset@plt>
    2163:	8b 04 24             	mov    (%rsp),%eax
    2166:	85 c0                	test   %eax,%eax
    2168:	74 2d                	je     2197 <load_program+0xf1>
    216a:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    216f:	4c 89 d3             	mov    %r10,%rbx
    2172:	89 c0                	mov    %eax,%eax
    2174:	49 8d 04 82          	lea    (%r10,%rax,4),%rax
    2178:	48 89 04 24          	mov    %rax,(%rsp)
    217c:	b8 00 00 00 00       	mov    $0x0,%eax
    2181:	89 c2                	mov    %eax,%edx
    2183:	8b 33                	mov    (%rbx),%esi
    2185:	48 89 ef             	mov    %rbp,%rdi
    2188:	e8 b8 fd ff ff       	call   1f45 <compile_instruction>
    218d:	48 83 c3 04          	add    $0x4,%rbx
    2191:	48 3b 1c 24          	cmp    (%rsp),%rbx
    2195:	75 ea                	jne    2181 <load_program+0xdb>
    2197:	48 89 2d ca 2e 00 00 	mov    %rbp,0x2eca(%rip)        # 5068 <gs+0x8>
    219e:	e9 1e ff ff ff       	jmp    20c1 <load_program+0x1b>

Disassembly of section .fini:

00000000000021a4 <_fini>:
    21a4:	f3 0f 1e fa          	endbr64 
    21a8:	48 83 ec 08          	sub    $0x8,%rsp
    21ac:	48 83 c4 08          	add    $0x8,%rsp
    21b0:	c3                   	ret    
