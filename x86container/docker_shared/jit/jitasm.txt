
jit:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d1 3f 00 00 	mov    0x3fd1(%rip),%rax        # 4fe0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <free@plt-0x10>:
    1020:	ff 35 0a 3f 00 00    	push   0x3f0a(%rip)        # 4f30 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 0c 3f 00 00    	jmp    *0x3f0c(%rip)        # 4f38 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <free@plt>:
    1030:	ff 25 0a 3f 00 00    	jmp    *0x3f0a(%rip)        # 4f40 <free@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <puts@plt>:
    1040:	ff 25 02 3f 00 00    	jmp    *0x3f02(%rip)        # 4f48 <puts@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <fclose@plt>:
    1050:	ff 25 fa 3e 00 00    	jmp    *0x3efa(%rip)        # 4f50 <fclose@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <__stack_chk_fail@plt>:
    1060:	ff 25 f2 3e 00 00    	jmp    *0x3ef2(%rip)        # 4f58 <__stack_chk_fail@GLIBC_2.4>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <mmap@plt>:
    1070:	ff 25 ea 3e 00 00    	jmp    *0x3eea(%rip)        # 4f60 <mmap@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	push   $0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <__assert_fail@plt>:
    1080:	ff 25 e2 3e 00 00    	jmp    *0x3ee2(%rip)        # 4f68 <__assert_fail@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	push   $0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <memset@plt>:
    1090:	ff 25 da 3e 00 00    	jmp    *0x3eda(%rip)        # 4f70 <memset@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	push   $0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010a0 <fputc@plt>:
    10a0:	ff 25 d2 3e 00 00    	jmp    *0x3ed2(%rip)        # 4f78 <fputc@GLIBC_2.2.5>
    10a6:	68 07 00 00 00       	push   $0x7
    10ab:	e9 70 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010b0 <calloc@plt>:
    10b0:	ff 25 ca 3e 00 00    	jmp    *0x3eca(%rip)        # 4f80 <calloc@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	push   $0x8
    10bb:	e9 60 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010c0 <stat@plt>:
    10c0:	ff 25 c2 3e 00 00    	jmp    *0x3ec2(%rip)        # 4f88 <stat@GLIBC_2.33>
    10c6:	68 09 00 00 00       	push   $0x9
    10cb:	e9 50 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010d0 <memcpy@plt>:
    10d0:	ff 25 ba 3e 00 00    	jmp    *0x3eba(%rip)        # 4f90 <memcpy@GLIBC_2.14>
    10d6:	68 0a 00 00 00       	push   $0xa
    10db:	e9 40 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010e0 <realloc@plt>:
    10e0:	ff 25 b2 3e 00 00    	jmp    *0x3eb2(%rip)        # 4f98 <realloc@GLIBC_2.2.5>
    10e6:	68 0b 00 00 00       	push   $0xb
    10eb:	e9 30 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010f0 <fopen@plt>:
    10f0:	ff 25 aa 3e 00 00    	jmp    *0x3eaa(%rip)        # 4fa0 <fopen@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	push   $0xc
    10fb:	e9 20 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001100 <fwrite@plt>:
    1100:	ff 25 a2 3e 00 00    	jmp    *0x3ea2(%rip)        # 4fa8 <fwrite@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	push   $0xd
    110b:	e9 10 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001110 <__fprintf_chk@plt>:
    1110:	ff 25 9a 3e 00 00    	jmp    *0x3e9a(%rip)        # 4fb0 <__fprintf_chk@GLIBC_2.3.4>
    1116:	68 0e 00 00 00       	push   $0xe
    111b:	e9 00 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001120 <getc@plt>:
    1120:	ff 25 92 3e 00 00    	jmp    *0x3e92(%rip)        # 4fb8 <getc@GLIBC_2.2.5>
    1126:	68 0f 00 00 00       	push   $0xf
    112b:	e9 f0 fe ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001130 <__cxa_finalize@plt>:
    1130:	ff 25 ba 3e 00 00    	jmp    *0x3eba(%rip)        # 4ff0 <__cxa_finalize@GLIBC_2.2.5>
    1136:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001140 <main>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	55                   	push   %rbp
    1145:	53                   	push   %rbx
    1146:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
    114d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1154:	00 00 
    1156:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    115d:	00 
    115e:	31 c0                	xor    %eax,%eax
    1160:	83 ff 02             	cmp    $0x2,%edi
    1163:	74 46                	je     11ab <main+0x6b>
    1165:	48 8b 05 8c 3e 00 00 	mov    0x3e8c(%rip),%rax        # 4ff8 <stderr@GLIBC_2.2.5>
    116c:	ba 1c 00 00 00       	mov    $0x1c,%edx
    1171:	be 01 00 00 00       	mov    $0x1,%esi
    1176:	48 8d 3d c7 1e 00 00 	lea    0x1ec7(%rip),%rdi        # 3044 <_IO_stdin_used+0x44>
    117d:	48 8b 08             	mov    (%rax),%rcx
    1180:	e8 7b ff ff ff       	call   1100 <fwrite@plt>
    1185:	b8 01 00 00 00       	mov    $0x1,%eax
    118a:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    1191:	00 
    1192:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1199:	00 00 
    119b:	0f 85 a9 01 00 00    	jne    134a <main+0x20a>
    11a1:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
    11a8:	5b                   	pop    %rbx
    11a9:	5d                   	pop    %rbp
    11aa:	c3                   	ret    
    11ab:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
    11af:	48 89 f5             	mov    %rsi,%rbp
    11b2:	48 8d 35 a8 1e 00 00 	lea    0x1ea8(%rip),%rsi        # 3061 <_IO_stdin_used+0x61>
    11b9:	e8 32 ff ff ff       	call   10f0 <fopen@plt>
    11be:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    11c3:	48 85 c0             	test   %rax,%rax
    11c6:	0f 84 a2 01 00 00    	je     136e <main+0x22e>
    11cc:	b9 bd 1f 00 00       	mov    $0x1fbd,%ecx
    11d1:	be 08 00 00 00       	mov    $0x8,%esi
    11d6:	bf f4 7e 00 00       	mov    $0x7ef4,%edi
    11db:	48 8d 1d 5e 3e 00 00 	lea    0x3e5e(%rip),%rbx        # 5040 <gs>
    11e2:	48 c1 e1 22          	shl    $0x22,%rcx
    11e6:	48 89 4b 1c          	mov    %rcx,0x1c(%rbx)
    11ea:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
    11f0:	e8 bb fe ff ff       	call   10b0 <calloc@plt>
    11f5:	be 04 00 00 00       	mov    $0x4,%esi
    11fa:	bf f4 7e 00 00       	mov    $0x7ef4,%edi
    11ff:	48 89 43 0c          	mov    %rax,0xc(%rbx)
    1203:	e8 a8 fe ff ff       	call   10b0 <calloc@plt>
    1208:	b9 bd 1f 00 00       	mov    $0x1fbd,%ecx
    120d:	be 04 00 00 00       	mov    $0x4,%esi
    1212:	bf f4 7e 00 00       	mov    $0x7ef4,%edi
    1217:	48 c1 e1 22          	shl    $0x22,%rcx
    121b:	48 89 43 14          	mov    %rax,0x14(%rbx)
    121f:	48 89 4b 2c          	mov    %rcx,0x2c(%rbx)
    1223:	e8 88 fe ff ff       	call   10b0 <calloc@plt>
    1228:	48 c7 43 04 00 00 00 	movq   $0x0,0x4(%rbx)
    122f:	00 
    1230:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    1234:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
    1239:	48 89 43 24          	mov    %rax,0x24(%rbx)
    123d:	e8 7e fe ff ff       	call   10c0 <stat@plt>
    1242:	85 c0                	test   %eax,%eax
    1244:	0f 85 f9 00 00 00    	jne    1343 <main+0x203>
    124a:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
    124f:	f6 c1 03             	test   $0x3,%cl
    1252:	0f 85 f7 00 00 00    	jne    134f <main+0x20f>
    1258:	48 6b f9 0a          	imul   $0xa,%rcx,%rdi
    125c:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    1261:	e8 5a 04 00 00       	call   16c0 <initialize_zero_segment>
    1266:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    126b:	be 04 00 00 00       	mov    $0x4,%esi
    1270:	48 89 c5             	mov    %rax,%rbp
    1273:	e8 38 fe ff ff       	call   10b0 <calloc@plt>
    1278:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    127d:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    1282:	48 89 ef             	mov    %rbp,%rdi
    1285:	48 89 c6             	mov    %rax,%rsi
    1288:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    128d:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    1292:	e8 99 0c 00 00       	call   1f30 <load_zero_segment>
    1297:	48 8b 53 0c          	mov    0xc(%rbx),%rdx
    129b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    12a0:	48 8d 3d eb 1d 00 00 	lea    0x1deb(%rip),%rdi        # 3092 <_IO_stdin_used+0x92>
    12a7:	48 89 02             	mov    %rax,(%rdx)
    12aa:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    12af:	48 8b 53 14          	mov    0x14(%rbx),%rdx
    12b3:	48 c1 e8 02          	shr    $0x2,%rax
    12b7:	89 02                	mov    %eax,(%rdx)
    12b9:	48 89 6b 04          	mov    %rbp,0x4(%rbx)
    12bd:	83 43 1c 01          	addl   $0x1,0x1c(%rbx)
    12c1:	e8 7a fd ff ff       	call   1040 <puts@plt>
    12c6:	2e 44                	cs rex.R
    12c8:	45                   	rex.RB
    12c9:	41                   	rex.B
    12ca:	44                   	rex.R
    12cb:	42                   	rex.X
    12cc:	45                   	rex.RB
    12cd:	45                   	rex.RB
    12ce:	46 e8 90 0e 00 00    	rex.RX call 2164 <zero_regs>
    12d4:	48 85 ed             	test   %rbp,%rbp
    12d7:	74 1c                	je     12f5 <main+0x1b5>
    12d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    12e0:	8b 03                	mov    (%rbx),%eax
    12e2:	8d 04 80             	lea    (%rax,%rax,4),%eax
    12e5:	c1 e0 03             	shl    $0x3,%eax
    12e8:	48 01 e8             	add    %rbp,%rax
    12eb:	ff d0                	call   *%rax
    12ed:	48 89 c5             	mov    %rax,%rbp
    12f0:	48 85 c0             	test   %rax,%rax
    12f3:	75 eb                	jne    12e0 <main+0x1a0>
    12f5:	83 7b 1c 00          	cmpl   $0x0,0x1c(%rbx)
    12f9:	74 1c                	je     1317 <main+0x1d7>
    12fb:	31 ed                	xor    %ebp,%ebp
    12fd:	0f 1f 00             	nopl   (%rax)
    1300:	48 8b 53 0c          	mov    0xc(%rbx),%rdx
    1304:	89 e9                	mov    %ebp,%ecx
    1306:	83 c5 01             	add    $0x1,%ebp
    1309:	48 8b 3c ca          	mov    (%rdx,%rcx,8),%rdi
    130d:	e8 1e fd ff ff       	call   1030 <free@plt>
    1312:	39 6b 1c             	cmp    %ebp,0x1c(%rbx)
    1315:	77 e9                	ja     1300 <main+0x1c0>
    1317:	48 8b 7b 0c          	mov    0xc(%rbx),%rdi
    131b:	e8 10 fd ff ff       	call   1030 <free@plt>
    1320:	48 8b 7b 14          	mov    0x14(%rbx),%rdi
    1324:	e8 07 fd ff ff       	call   1030 <free@plt>
    1329:	48 8b 7b 24          	mov    0x24(%rbx),%rdi
    132d:	e8 fe fc ff ff       	call   1030 <free@plt>
    1332:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    1337:	e8 14 fd ff ff       	call   1050 <fclose@plt>
    133c:	31 c0                	xor    %eax,%eax
    133e:	e9 47 fe ff ff       	jmp    118a <main+0x4a>
    1343:	31 c9                	xor    %ecx,%ecx
    1345:	e9 0e ff ff ff       	jmp    1258 <main+0x118>
    134a:	e8 11 fd ff ff       	call   1060 <__stack_chk_fail@plt>
    134f:	48 8d 0d d2 1d 00 00 	lea    0x1dd2(%rip),%rcx        # 3128 <__PRETTY_FUNCTION__.2>
    1356:	ba 7a 00 00 00       	mov    $0x7a,%edx
    135b:	48 8d 35 a2 1c 00 00 	lea    0x1ca2(%rip),%rsi        # 3004 <_IO_stdin_used+0x4>
    1362:	48 8d 3d 18 1d 00 00 	lea    0x1d18(%rip),%rdi        # 3081 <_IO_stdin_used+0x81>
    1369:	e8 12 fd ff ff       	call   1080 <__assert_fail@plt>
    136e:	48 8b 05 83 3c 00 00 	mov    0x3c83(%rip),%rax        # 4ff8 <stderr@GLIBC_2.2.5>
    1375:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
    1379:	be 01 00 00 00       	mov    $0x1,%esi
    137e:	48 8d 15 de 1c 00 00 	lea    0x1cde(%rip),%rdx        # 3063 <_IO_stdin_used+0x63>
    1385:	48 8b 38             	mov    (%rax),%rdi
    1388:	31 c0                	xor    %eax,%eax
    138a:	e8 81 fd ff ff       	call   1110 <__fprintf_chk@plt>
    138f:	b8 01 00 00 00       	mov    $0x1,%eax
    1394:	e9 f1 fd ff ff       	jmp    118a <main+0x4a>
    1399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000013a0 <_start>:
    13a0:	f3 0f 1e fa          	endbr64 
    13a4:	31 ed                	xor    %ebp,%ebp
    13a6:	49 89 d1             	mov    %rdx,%r9
    13a9:	5e                   	pop    %rsi
    13aa:	48 89 e2             	mov    %rsp,%rdx
    13ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    13b1:	50                   	push   %rax
    13b2:	54                   	push   %rsp
    13b3:	45 31 c0             	xor    %r8d,%r8d
    13b6:	31 c9                	xor    %ecx,%ecx
    13b8:	48 8d 3d 81 fd ff ff 	lea    -0x27f(%rip),%rdi        # 1140 <main>
    13bf:	ff 15 03 3c 00 00    	call   *0x3c03(%rip)        # 4fc8 <__libc_start_main@GLIBC_2.34>
    13c5:	f4                   	hlt    
    13c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    13cd:	00 00 00 

00000000000013d0 <deregister_tm_clones>:
    13d0:	48 8d 3d 39 3c 00 00 	lea    0x3c39(%rip),%rdi        # 5010 <__TMC_END__>
    13d7:	48 8d 05 32 3c 00 00 	lea    0x3c32(%rip),%rax        # 5010 <__TMC_END__>
    13de:	48 39 f8             	cmp    %rdi,%rax
    13e1:	74 15                	je     13f8 <deregister_tm_clones+0x28>
    13e3:	48 8b 05 e6 3b 00 00 	mov    0x3be6(%rip),%rax        # 4fd0 <_ITM_deregisterTMCloneTable@Base>
    13ea:	48 85 c0             	test   %rax,%rax
    13ed:	74 09                	je     13f8 <deregister_tm_clones+0x28>
    13ef:	ff e0                	jmp    *%rax
    13f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    13f8:	c3                   	ret    
    13f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001400 <register_tm_clones>:
    1400:	48 8d 3d 09 3c 00 00 	lea    0x3c09(%rip),%rdi        # 5010 <__TMC_END__>
    1407:	48 8d 35 02 3c 00 00 	lea    0x3c02(%rip),%rsi        # 5010 <__TMC_END__>
    140e:	48 29 fe             	sub    %rdi,%rsi
    1411:	48 89 f0             	mov    %rsi,%rax
    1414:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1418:	48 c1 f8 03          	sar    $0x3,%rax
    141c:	48 01 c6             	add    %rax,%rsi
    141f:	48 d1 fe             	sar    %rsi
    1422:	74 14                	je     1438 <register_tm_clones+0x38>
    1424:	48 8b 05 bd 3b 00 00 	mov    0x3bbd(%rip),%rax        # 4fe8 <_ITM_registerTMCloneTable@Base>
    142b:	48 85 c0             	test   %rax,%rax
    142e:	74 08                	je     1438 <register_tm_clones+0x38>
    1430:	ff e0                	jmp    *%rax
    1432:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1438:	c3                   	ret    
    1439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001440 <__do_global_dtors_aux>:
    1440:	f3 0f 1e fa          	endbr64 
    1444:	80 3d d5 3b 00 00 00 	cmpb   $0x0,0x3bd5(%rip)        # 5020 <completed.0>
    144b:	75 2b                	jne    1478 <__do_global_dtors_aux+0x38>
    144d:	55                   	push   %rbp
    144e:	48 83 3d 9a 3b 00 00 	cmpq   $0x0,0x3b9a(%rip)        # 4ff0 <__cxa_finalize@GLIBC_2.2.5>
    1455:	00 
    1456:	48 89 e5             	mov    %rsp,%rbp
    1459:	74 0c                	je     1467 <__do_global_dtors_aux+0x27>
    145b:	48 8b 3d a6 3b 00 00 	mov    0x3ba6(%rip),%rdi        # 5008 <__dso_handle>
    1462:	e8 c9 fc ff ff       	call   1130 <__cxa_finalize@plt>
    1467:	e8 64 ff ff ff       	call   13d0 <deregister_tm_clones>
    146c:	c6 05 ad 3b 00 00 01 	movb   $0x1,0x3bad(%rip)        # 5020 <completed.0>
    1473:	5d                   	pop    %rbp
    1474:	c3                   	ret    
    1475:	0f 1f 00             	nopl   (%rax)
    1478:	c3                   	ret    
    1479:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001480 <frame_dummy>:
    1480:	f3 0f 1e fa          	endbr64 
    1484:	e9 77 ff ff ff       	jmp    1400 <register_tm_clones>
    1489:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001490 <read_char>:
    1490:	f3 0f 1e fa          	endbr64 
    1494:	48 83 ec 08          	sub    $0x8,%rsp
    1498:	48 8b 05 39 3b 00 00 	mov    0x3b39(%rip),%rax        # 4fd8 <stdin@GLIBC_2.2.5>
    149f:	48 8b 38             	mov    (%rax),%rdi
    14a2:	e8 79 fc ff ff       	call   1120 <getc@plt>
    14a7:	48 83 c4 08          	add    $0x8,%rsp
    14ab:	c3                   	ret    
    14ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000014b0 <map_segment>:
    14b0:	f3 0f 1e fa          	endbr64 
    14b4:	55                   	push   %rbp
    14b5:	89 fa                	mov    %edi,%edx
    14b7:	53                   	push   %rbx
    14b8:	48 83 ec 28          	sub    $0x28,%rsp
    14bc:	48 8d 1d 7d 3b 00 00 	lea    0x3b7d(%rip),%rbx        # 5040 <gs>
    14c3:	8b 43 2c             	mov    0x2c(%rbx),%eax
    14c6:	85 c0                	test   %eax,%eax
    14c8:	75 1e                	jne    14e8 <map_segment+0x38>
    14ca:	8b 6b 1c             	mov    0x1c(%rbx),%ebp
    14cd:	3b 6b 20             	cmp    0x20(%rbx),%ebp
    14d0:	0f 84 a2 00 00 00    	je     1578 <map_segment+0xc8>
    14d6:	48 8b 43 0c          	mov    0xc(%rbx),%rax
    14da:	8d 4d 01             	lea    0x1(%rbp),%ecx
    14dd:	89 4b 1c             	mov    %ecx,0x1c(%rbx)
    14e0:	eb 17                	jmp    14f9 <map_segment+0x49>
    14e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    14e8:	48 8b 4b 24          	mov    0x24(%rbx),%rcx
    14ec:	83 e8 01             	sub    $0x1,%eax
    14ef:	89 43 2c             	mov    %eax,0x2c(%rbx)
    14f2:	8b 2c 81             	mov    (%rcx,%rax,4),%ebp
    14f5:	48 8b 43 0c          	mov    0xc(%rbx),%rax
    14f9:	89 e9                	mov    %ebp,%ecx
    14fb:	41 89 d0             	mov    %edx,%r8d
    14fe:	4c 8d 0c c8          	lea    (%rax,%rcx,8),%r9
    1502:	49 c1 e0 02          	shl    $0x2,%r8
    1506:	49 8b 39             	mov    (%r9),%rdi
    1509:	48 85 ff             	test   %rdi,%rdi
    150c:	74 09                	je     1517 <map_segment+0x67>
    150e:	48 8b 43 14          	mov    0x14(%rbx),%rax
    1512:	39 14 88             	cmp    %edx,(%rax,%rcx,4)
    1515:	73 47                	jae    155e <map_segment+0xae>
    1517:	4c 89 c6             	mov    %r8,%rsi
    151a:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    151e:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    1523:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    1528:	4c 89 04 24          	mov    %r8,(%rsp)
    152c:	e8 af fb ff ff       	call   10e0 <realloc@plt>
    1531:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    1536:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    153b:	4c 8b 04 24          	mov    (%rsp),%r8
    153f:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    1543:	49 89 01             	mov    %rax,(%r9)
    1546:	48 8b 43 0c          	mov    0xc(%rbx),%rax
    154a:	48 8b 3c c8          	mov    (%rax,%rcx,8),%rdi
    154e:	48 85 ff             	test   %rdi,%rdi
    1551:	0f 84 9e 00 00 00    	je     15f5 <map_segment+0x145>
    1557:	48 8b 43 14          	mov    0x14(%rbx),%rax
    155b:	89 14 88             	mov    %edx,(%rax,%rcx,4)
    155e:	4c 89 c2             	mov    %r8,%rdx
    1561:	31 f6                	xor    %esi,%esi
    1563:	e8 28 fb ff ff       	call   1090 <memset@plt>
    1568:	48 83 c4 28          	add    $0x28,%rsp
    156c:	89 e8                	mov    %ebp,%eax
    156e:	5b                   	pop    %rbx
    156f:	5d                   	pop    %rbp
    1570:	c3                   	ret    
    1571:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1578:	01 ed                	add    %ebp,%ebp
    157a:	89 3c 24             	mov    %edi,(%rsp)
    157d:	48 8b 7b 14          	mov    0x14(%rbx),%rdi
    1581:	48 8d 34 ad 00 00 00 	lea    0x0(,%rbp,4),%rsi
    1588:	00 
    1589:	89 6b 20             	mov    %ebp,0x20(%rbx)
    158c:	e8 4f fb ff ff       	call   10e0 <realloc@plt>
    1591:	8b 14 24             	mov    (%rsp),%edx
    1594:	48 85 c0             	test   %rax,%rax
    1597:	48 89 43 14          	mov    %rax,0x14(%rbx)
    159b:	0f 84 92 00 00 00    	je     1633 <map_segment+0x183>
    15a1:	8b 73 20             	mov    0x20(%rbx),%esi
    15a4:	48 8b 7b 0c          	mov    0xc(%rbx),%rdi
    15a8:	89 14 24             	mov    %edx,(%rsp)
    15ab:	48 c1 e6 03          	shl    $0x3,%rsi
    15af:	e8 2c fb ff ff       	call   10e0 <realloc@plt>
    15b4:	8b 14 24             	mov    (%rsp),%edx
    15b7:	48 85 c0             	test   %rax,%rax
    15ba:	48 89 43 0c          	mov    %rax,0xc(%rbx)
    15be:	74 54                	je     1614 <map_segment+0x164>
    15c0:	8b 6b 1c             	mov    0x1c(%rbx),%ebp
    15c3:	3b 6b 20             	cmp    0x20(%rbx),%ebp
    15c6:	0f 83 0e ff ff ff    	jae    14da <map_segment+0x2a>
    15cc:	0f 1f 40 00          	nopl   0x0(%rax)
    15d0:	89 e9                	mov    %ebp,%ecx
    15d2:	83 c5 01             	add    $0x1,%ebp
    15d5:	48 c7 04 c8 00 00 00 	movq   $0x0,(%rax,%rcx,8)
    15dc:	00 
    15dd:	48 8b 73 14          	mov    0x14(%rbx),%rsi
    15e1:	c7 04 8e 00 00 00 00 	movl   $0x0,(%rsi,%rcx,4)
    15e8:	39 6b 20             	cmp    %ebp,0x20(%rbx)
    15eb:	77 e3                	ja     15d0 <map_segment+0x120>
    15ed:	8b 6b 1c             	mov    0x1c(%rbx),%ebp
    15f0:	e9 e5 fe ff ff       	jmp    14da <map_segment+0x2a>
    15f5:	48 8d 0d fc 1a 00 00 	lea    0x1afc(%rip),%rcx        # 30f8 <__PRETTY_FUNCTION__.0>
    15fc:	ba 71 03 00 00       	mov    $0x371,%edx
    1601:	48 8d 35 fc 19 00 00 	lea    0x19fc(%rip),%rsi        # 3004 <_IO_stdin_used+0x4>
    1608:	48 8d 3d 91 1a 00 00 	lea    0x1a91(%rip),%rdi        # 30a0 <_IO_stdin_used+0xa0>
    160f:	e8 6c fa ff ff       	call   1080 <__assert_fail@plt>
    1614:	48 8d 0d dd 1a 00 00 	lea    0x1add(%rip),%rcx        # 30f8 <__PRETTY_FUNCTION__.0>
    161b:	ba 5a 03 00 00       	mov    $0x35a,%edx
    1620:	48 8d 35 dd 19 00 00 	lea    0x19dd(%rip),%rsi        # 3004 <_IO_stdin_used+0x4>
    1627:	48 8d 3d f0 19 00 00 	lea    0x19f0(%rip),%rdi        # 301e <_IO_stdin_used+0x1e>
    162e:	e8 4d fa ff ff       	call   1080 <__assert_fail@plt>
    1633:	48 8d 0d be 1a 00 00 	lea    0x1abe(%rip),%rcx        # 30f8 <__PRETTY_FUNCTION__.0>
    163a:	ba 56 03 00 00       	mov    $0x356,%edx
    163f:	48 8d 35 be 19 00 00 	lea    0x19be(%rip),%rsi        # 3004 <_IO_stdin_used+0x4>
    1646:	48 8d 3d bd 19 00 00 	lea    0x19bd(%rip),%rdi        # 300a <_IO_stdin_used+0xa>
    164d:	e8 2e fa ff ff       	call   1080 <__assert_fail@plt>
    1652:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1659:	00 00 00 00 
    165d:	0f 1f 00             	nopl   (%rax)

0000000000001660 <unmap_segment>:
    1660:	f3 0f 1e fa          	endbr64 
    1664:	55                   	push   %rbp
    1665:	89 fd                	mov    %edi,%ebp
    1667:	53                   	push   %rbx
    1668:	48 83 ec 08          	sub    $0x8,%rsp
    166c:	48 8d 1d cd 39 00 00 	lea    0x39cd(%rip),%rbx        # 5040 <gs>
    1673:	8b 53 2c             	mov    0x2c(%rbx),%edx
    1676:	48 8b 7b 24          	mov    0x24(%rbx),%rdi
    167a:	3b 53 30             	cmp    0x30(%rbx),%edx
    167d:	74 11                	je     1690 <unmap_segment+0x30>
    167f:	8d 42 01             	lea    0x1(%rdx),%eax
    1682:	89 43 2c             	mov    %eax,0x2c(%rbx)
    1685:	89 2c 97             	mov    %ebp,(%rdi,%rdx,4)
    1688:	48 83 c4 08          	add    $0x8,%rsp
    168c:	5b                   	pop    %rbx
    168d:	5d                   	pop    %rbp
    168e:	c3                   	ret    
    168f:	90                   	nop
    1690:	01 d2                	add    %edx,%edx
    1692:	48 8d 34 95 00 00 00 	lea    0x0(,%rdx,4),%rsi
    1699:	00 
    169a:	89 53 30             	mov    %edx,0x30(%rbx)
    169d:	e8 3e fa ff ff       	call   10e0 <realloc@plt>
    16a2:	8b 53 2c             	mov    0x2c(%rbx),%edx
    16a5:	48 89 43 24          	mov    %rax,0x24(%rbx)
    16a9:	48 89 c7             	mov    %rax,%rdi
    16ac:	8d 42 01             	lea    0x1(%rdx),%eax
    16af:	89 43 2c             	mov    %eax,0x2c(%rbx)
    16b2:	89 2c 97             	mov    %ebp,(%rdi,%rdx,4)
    16b5:	48 83 c4 08          	add    $0x8,%rsp
    16b9:	5b                   	pop    %rbx
    16ba:	5d                   	pop    %rbp
    16bb:	c3                   	ret    
    16bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000016c0 <initialize_zero_segment>:
    16c0:	f3 0f 1e fa          	endbr64 
    16c4:	53                   	push   %rbx
    16c5:	45 31 c9             	xor    %r9d,%r9d
    16c8:	48 89 fb             	mov    %rdi,%rbx
    16cb:	48 89 fe             	mov    %rdi,%rsi
    16ce:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    16d4:	31 ff                	xor    %edi,%edi
    16d6:	b9 22 00 00 00       	mov    $0x22,%ecx
    16db:	ba 07 00 00 00       	mov    $0x7,%edx
    16e0:	e8 8b f9 ff ff       	call   1070 <mmap@plt>
    16e5:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    16e9:	74 0f                	je     16fa <initialize_zero_segment+0x3a>
    16eb:	48 89 da             	mov    %rbx,%rdx
    16ee:	31 f6                	xor    %esi,%esi
    16f0:	48 89 c7             	mov    %rax,%rdi
    16f3:	e8 98 f9 ff ff       	call   1090 <memset@plt>
    16f8:	5b                   	pop    %rbx
    16f9:	c3                   	ret    
    16fa:	48 8d 0d 0f 1a 00 00 	lea    0x1a0f(%rip),%rcx        # 3110 <__PRETTY_FUNCTION__.1>
    1701:	ba a9 00 00 00       	mov    $0xa9,%edx
    1706:	48 8d 35 f7 18 00 00 	lea    0x18f7(%rip),%rsi        # 3004 <_IO_stdin_used+0x4>
    170d:	48 8d 3d 1d 19 00 00 	lea    0x191d(%rip),%rdi        # 3031 <_IO_stdin_used+0x31>
    1714:	e8 67 f9 ff ff       	call   1080 <__assert_fail@plt>
    1719:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001720 <make_word>:
    1720:	f3 0f 1e fa          	endbr64 
    1724:	49 89 f9             	mov    %rdi,%r9
    1727:	49 89 c8             	mov    %rcx,%r8
    172a:	8d 4e ff             	lea    -0x1(%rsi),%ecx
    172d:	89 d7                	mov    %edx,%edi
    172f:	ba 02 00 00 00       	mov    $0x2,%edx
    1734:	48 d3 e2             	shl    %cl,%rdx
    1737:	89 f9                	mov    %edi,%ecx
    1739:	48 83 ea 01          	sub    $0x1,%rdx
    173d:	49 d3 e0             	shl    %cl,%r8
    1740:	48 89 d0             	mov    %rdx,%rax
    1743:	48 d3 e0             	shl    %cl,%rax
    1746:	48 f7 d0             	not    %rax
    1749:	4c 21 c8             	and    %r9,%rax
    174c:	4c 09 c0             	or     %r8,%rax
    174f:	c3                   	ret    

0000000000001750 <load_reg>:
    1750:	f3 0f 1e fa          	endbr64 
    1754:	48 01 f7             	add    %rsi,%rdi
    1757:	b8 41 c7 ff ff       	mov    $0xffffc741,%eax
    175c:	83 ca c0             	or     $0xffffffc0,%edx
    175f:	48 be 1f 00 0f 1f 00 	movabs $0x1f0f001f0f001f,%rsi
    1766:	0f 1f 00 
    1769:	66 89 07             	mov    %ax,(%rdi)
    176c:	48 b8 0f 1f 00 0f 1f 	movabs $0x1f0f001f0f001f0f,%rax
    1773:	00 0f 1f 
    1776:	89 4f 03             	mov    %ecx,0x3(%rdi)
    1779:	48 b9 00 0f 1f 00 0f 	movabs $0xf001f0f001f0f00,%rcx
    1780:	1f 00 0f 
    1783:	48 89 47 07          	mov    %rax,0x7(%rdi)
    1787:	48 89 47 1f          	mov    %rax,0x1f(%rdi)
    178b:	b8 28 00 00 00       	mov    $0x28,%eax
    1790:	88 57 02             	mov    %dl,0x2(%rdi)
    1793:	48 89 4f 0f          	mov    %rcx,0xf(%rdi)
    1797:	48 89 77 17          	mov    %rsi,0x17(%rdi)
    179b:	c6 47 27 00          	movb   $0x0,0x27(%rdi)
    179f:	c3                   	ret    

00000000000017a0 <cond_move>:
    17a0:	f3 0f 1e fa          	endbr64 
    17a4:	48 01 f7             	add    %rsi,%rdi
    17a7:	b8 41 83 ff ff       	mov    $0xffff8341,%eax
    17ac:	c1 e1 03             	shl    $0x3,%ecx
    17af:	41 83 c8 f8          	or     $0xfffffff8,%r8d
    17b3:	66 89 07             	mov    %ax,(%rdi)
    17b6:	09 d1                	or     %edx,%ecx
    17b8:	ba 1f 00 00 00       	mov    $0x1f,%edx
    17bd:	48 b8 0f 1f 00 0f 1f 	movabs $0x1f0f001f0f001f0f,%rax
    17c4:	00 0f 1f 
    17c7:	48 89 47 09          	mov    %rax,0x9(%rdi)
    17cb:	83 c9 c0             	or     $0xffffffc0,%ecx
    17ce:	48 b8 00 0f 1f 00 0f 	movabs $0xf001f0f001f0f00,%rax
    17d5:	1f 00 0f 
    17d8:	48 89 47 11          	mov    %rax,0x11(%rdi)
    17dc:	48 b8 1f 00 0f 1f 00 	movabs $0x1f0f001f0f001f,%rax
    17e3:	0f 1f 00 
    17e6:	48 89 47 19          	mov    %rax,0x19(%rdi)
    17ea:	b8 28 00 00 00       	mov    $0x28,%eax
    17ef:	44 88 47 02          	mov    %r8b,0x2(%rdi)
    17f3:	c7 47 03 00 74 03 45 	movl   $0x45037400,0x3(%rdi)
    17fa:	c6 47 07 89          	movb   $0x89,0x7(%rdi)
    17fe:	88 4f 08             	mov    %cl,0x8(%rdi)
    1801:	c7 47 21 0f 1f 00 0f 	movl   $0xf001f0f,0x21(%rdi)
    1808:	66 89 57 25          	mov    %dx,0x25(%rdi)
    180c:	c6 47 27 90          	movb   $0x90,0x27(%rdi)
    1810:	c3                   	ret    
    1811:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1818:	00 00 00 00 
    181c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001820 <seg_load>:
    1820:	f3 0f 1e fa          	endbr64 
    1824:	48 01 f7             	add    %rsi,%rdi
    1827:	b8 48 b8 ff ff       	mov    $0xffffb848,%eax
    182c:	c1 e1 03             	shl    $0x3,%ecx
    182f:	83 ca c0             	or     $0xffffffc0,%edx
    1832:	66 89 07             	mov    %ax,(%rdi)
    1835:	83 c9 c7             	or     $0xffffffc7,%ecx
    1838:	41 c1 e0 03          	shl    $0x3,%r8d
    183c:	be 00 90 ff ff       	mov    $0xffff9000,%esi
    1841:	48 8d 05 f8 37 00 00 	lea    0x37f8(%rip),%rax        # 5040 <gs>
    1848:	88 4f 0f             	mov    %cl,0xf(%rdi)
    184b:	41 83 c8 c6          	or     $0xffffffc6,%r8d
    184f:	b9 44 89 ff ff       	mov    $0xffff8944,%ecx
    1854:	c7 47 0a 48 8b 00 44 	movl   $0x44008b48,0xa(%rdi)
    185b:	48 83 c0 0c          	add    $0xc,%rax
    185f:	c6 47 0e 89          	movb   $0x89,0xe(%rdi)
    1863:	48 89 47 02          	mov    %rax,0x2(%rdi)
    1867:	48 b8 48 8b 04 f8 8b 	movabs $0x41b0048bf8048b48,%rax
    186e:	04 b0 41 
    1871:	48 89 47 13          	mov    %rax,0x13(%rdi)
    1875:	48 b8 0f 1f 00 0f 1f 	movabs $0x1f0f001f0f001f0f,%rax
    187c:	00 0f 1f 
    187f:	48 89 47 1d          	mov    %rax,0x1d(%rdi)
    1883:	b8 28 00 00 00       	mov    $0x28,%eax
    1888:	66 89 4f 10          	mov    %cx,0x10(%rdi)
    188c:	44 88 47 12          	mov    %r8b,0x12(%rdi)
    1890:	c6 47 1b 89          	movb   $0x89,0x1b(%rdi)
    1894:	88 57 1c             	mov    %dl,0x1c(%rdi)
    1897:	66 89 77 25          	mov    %si,0x25(%rdi)
    189b:	c6 47 27 90          	movb   $0x90,0x27(%rdi)
    189f:	c3                   	ret    

00000000000018a0 <seg_store>:
    18a0:	f3 0f 1e fa          	endbr64 
    18a4:	48 8d 04 37          	lea    (%rdi,%rsi,1),%rax
    18a8:	c1 e2 03             	shl    $0x3,%edx
    18ab:	be 48 b8 ff ff       	mov    $0xffffb848,%esi
    18b0:	c1 e1 03             	shl    $0x3,%ecx
    18b3:	66 89 30             	mov    %si,(%rax)
    18b6:	bf 44 89 ff ff       	mov    $0xffff8944,%edi
    18bb:	41 c1 e0 03          	shl    $0x3,%r8d
    18bf:	83 ca c7             	or     $0xffffffc7,%edx
    18c2:	83 c9 c6             	or     $0xffffffc6,%ecx
    18c5:	41 b9 44 89 ff ff    	mov    $0xffff8944,%r9d
    18cb:	41 83 c8 c2          	or     $0xffffffc2,%r8d
    18cf:	88 50 0f             	mov    %dl,0xf(%rax)
    18d2:	48 8d 35 67 37 00 00 	lea    0x3767(%rip),%rsi        # 5040 <gs>
    18d9:	41 ba 90 90 ff ff    	mov    $0xffff9090,%r10d
    18df:	66 89 78 10          	mov    %di,0x10(%rax)
    18e3:	48 bf 48 8b 04 f8 89 	movabs $0xfb01489f8048b48,%rdi
    18ea:	14 b0 0f 
    18ed:	48 89 78 16          	mov    %rdi,0x16(%rax)
    18f1:	48 bf 1f 00 0f 1f 00 	movabs $0x1f0f001f0f001f,%rdi
    18f8:	0f 1f 00 
    18fb:	48 83 c6 0c          	add    $0xc,%rsi
    18ff:	c7 40 0a 48 8b 00 44 	movl   $0x44008b48,0xa(%rax)
    1906:	48 89 70 02          	mov    %rsi,0x2(%rax)
    190a:	c6 40 0e 89          	movb   $0x89,0xe(%rax)
    190e:	88 48 12             	mov    %cl,0x12(%rax)
    1911:	66 44 89 48 13       	mov    %r9w,0x13(%rax)
    1916:	44 88 40 15          	mov    %r8b,0x15(%rax)
    191a:	48 89 78 1e          	mov    %rdi,0x1e(%rax)
    191e:	66 44 89 50 26       	mov    %r10w,0x26(%rax)
    1923:	b8 28 00 00 00       	mov    $0x28,%eax
    1928:	c3                   	ret    
    1929:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001930 <add_regs>:
    1930:	f3 0f 1e fa          	endbr64 
    1934:	48 01 f7             	add    %rsi,%rdi
    1937:	b8 44 89 ff ff       	mov    $0xffff8944,%eax
    193c:	c1 e1 03             	shl    $0x3,%ecx
    193f:	be 41 89 ff ff       	mov    $0xffff8941,%esi
    1944:	66 89 07             	mov    %ax,(%rdi)
    1947:	41 c1 e0 03          	shl    $0x3,%r8d
    194b:	83 c9 c0             	or     $0xffffffc0,%ecx
    194e:	83 ca c0             	or     $0xffffffc0,%edx
    1951:	48 b8 0f 1f 00 0f 1f 	movabs $0x1f0f001f0f001f0f,%rax
    1958:	00 0f 1f 
    195b:	41 83 c8 c0          	or     $0xffffffc0,%r8d
    195f:	88 4f 02             	mov    %cl,0x2(%rdi)
    1962:	b9 44 01 00 00       	mov    $0x144,%ecx
    1967:	48 89 47 09          	mov    %rax,0x9(%rdi)
    196b:	48 b8 00 0f 1f 00 0f 	movabs $0xf001f0f001f0f00,%rax
    1972:	1f 00 0f 
    1975:	44 88 47 05          	mov    %r8b,0x5(%rdi)
    1979:	41 b8 1f 00 00 00    	mov    $0x1f,%r8d
    197f:	48 89 47 11          	mov    %rax,0x11(%rdi)
    1983:	48 b8 1f 00 0f 1f 00 	movabs $0x1f0f001f0f001f,%rax
    198a:	0f 1f 00 
    198d:	48 89 47 19          	mov    %rax,0x19(%rdi)
    1991:	b8 28 00 00 00       	mov    $0x28,%eax
    1996:	66 89 4f 03          	mov    %cx,0x3(%rdi)
    199a:	66 89 77 06          	mov    %si,0x6(%rdi)
    199e:	88 57 08             	mov    %dl,0x8(%rdi)
    19a1:	c7 47 21 0f 1f 00 0f 	movl   $0xf001f0f,0x21(%rdi)
    19a8:	66 44 89 47 25       	mov    %r8w,0x25(%rdi)
    19ad:	c6 47 27 90          	movb   $0x90,0x27(%rdi)
    19b1:	c3                   	ret    
    19b2:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    19b9:	00 00 00 00 
    19bd:	0f 1f 00             	nopl   (%rax)

00000000000019c0 <mult_regs>:
    19c0:	f3 0f 1e fa          	endbr64 
    19c4:	48 01 f7             	add    %rsi,%rdi
    19c7:	b8 44 89 ff ff       	mov    $0xffff8944,%eax
    19cc:	c1 e1 03             	shl    $0x3,%ecx
    19cf:	41 83 c8 e0          	or     $0xffffffe0,%r8d
    19d3:	66 89 07             	mov    %ax,(%rdi)
    19d6:	83 c9 c0             	or     $0xffffffc0,%ecx
    19d9:	be 41 89 ff ff       	mov    $0xffff8941,%esi
    19de:	83 ca c0             	or     $0xffffffc0,%edx
    19e1:	48 b8 0f 1f 00 0f 1f 	movabs $0x1f0f001f0f001f0f,%rax
    19e8:	00 0f 1f 
    19eb:	88 4f 02             	mov    %cl,0x2(%rdi)
    19ee:	b9 41 f7 ff ff       	mov    $0xfffff741,%ecx
    19f3:	48 89 47 09          	mov    %rax,0x9(%rdi)
    19f7:	48 b8 00 0f 1f 00 0f 	movabs $0xf001f0f001f0f00,%rax
    19fe:	1f 00 0f 
    1a01:	44 88 47 05          	mov    %r8b,0x5(%rdi)
    1a05:	41 b8 1f 00 00 00    	mov    $0x1f,%r8d
    1a0b:	48 89 47 11          	mov    %rax,0x11(%rdi)
    1a0f:	48 b8 1f 00 0f 1f 00 	movabs $0x1f0f001f0f001f,%rax
    1a16:	0f 1f 00 
    1a19:	48 89 47 19          	mov    %rax,0x19(%rdi)
    1a1d:	b8 28 00 00 00       	mov    $0x28,%eax
    1a22:	66 89 4f 03          	mov    %cx,0x3(%rdi)
    1a26:	66 89 77 06          	mov    %si,0x6(%rdi)
    1a2a:	88 57 08             	mov    %dl,0x8(%rdi)
    1a2d:	c7 47 21 0f 1f 00 0f 	movl   $0xf001f0f,0x21(%rdi)
    1a34:	66 44 89 47 25       	mov    %r8w,0x25(%rdi)
    1a39:	c6 47 27 90          	movb   $0x90,0x27(%rdi)
    1a3d:	c3                   	ret    
    1a3e:	66 90                	xchg   %ax,%ax

0000000000001a40 <div_regs>:
    1a40:	f3 0f 1e fa          	endbr64 
    1a44:	48 01 f7             	add    %rsi,%rdi
    1a47:	b8 49 f7 ff ff       	mov    $0xfffff749,%eax
    1a4c:	c1 e1 03             	shl    $0x3,%ecx
    1a4f:	41 83 c8 f0          	or     $0xfffffff0,%r8d
    1a53:	66 89 47 06          	mov    %ax,0x6(%rdi)
    1a57:	83 c9 c0             	or     $0xffffffc0,%ecx
    1a5a:	83 ca c0             	or     $0xffffffc0,%edx
    1a5d:	48 b8 0f 1f 00 0f 1f 	movabs $0x1f0f001f0f001f0f,%rax
    1a64:	00 0f 1f 
    1a67:	48 89 47 0c          	mov    %rax,0xc(%rdi)
    1a6b:	48 b8 00 0f 1f 00 0f 	movabs $0xf001f0f001f0f00,%rax
    1a72:	1f 00 0f 
    1a75:	88 4f 05             	mov    %cl,0x5(%rdi)
    1a78:	b9 41 89 ff ff       	mov    $0xffff8941,%ecx
    1a7d:	48 89 47 14          	mov    %rax,0x14(%rdi)
    1a81:	48 b8 1f 00 0f 1f 00 	movabs $0x1f0f001f0f001f,%rax
    1a88:	0f 1f 00 
    1a8b:	48 89 47 1c          	mov    %rax,0x1c(%rdi)
    1a8f:	b8 28 00 00 00       	mov    $0x28,%eax
    1a94:	c7 07 48 31 d2 44    	movl   $0x44d23148,(%rdi)
    1a9a:	c6 47 04 89          	movb   $0x89,0x4(%rdi)
    1a9e:	44 88 47 08          	mov    %r8b,0x8(%rdi)
    1aa2:	66 89 4f 09          	mov    %cx,0x9(%rdi)
    1aa6:	88 57 0b             	mov    %dl,0xb(%rdi)
    1aa9:	c7 47 24 0f 1f 00 90 	movl   $0x90001f0f,0x24(%rdi)
    1ab0:	c6 47 28 90          	movb   $0x90,0x28(%rdi)
    1ab4:	c3                   	ret    
    1ab5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1abc:	00 00 00 00 

0000000000001ac0 <nand_regs>:
    1ac0:	f3 0f 1e fa          	endbr64 
    1ac4:	48 01 f7             	add    %rsi,%rdi
    1ac7:	b8 44 89 ff ff       	mov    $0xffff8944,%eax
    1acc:	c1 e1 03             	shl    $0x3,%ecx
    1acf:	83 ca c0             	or     $0xffffffc0,%edx
    1ad2:	66 89 07             	mov    %ax,(%rdi)
    1ad5:	83 c9 c0             	or     $0xffffffc0,%ecx
    1ad8:	41 c1 e0 03          	shl    $0x3,%r8d
    1adc:	48 b8 0f 1f 00 0f 1f 	movabs $0x1f0f001f0f001f0f,%rax
    1ae3:	00 0f 1f 
    1ae6:	48 89 47 0c          	mov    %rax,0xc(%rdi)
    1aea:	41 83 c8 c0          	or     $0xffffffc0,%r8d
    1aee:	48 b8 00 0f 1f 00 0f 	movabs $0xf001f0f001f0f00,%rax
    1af5:	1f 00 0f 
    1af8:	88 4f 02             	mov    %cl,0x2(%rdi)
    1afb:	b9 44 21 00 00       	mov    $0x2144,%ecx
    1b00:	48 89 47 14          	mov    %rax,0x14(%rdi)
    1b04:	48 b8 1f 00 0f 1f 00 	movabs $0x1f0f001f0f001f,%rax
    1b0b:	0f 1f 00 
    1b0e:	48 89 47 1c          	mov    %rax,0x1c(%rdi)
    1b12:	b8 28 00 00 00       	mov    $0x28,%eax
    1b17:	66 89 4f 03          	mov    %cx,0x3(%rdi)
    1b1b:	44 88 47 05          	mov    %r8b,0x5(%rdi)
    1b1f:	c7 47 06 40 f7 d0 41 	movl   $0x41d0f740,0x6(%rdi)
    1b26:	c6 47 0a 89          	movb   $0x89,0xa(%rdi)
    1b2a:	88 57 0b             	mov    %dl,0xb(%rdi)
    1b2d:	c7 47 24 0f 1f 00 90 	movl   $0x90001f0f,0x24(%rdi)
    1b34:	c6 47 28 90          	movb   $0x90,0x28(%rdi)
    1b38:	c3                   	ret    
    1b39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001b40 <handle_halt>:
    1b40:	f3 0f 1e fa          	endbr64 
    1b44:	c7 04 37 48 31 c0 c3 	movl   $0xc3c03148,(%rdi,%rsi,1)
    1b4b:	b8 28 00 00 00       	mov    $0x28,%eax
    1b50:	c3                   	ret    
    1b51:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1b58:	00 00 00 00 
    1b5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001b60 <inject_map_segment>:
    1b60:	f3 0f 1e fa          	endbr64 
    1b64:	48 01 f7             	add    %rsi,%rdi
    1b67:	b8 44 89 ff ff       	mov    $0xffff8944,%eax
    1b6c:	c1 e1 03             	shl    $0x3,%ecx
    1b6f:	83 ca c0             	or     $0xffffffc0,%edx
    1b72:	66 89 07             	mov    %ax,(%rdi)
    1b75:	83 c9 c7             	or     $0xffffffc7,%ecx
    1b78:	be 1f 00 00 00       	mov    $0x1f,%esi
    1b7d:	48 b8 41 50 41 51 41 	movabs $0x5341524151415041,%rax
    1b84:	52 41 53 
    1b87:	48 89 47 03          	mov    %rax,0x3(%rdi)
    1b8b:	48 8d 05 1e f9 ff ff 	lea    -0x6e2(%rip),%rax        # 14b0 <map_segment>
    1b92:	88 4f 02             	mov    %cl,0x2(%rdi)
    1b95:	b9 48 b8 ff ff       	mov    $0xffffb848,%ecx
    1b9a:	48 89 47 0d          	mov    %rax,0xd(%rdi)
    1b9e:	48 b8 ff d0 41 5b 41 	movabs $0x59415a415b41d0ff,%rax
    1ba5:	5a 41 59 
    1ba8:	48 89 47 15          	mov    %rax,0x15(%rdi)
    1bac:	b8 28 00 00 00       	mov    $0x28,%eax
    1bb1:	66 89 4f 0b          	mov    %cx,0xb(%rdi)
    1bb5:	c7 47 1d 41 58 41 89 	movl   $0x89415841,0x1d(%rdi)
    1bbc:	88 57 21             	mov    %dl,0x21(%rdi)
    1bbf:	c7 47 22 0f 1f 00 0f 	movl   $0xf001f0f,0x22(%rdi)
    1bc6:	66 89 77 26          	mov    %si,0x26(%rdi)
    1bca:	c3                   	ret    
    1bcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001bd0 <inject_unmap_segment>:
    1bd0:	f3 0f 1e fa          	endbr64 
    1bd4:	48 01 f7             	add    %rsi,%rdi
    1bd7:	b8 44 89 ff ff       	mov    $0xffff8944,%eax
    1bdc:	c1 e2 03             	shl    $0x3,%edx
    1bdf:	b9 0f 1f 00 00       	mov    $0x1f0f,%ecx
    1be4:	66 89 07             	mov    %ax,(%rdi)
    1be7:	83 ca c7             	or     $0xffffffc7,%edx
    1bea:	48 b8 41 50 41 51 41 	movabs $0x5341524151415041,%rax
    1bf1:	52 41 53 
    1bf4:	48 89 47 03          	mov    %rax,0x3(%rdi)
    1bf8:	48 8d 05 61 fa ff ff 	lea    -0x59f(%rip),%rax        # 1660 <unmap_segment>
    1bff:	88 57 02             	mov    %dl,0x2(%rdi)
    1c02:	ba 48 b8 ff ff       	mov    $0xffffb848,%edx
    1c07:	48 89 47 0d          	mov    %rax,0xd(%rdi)
    1c0b:	48 b8 ff d0 41 5b 41 	movabs $0x59415a415b41d0ff,%rax
    1c12:	5a 41 59 
    1c15:	48 89 47 15          	mov    %rax,0x15(%rdi)
    1c19:	48 b8 41 58 0f 1f 00 	movabs $0x1f0f001f0f5841,%rax
    1c20:	0f 1f 00 
    1c23:	48 89 47 1d          	mov    %rax,0x1d(%rdi)
    1c27:	b8 28 00 00 00       	mov    $0x28,%eax
    1c2c:	66 89 57 0b          	mov    %dx,0xb(%rdi)
    1c30:	66 89 4f 25          	mov    %cx,0x25(%rdi)
    1c34:	c6 47 27 00          	movb   $0x0,0x27(%rdi)
    1c38:	c3                   	ret    
    1c39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001c40 <print_reg>:
    1c40:	f3 0f 1e fa          	endbr64 
    1c44:	48 01 f7             	add    %rsi,%rdi
    1c47:	b8 44 89 ff ff       	mov    $0xffff8944,%eax
    1c4c:	c1 e2 03             	shl    $0x3,%edx
    1c4f:	b9 0f 1f 00 00       	mov    $0x1f0f,%ecx
    1c54:	66 89 07             	mov    %ax,(%rdi)
    1c57:	83 ca c7             	or     $0xffffffc7,%edx
    1c5a:	48 b8 41 50 41 51 41 	movabs $0x5341524151415041,%rax
    1c61:	52 41 53 
    1c64:	48 89 47 03          	mov    %rax,0x3(%rdi)
    1c68:	48 8b 05 51 33 00 00 	mov    0x3351(%rip),%rax        # 4fc0 <putchar@GLIBC_2.2.5>
    1c6f:	88 57 02             	mov    %dl,0x2(%rdi)
    1c72:	ba 48 b8 ff ff       	mov    $0xffffb848,%edx
    1c77:	48 89 47 0d          	mov    %rax,0xd(%rdi)
    1c7b:	48 b8 ff d0 41 5b 41 	movabs $0x59415a415b41d0ff,%rax
    1c82:	5a 41 59 
    1c85:	48 89 47 15          	mov    %rax,0x15(%rdi)
    1c89:	48 b8 41 58 0f 1f 00 	movabs $0x1f0f001f0f5841,%rax
    1c90:	0f 1f 00 
    1c93:	48 89 47 1d          	mov    %rax,0x1d(%rdi)
    1c97:	b8 28 00 00 00       	mov    $0x28,%eax
    1c9c:	66 89 57 0b          	mov    %dx,0xb(%rdi)
    1ca0:	66 89 4f 25          	mov    %cx,0x25(%rdi)
    1ca4:	c6 47 27 00          	movb   $0x0,0x27(%rdi)
    1ca8:	c3                   	ret    
    1ca9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001cb0 <read_into_reg>:
    1cb0:	f3 0f 1e fa          	endbr64 
    1cb4:	48 01 f7             	add    %rsi,%rdi
    1cb7:	b8 48 b8 ff ff       	mov    $0xffffb848,%eax
    1cbc:	83 ca c0             	or     $0xffffffc0,%edx
    1cbf:	66 89 07             	mov    %ax,(%rdi)
    1cc2:	48 8d 05 c7 f7 ff ff 	lea    -0x839(%rip),%rax        # 1490 <read_char>
    1cc9:	88 57 0e             	mov    %dl,0xe(%rdi)
    1ccc:	ba 90 90 ff ff       	mov    $0xffff9090,%edx
    1cd1:	48 89 47 02          	mov    %rax,0x2(%rdi)
    1cd5:	48 b8 0f 1f 00 0f 1f 	movabs $0x1f0f001f0f001f0f,%rax
    1cdc:	00 0f 1f 
    1cdf:	48 89 47 0f          	mov    %rax,0xf(%rdi)
    1ce3:	48 b8 00 0f 1f 00 0f 	movabs $0xf001f0f001f0f00,%rax
    1cea:	1f 00 0f 
    1ced:	48 89 47 17          	mov    %rax,0x17(%rdi)
    1cf1:	48 b8 1f 00 0f 1f 00 	movabs $0x1f0f001f0f001f,%rax
    1cf8:	0f 1f 00 
    1cfb:	48 89 47 1f          	mov    %rax,0x1f(%rdi)
    1cff:	b8 28 00 00 00       	mov    $0x28,%eax
    1d04:	c7 47 0a ff d0 41 89 	movl   $0x8941d0ff,0xa(%rdi)
    1d0b:	66 89 57 27          	mov    %dx,0x27(%rdi)
    1d0f:	c3                   	ret    

0000000000001d10 <inject_load_program>:
    1d10:	f3 0f 1e fa          	endbr64 
    1d14:	c1 e2 03             	shl    $0x3,%edx
    1d17:	48 01 f7             	add    %rsi,%rdi
    1d1a:	b8 44 89 ff ff       	mov    $0xffff8944,%eax
    1d1f:	c1 e1 03             	shl    $0x3,%ecx
    1d22:	66 89 07             	mov    %ax,(%rdi)
    1d25:	48 8d 05 14 33 00 00 	lea    0x3314(%rip),%rax        # 5040 <gs>
    1d2c:	83 ca c7             	or     $0xffffffc7,%edx
    1d2f:	83 c9 c6             	or     $0xffffffc6,%ecx
    1d32:	88 57 02             	mov    %dl,0x2(%rdi)
    1d35:	be ff d0 ff ff       	mov    $0xffffd0ff,%esi
    1d3a:	ba 44 89 ff ff       	mov    $0xffff8944,%edx
    1d3f:	48 89 47 08          	mov    %rax,0x8(%rdi)
    1d43:	48 b8 89 30 85 ff 75 	movabs $0x8b480575ff853089,%rax
    1d4a:	05 48 8b 
    1d4d:	48 89 47 10          	mov    %rax,0x10(%rdi)
    1d51:	48 8d 05 08 03 00 00 	lea    0x308(%rip),%rax        # 2060 <load_program>
    1d58:	88 4f 05             	mov    %cl,0x5(%rdi)
    1d5b:	b9 48 b8 ff ff       	mov    $0xffffb848,%ecx
    1d60:	48 89 47 1d          	mov    %rax,0x1d(%rdi)
    1d64:	b8 28 00 00 00       	mov    $0x28,%eax
    1d69:	66 89 57 03          	mov    %dx,0x3(%rdi)
    1d6d:	66 89 4f 06          	mov    %cx,0x6(%rdi)
    1d71:	c7 47 18 40 04 c3 48 	movl   $0x48c30440,0x18(%rdi)
    1d78:	c6 47 1c b8          	movb   $0xb8,0x1c(%rdi)
    1d7c:	66 89 77 25          	mov    %si,0x25(%rdi)
    1d80:	c6 47 27 c3          	movb   $0xc3,0x27(%rdi)
    1d84:	c3                   	ret    
    1d85:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1d8c:	00 00 00 00 

0000000000001d90 <compile_instruction>:
    1d90:	f3 0f 1e fa          	endbr64 
    1d94:	89 f0                	mov    %esi,%eax
    1d96:	53                   	push   %rbx
    1d97:	48 89 d3             	mov    %rdx,%rbx
    1d9a:	c1 e8 1c             	shr    $0x1c,%eax
    1d9d:	83 f8 0d             	cmp    $0xd,%eax
    1da0:	0f 84 6a 01 00 00    	je     1f10 <compile_instruction+0x180>
    1da6:	41 89 f1             	mov    %esi,%r9d
    1da9:	41 89 f0             	mov    %esi,%r8d
    1dac:	c1 ee 06             	shr    $0x6,%esi
    1daf:	41 c1 e9 03          	shr    $0x3,%r9d
    1db3:	41 83 e0 07          	and    $0x7,%r8d
    1db7:	83 e6 07             	and    $0x7,%esi
    1dba:	41 83 e1 07          	and    $0x7,%r9d
    1dbe:	83 f8 0a             	cmp    $0xa,%eax
    1dc1:	0f 84 39 01 00 00    	je     1f00 <compile_instruction+0x170>
    1dc7:	83 f8 0c             	cmp    $0xc,%eax
    1dca:	0f 87 20 01 00 00    	ja     1ef0 <compile_instruction+0x160>
    1dd0:	48 8d 15 e9 12 00 00 	lea    0x12e9(%rip),%rdx        # 30c0 <_IO_stdin_used+0xc0>
    1dd7:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    1ddb:	48 01 d0             	add    %rdx,%rax
    1dde:	3e ff e0             	notrack jmp *%rax
    1de1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1de8:	48 89 de             	mov    %rbx,%rsi
    1deb:	44 89 c1             	mov    %r8d,%ecx
    1dee:	44 89 ca             	mov    %r9d,%edx
    1df1:	e8 1a ff ff ff       	call   1d10 <inject_load_program>
    1df6:	48 01 d8             	add    %rbx,%rax
    1df9:	5b                   	pop    %rbx
    1dfa:	c3                   	ret    
    1dfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1e00:	89 f2                	mov    %esi,%edx
    1e02:	44 89 c9             	mov    %r9d,%ecx
    1e05:	48 89 de             	mov    %rbx,%rsi
    1e08:	e8 93 f9 ff ff       	call   17a0 <cond_move>
    1e0d:	48 01 d8             	add    %rbx,%rax
    1e10:	5b                   	pop    %rbx
    1e11:	c3                   	ret    
    1e12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1e18:	89 f2                	mov    %esi,%edx
    1e1a:	44 89 c9             	mov    %r9d,%ecx
    1e1d:	48 89 de             	mov    %rbx,%rsi
    1e20:	e8 fb f9 ff ff       	call   1820 <seg_load>
    1e25:	48 01 d8             	add    %rbx,%rax
    1e28:	5b                   	pop    %rbx
    1e29:	c3                   	ret    
    1e2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1e30:	89 f2                	mov    %esi,%edx
    1e32:	44 89 c9             	mov    %r9d,%ecx
    1e35:	48 89 de             	mov    %rbx,%rsi
    1e38:	e8 63 fa ff ff       	call   18a0 <seg_store>
    1e3d:	48 01 d8             	add    %rbx,%rax
    1e40:	5b                   	pop    %rbx
    1e41:	c3                   	ret    
    1e42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1e48:	89 f2                	mov    %esi,%edx
    1e4a:	44 89 c9             	mov    %r9d,%ecx
    1e4d:	48 89 de             	mov    %rbx,%rsi
    1e50:	e8 db fa ff ff       	call   1930 <add_regs>
    1e55:	48 01 d8             	add    %rbx,%rax
    1e58:	5b                   	pop    %rbx
    1e59:	c3                   	ret    
    1e5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1e60:	89 f2                	mov    %esi,%edx
    1e62:	44 89 c9             	mov    %r9d,%ecx
    1e65:	48 89 de             	mov    %rbx,%rsi
    1e68:	e8 53 fb ff ff       	call   19c0 <mult_regs>
    1e6d:	48 01 d8             	add    %rbx,%rax
    1e70:	5b                   	pop    %rbx
    1e71:	c3                   	ret    
    1e72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1e78:	89 f2                	mov    %esi,%edx
    1e7a:	44 89 c9             	mov    %r9d,%ecx
    1e7d:	48 89 de             	mov    %rbx,%rsi
    1e80:	e8 bb fb ff ff       	call   1a40 <div_regs>
    1e85:	48 01 d8             	add    %rbx,%rax
    1e88:	5b                   	pop    %rbx
    1e89:	c3                   	ret    
    1e8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1e90:	89 f2                	mov    %esi,%edx
    1e92:	44 89 c9             	mov    %r9d,%ecx
    1e95:	48 89 de             	mov    %rbx,%rsi
    1e98:	e8 23 fc ff ff       	call   1ac0 <nand_regs>
    1e9d:	48 01 d8             	add    %rbx,%rax
    1ea0:	5b                   	pop    %rbx
    1ea1:	c3                   	ret    
    1ea2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1ea8:	48 89 de             	mov    %rbx,%rsi
    1eab:	e8 90 fc ff ff       	call   1b40 <handle_halt>
    1eb0:	48 01 d8             	add    %rbx,%rax
    1eb3:	5b                   	pop    %rbx
    1eb4:	c3                   	ret    
    1eb5:	0f 1f 00             	nopl   (%rax)
    1eb8:	48 89 de             	mov    %rbx,%rsi
    1ebb:	44 89 c1             	mov    %r8d,%ecx
    1ebe:	44 89 ca             	mov    %r9d,%edx
    1ec1:	e8 9a fc ff ff       	call   1b60 <inject_map_segment>
    1ec6:	48 01 d8             	add    %rbx,%rax
    1ec9:	5b                   	pop    %rbx
    1eca:	c3                   	ret    
    1ecb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1ed0:	48 89 de             	mov    %rbx,%rsi
    1ed3:	44 89 c2             	mov    %r8d,%edx
    1ed6:	e8 f5 fc ff ff       	call   1bd0 <inject_unmap_segment>
    1edb:	48 01 d8             	add    %rbx,%rax
    1ede:	5b                   	pop    %rbx
    1edf:	c3                   	ret    
    1ee0:	48 89 de             	mov    %rbx,%rsi
    1ee3:	44 89 c2             	mov    %r8d,%edx
    1ee6:	e8 c5 fd ff ff       	call   1cb0 <read_into_reg>
    1eeb:	48 01 d8             	add    %rbx,%rax
    1eee:	5b                   	pop    %rbx
    1eef:	c3                   	ret    
    1ef0:	48 8d 43 28          	lea    0x28(%rbx),%rax
    1ef4:	5b                   	pop    %rbx
    1ef5:	c3                   	ret    
    1ef6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1efd:	00 00 00 
    1f00:	48 89 de             	mov    %rbx,%rsi
    1f03:	44 89 c2             	mov    %r8d,%edx
    1f06:	e8 35 fd ff ff       	call   1c40 <print_reg>
    1f0b:	48 01 d8             	add    %rbx,%rax
    1f0e:	5b                   	pop    %rbx
    1f0f:	c3                   	ret    
    1f10:	89 f1                	mov    %esi,%ecx
    1f12:	c1 ee 19             	shr    $0x19,%esi
    1f15:	89 f2                	mov    %esi,%edx
    1f17:	81 e1 ff ff ff 01    	and    $0x1ffffff,%ecx
    1f1d:	48 89 de             	mov    %rbx,%rsi
    1f20:	83 e2 07             	and    $0x7,%edx
    1f23:	e8 28 f8 ff ff       	call   1750 <load_reg>
    1f28:	48 01 d8             	add    %rbx,%rax
    1f2b:	5b                   	pop    %rbx
    1f2c:	c3                   	ret    
    1f2d:	0f 1f 00             	nopl   (%rax)

0000000000001f30 <load_zero_segment>:
    1f30:	f3 0f 1e fa          	endbr64 
    1f34:	55                   	push   %rbp
    1f35:	48 89 d5             	mov    %rdx,%rbp
    1f38:	53                   	push   %rbx
    1f39:	48 83 ec 28          	sub    $0x28,%rsp
    1f3d:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    1f42:	48 89 d7             	mov    %rdx,%rdi
    1f45:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    1f4a:	e8 d1 f1 ff ff       	call   1120 <getc@plt>
    1f4f:	83 f8 ff             	cmp    $0xffffffff,%eax
    1f52:	74 73                	je     1fc7 <load_zero_segment+0x97>
    1f54:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    1f5b:	00 00 
    1f5d:	31 db                	xor    %ebx,%ebx
    1f5f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    1f66:	00 
    1f67:	eb 2a                	jmp    1f93 <load_zero_segment+0x63>
    1f69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1f70:	83 fa 01             	cmp    $0x1,%edx
    1f73:	74 5b                	je     1fd0 <load_zero_segment+0xa0>
    1f75:	83 fa 02             	cmp    $0x2,%edx
    1f78:	74 76                	je     1ff0 <load_zero_segment+0xc0>
    1f7a:	83 fa 03             	cmp    $0x3,%edx
    1f7d:	0f 84 8d 00 00 00    	je     2010 <load_zero_segment+0xe0>
    1f83:	48 89 ef             	mov    %rbp,%rdi
    1f86:	83 c3 01             	add    $0x1,%ebx
    1f89:	e8 92 f1 ff ff       	call   1120 <getc@plt>
    1f8e:	83 f8 ff             	cmp    $0xffffffff,%eax
    1f91:	74 34                	je     1fc7 <load_zero_segment+0x97>
    1f93:	89 da                	mov    %ebx,%edx
    1f95:	0f b6 c8             	movzbl %al,%ecx
    1f98:	83 e2 03             	and    $0x3,%edx
    1f9b:	75 d3                	jne    1f70 <load_zero_segment+0x40>
    1f9d:	8b 7c 24 04          	mov    0x4(%rsp),%edi
    1fa1:	0f b6 c8             	movzbl %al,%ecx
    1fa4:	ba 18 00 00 00       	mov    $0x18,%edx
    1fa9:	83 c3 01             	add    $0x1,%ebx
    1fac:	be 08 00 00 00       	mov    $0x8,%esi
    1fb1:	e8 6a f7 ff ff       	call   1720 <make_word>
    1fb6:	48 89 ef             	mov    %rbp,%rdi
    1fb9:	89 44 24 04          	mov    %eax,0x4(%rsp)
    1fbd:	e8 5e f1 ff ff       	call   1120 <getc@plt>
    1fc2:	83 f8 ff             	cmp    $0xffffffff,%eax
    1fc5:	75 cc                	jne    1f93 <load_zero_segment+0x63>
    1fc7:	48 83 c4 28          	add    $0x28,%rsp
    1fcb:	5b                   	pop    %rbx
    1fcc:	5d                   	pop    %rbp
    1fcd:	c3                   	ret    
    1fce:	66 90                	xchg   %ax,%ax
    1fd0:	8b 7c 24 04          	mov    0x4(%rsp),%edi
    1fd4:	ba 10 00 00 00       	mov    $0x10,%edx
    1fd9:	be 08 00 00 00       	mov    $0x8,%esi
    1fde:	e8 3d f7 ff ff       	call   1720 <make_word>
    1fe3:	89 44 24 04          	mov    %eax,0x4(%rsp)
    1fe7:	eb 9a                	jmp    1f83 <load_zero_segment+0x53>
    1fe9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1ff0:	8b 7c 24 04          	mov    0x4(%rsp),%edi
    1ff4:	ba 08 00 00 00       	mov    $0x8,%edx
    1ff9:	be 08 00 00 00       	mov    $0x8,%esi
    1ffe:	e8 1d f7 ff ff       	call   1720 <make_word>
    2003:	89 44 24 04          	mov    %eax,0x4(%rsp)
    2007:	e9 77 ff ff ff       	jmp    1f83 <load_zero_segment+0x53>
    200c:	0f 1f 40 00          	nopl   0x0(%rax)
    2010:	8b 7c 24 04          	mov    0x4(%rsp),%edi
    2014:	31 d2                	xor    %edx,%edx
    2016:	be 08 00 00 00       	mov    $0x8,%esi
    201b:	e8 00 f7 ff ff       	call   1720 <make_word>
    2020:	89 da                	mov    %ebx,%edx
    2022:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    2027:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    202c:	c1 fa 02             	sar    $0x2,%edx
    202f:	89 c6                	mov    %eax,%esi
    2031:	48 63 d2             	movslq %edx,%rdx
    2034:	89 04 91             	mov    %eax,(%rcx,%rdx,4)
    2037:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    203c:	e8 4f fd ff ff       	call   1d90 <compile_instruction>
    2041:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    2048:	00 
    2049:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    204e:	e9 30 ff ff ff       	jmp    1f83 <load_zero_segment+0x53>
    2053:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    205a:	00 00 00 00 
    205e:	66 90                	xchg   %ax,%ax

0000000000002060 <load_program>:
    2060:	f3 0f 1e fa          	endbr64 
    2064:	55                   	push   %rbp
    2065:	89 fa                	mov    %edi,%edx
    2067:	be 04 00 00 00       	mov    $0x4,%esi
    206c:	53                   	push   %rbx
    206d:	48 83 ec 28          	sub    $0x28,%rsp
    2071:	48 8d 05 c8 2f 00 00 	lea    0x2fc8(%rip),%rax        # 5040 <gs>
    2078:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    207d:	48 8b 40 14          	mov    0x14(%rax),%rax
    2081:	44 8b 14 90          	mov    (%rax,%rdx,4),%r10d
    2085:	4c 89 d7             	mov    %r10,%rdi
    2088:	44 89 54 24 14       	mov    %r10d,0x14(%rsp)
    208d:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    2092:	e8 19 f0 ff ff       	call   10b0 <calloc@plt>
    2097:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    209c:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    20a1:	48 89 c3             	mov    %rax,%rbx
    20a4:	48 8d 05 95 2f 00 00 	lea    0x2f95(%rip),%rax        # 5040 <gs>
    20ab:	49 c1 e2 02          	shl    $0x2,%r10
    20af:	48 89 df             	mov    %rbx,%rdi
    20b2:	48 8b 68 0c          	mov    0xc(%rax),%rbp
    20b6:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
    20bb:	48 8b 74 d5 00       	mov    0x0(%rbp,%rdx,8),%rsi
    20c0:	4c 89 d2             	mov    %r10,%rdx
    20c3:	e8 08 f0 ff ff       	call   10d0 <memcpy@plt>
    20c8:	44 8b 5c 24 14       	mov    0x14(%rsp),%r11d
    20cd:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
    20d1:	31 ff                	xor    %edi,%edi
    20d3:	48 8d 05 66 2f 00 00 	lea    0x2f66(%rip),%rax        # 5040 <gs>
    20da:	45 31 c9             	xor    %r9d,%r9d
    20dd:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    20e3:	b9 22 00 00 00       	mov    $0x22,%ecx
    20e8:	43 8d 34 9b          	lea    (%r11,%r11,4),%esi
    20ec:	ba 07 00 00 00       	mov    $0x7,%edx
    20f1:	48 8b 40 14          	mov    0x14(%rax),%rax
    20f5:	c1 e6 03             	shl    $0x3,%esi
    20f8:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    20fd:	44 89 18             	mov    %r11d,(%rax)
    2100:	e8 6b ef ff ff       	call   1070 <mmap@plt>
    2105:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    210a:	31 f6                	xor    %esi,%esi
    210c:	48 89 c7             	mov    %rax,%rdi
    210f:	48 89 c5             	mov    %rax,%rbp
    2112:	e8 79 ef ff ff       	call   1090 <memset@plt>
    2117:	44 8b 5c 24 14       	mov    0x14(%rsp),%r11d
    211c:	45 85 db             	test   %r11d,%r11d
    211f:	74 2e                	je     214f <load_program+0xef>
    2121:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    2126:	4a 8d 04 13          	lea    (%rbx,%r10,1),%rax
    212a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    212f:	31 c0                	xor    %eax,%eax
    2131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2138:	8b 33                	mov    (%rbx),%esi
    213a:	89 c2                	mov    %eax,%edx
    213c:	48 89 ef             	mov    %rbp,%rdi
    213f:	48 83 c3 04          	add    $0x4,%rbx
    2143:	e8 48 fc ff ff       	call   1d90 <compile_instruction>
    2148:	48 3b 5c 24 08       	cmp    0x8(%rsp),%rbx
    214d:	75 e9                	jne    2138 <load_program+0xd8>
    214f:	48 8d 05 ea 2e 00 00 	lea    0x2eea(%rip),%rax        # 5040 <gs>
    2156:	48 89 68 04          	mov    %rbp,0x4(%rax)
    215a:	48 83 c4 28          	add    $0x28,%rsp
    215e:	48 89 e8             	mov    %rbp,%rax
    2161:	5b                   	pop    %rbx
    2162:	5d                   	pop    %rbp
    2163:	c3                   	ret    

0000000000002164 <zero_regs>:
    2164:	4d 31 c0             	xor    %r8,%r8
    2167:	4d 31 c9             	xor    %r9,%r9
    216a:	4d 31 d2             	xor    %r10,%r10
    216d:	4d 31 db             	xor    %r11,%r11
    2170:	4d 31 e4             	xor    %r12,%r12
    2173:	4d 31 ed             	xor    %r13,%r13
    2176:	4d 31 f6             	xor    %r14,%r14
    2179:	4d 31 ff             	xor    %r15,%r15
    217c:	c3                   	ret    
    217d:	41 50                	push   %r8
    217f:	41 51                	push   %r9
    2181:	41 52                	push   %r10
    2183:	41 53                	push   %r11
    2185:	51                   	push   %rcx
    2186:	52                   	push   %rdx
    2187:	e8 14 ef ff ff       	call   10a0 <fputc@plt>
    218c:	5a                   	pop    %rdx
    218d:	59                   	pop    %rcx
    218e:	41 5b                	pop    %r11
    2190:	41 5a                	pop    %r10
    2192:	41 59                	pop    %r9
    2194:	41 58                	pop    %r8

Disassembly of section .fini:

0000000000002198 <_fini>:
    2198:	f3 0f 1e fa          	endbr64 
    219c:	48 83 ec 08          	sub    $0x8,%rsp
    21a0:	48 83 c4 08          	add    $0x8,%rsp
    21a4:	c3                   	ret    
