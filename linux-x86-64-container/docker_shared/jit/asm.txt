
jit:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d1 3f 00 00 	mov    0x3fd1(%rip),%rax        # 4fe0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <free@plt-0x10>:
    1020:	ff 35 e2 3f 00 00    	push   0x3fe2(%rip)        # 5008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 3f 00 00    	jmp    *0x3fe4(%rip)        # 5010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <free@plt>:
    1030:	ff 25 e2 3f 00 00    	jmp    *0x3fe2(%rip)        # 5018 <free@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <fclose@plt>:
    1040:	ff 25 da 3f 00 00    	jmp    *0x3fda(%rip)        # 5020 <fclose@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <mmap@plt>:
    1050:	ff 25 d2 3f 00 00    	jmp    *0x3fd2(%rip)        # 5028 <mmap@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <printf@plt>:
    1060:	ff 25 ca 3f 00 00    	jmp    *0x3fca(%rip)        # 5030 <printf@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <__assert_fail@plt>:
    1070:	ff 25 c2 3f 00 00    	jmp    *0x3fc2(%rip)        # 5038 <__assert_fail@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	push   $0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <memset@plt>:
    1080:	ff 25 ba 3f 00 00    	jmp    *0x3fba(%rip)        # 5040 <memset@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	push   $0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <fputc@plt>:
    1090:	ff 25 b2 3f 00 00    	jmp    *0x3fb2(%rip)        # 5048 <fputc@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	push   $0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010a0 <getchar@plt>:
    10a0:	ff 25 aa 3f 00 00    	jmp    *0x3faa(%rip)        # 5050 <getchar@GLIBC_2.2.5>
    10a6:	68 07 00 00 00       	push   $0x7
    10ab:	e9 70 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010b0 <fprintf@plt>:
    10b0:	ff 25 a2 3f 00 00    	jmp    *0x3fa2(%rip)        # 5058 <fprintf@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	push   $0x8
    10bb:	e9 60 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010c0 <stat@plt>:
    10c0:	ff 25 9a 3f 00 00    	jmp    *0x3f9a(%rip)        # 5060 <stat@GLIBC_2.33>
    10c6:	68 09 00 00 00       	push   $0x9
    10cb:	e9 50 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010d0 <memcpy@plt>:
    10d0:	ff 25 92 3f 00 00    	jmp    *0x3f92(%rip)        # 5068 <memcpy@GLIBC_2.14>
    10d6:	68 0a 00 00 00       	push   $0xa
    10db:	e9 40 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010e0 <malloc@plt>:
    10e0:	ff 25 8a 3f 00 00    	jmp    *0x3f8a(%rip)        # 5070 <malloc@GLIBC_2.2.5>
    10e6:	68 0b 00 00 00       	push   $0xb
    10eb:	e9 30 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010f0 <munmap@plt>:
    10f0:	ff 25 82 3f 00 00    	jmp    *0x3f82(%rip)        # 5078 <munmap@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	push   $0xc
    10fb:	e9 20 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001100 <mprotect@plt>:
    1100:	ff 25 7a 3f 00 00    	jmp    *0x3f7a(%rip)        # 5080 <mprotect@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	push   $0xd
    110b:	e9 10 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001110 <fopen@plt>:
    1110:	ff 25 72 3f 00 00    	jmp    *0x3f72(%rip)        # 5088 <fopen@GLIBC_2.2.5>
    1116:	68 0e 00 00 00       	push   $0xe
    111b:	e9 00 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001120 <exit@plt>:
    1120:	ff 25 6a 3f 00 00    	jmp    *0x3f6a(%rip)        # 5090 <exit@GLIBC_2.2.5>
    1126:	68 0f 00 00 00       	push   $0xf
    112b:	e9 f0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001130 <fwrite@plt>:
    1130:	ff 25 62 3f 00 00    	jmp    *0x3f62(%rip)        # 5098 <fwrite@GLIBC_2.2.5>
    1136:	68 10 00 00 00       	push   $0x10
    113b:	e9 e0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001140 <getc@plt>:
    1140:	ff 25 5a 3f 00 00    	jmp    *0x3f5a(%rip)        # 50a0 <getc@GLIBC_2.2.5>
    1146:	68 11 00 00 00       	push   $0x11
    114b:	e9 d0 fe ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001150 <__cxa_finalize@plt>:
    1150:	ff 25 9a 3e 00 00    	jmp    *0x3e9a(%rip)        # 4ff0 <__cxa_finalize@GLIBC_2.2.5>
    1156:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001160 <_start>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	31 ed                	xor    %ebp,%ebp
    1166:	49 89 d1             	mov    %rdx,%r9
    1169:	5e                   	pop    %rsi
    116a:	48 89 e2             	mov    %rsp,%rdx
    116d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1171:	50                   	push   %rax
    1172:	54                   	push   %rsp
    1173:	45 31 c0             	xor    %r8d,%r8d
    1176:	31 c9                	xor    %ecx,%ecx
    1178:	48 8d 3d d1 00 00 00 	lea    0xd1(%rip),%rdi        # 1250 <main>
    117f:	ff 15 4b 3e 00 00    	call   *0x3e4b(%rip)        # 4fd0 <__libc_start_main@GLIBC_2.34>
    1185:	f4                   	hlt    
    1186:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    118d:	00 00 00 

0000000000001190 <deregister_tm_clones>:
    1190:	48 8d 3d 21 3f 00 00 	lea    0x3f21(%rip),%rdi        # 50b8 <stdout@GLIBC_2.2.5>
    1197:	48 8d 05 1a 3f 00 00 	lea    0x3f1a(%rip),%rax        # 50b8 <stdout@GLIBC_2.2.5>
    119e:	48 39 f8             	cmp    %rdi,%rax
    11a1:	74 15                	je     11b8 <deregister_tm_clones+0x28>
    11a3:	48 8b 05 2e 3e 00 00 	mov    0x3e2e(%rip),%rax        # 4fd8 <_ITM_deregisterTMCloneTable@Base>
    11aa:	48 85 c0             	test   %rax,%rax
    11ad:	74 09                	je     11b8 <deregister_tm_clones+0x28>
    11af:	ff e0                	jmp    *%rax
    11b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11b8:	c3                   	ret    
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011c0 <register_tm_clones>:
    11c0:	48 8d 3d f1 3e 00 00 	lea    0x3ef1(%rip),%rdi        # 50b8 <stdout@GLIBC_2.2.5>
    11c7:	48 8d 35 ea 3e 00 00 	lea    0x3eea(%rip),%rsi        # 50b8 <stdout@GLIBC_2.2.5>
    11ce:	48 29 fe             	sub    %rdi,%rsi
    11d1:	48 89 f0             	mov    %rsi,%rax
    11d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    11d8:	48 c1 f8 03          	sar    $0x3,%rax
    11dc:	48 01 c6             	add    %rax,%rsi
    11df:	48 d1 fe             	sar    %rsi
    11e2:	74 14                	je     11f8 <register_tm_clones+0x38>
    11e4:	48 8b 05 fd 3d 00 00 	mov    0x3dfd(%rip),%rax        # 4fe8 <_ITM_registerTMCloneTable@Base>
    11eb:	48 85 c0             	test   %rax,%rax
    11ee:	74 08                	je     11f8 <register_tm_clones+0x38>
    11f0:	ff e0                	jmp    *%rax
    11f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11f8:	c3                   	ret    
    11f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001200 <__do_global_dtors_aux>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	80 3d b5 3e 00 00 00 	cmpb   $0x0,0x3eb5(%rip)        # 50c0 <completed.0>
    120b:	75 2b                	jne    1238 <__do_global_dtors_aux+0x38>
    120d:	55                   	push   %rbp
    120e:	48 83 3d da 3d 00 00 	cmpq   $0x0,0x3dda(%rip)        # 4ff0 <__cxa_finalize@GLIBC_2.2.5>
    1215:	00 
    1216:	48 89 e5             	mov    %rsp,%rbp
    1219:	74 0c                	je     1227 <__do_global_dtors_aux+0x27>
    121b:	48 8b 3d 8e 3e 00 00 	mov    0x3e8e(%rip),%rdi        # 50b0 <__dso_handle>
    1222:	e8 29 ff ff ff       	call   1150 <__cxa_finalize@plt>
    1227:	e8 64 ff ff ff       	call   1190 <deregister_tm_clones>
    122c:	c6 05 8d 3e 00 00 01 	movb   $0x1,0x3e8d(%rip)        # 50c0 <completed.0>
    1233:	5d                   	pop    %rbp
    1234:	c3                   	ret    
    1235:	0f 1f 00             	nopl   (%rax)
    1238:	c3                   	ret    
    1239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001240 <frame_dummy>:
    1240:	f3 0f 1e fa          	endbr64 
    1244:	e9 77 ff ff ff       	jmp    11c0 <register_tm_clones>
    1249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001250 <main>:
    1250:	55                   	push   %rbp
    1251:	41 57                	push   %r15
    1253:	41 56                	push   %r14
    1255:	41 55                	push   %r13
    1257:	41 54                	push   %r12
    1259:	53                   	push   %rbx
    125a:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    1261:	83 ff 02             	cmp    $0x2,%edi
    1264:	0f 85 df 00 00 00    	jne    1349 <main+0xf9>
    126a:	48 89 f3             	mov    %rsi,%rbx
    126d:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
    1271:	48 8d 35 09 1e 00 00 	lea    0x1e09(%rip),%rsi        # 3081 <_IO_stdin_used+0x81>
    1278:	e8 93 fe ff ff       	call   1110 <fopen@plt>
    127d:	48 85 c0             	test   %rax,%rax
    1280:	0f 84 eb 00 00 00    	je     1371 <main+0x121>
    1286:	49 89 c7             	mov    %rax,%r15
    1289:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    128d:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    1292:	e8 29 fe ff ff       	call   10c0 <stat@plt>
    1297:	85 c0                	test   %eax,%eax
    1299:	74 05                	je     12a0 <main+0x50>
    129b:	45 31 e4             	xor    %r12d,%r12d
    129e:	eb 0f                	jmp    12af <main+0x5f>
    12a0:	4c 8b 64 24 38       	mov    0x38(%rsp),%r12
    12a5:	41 f6 c4 03          	test   $0x3,%r12b
    12a9:	0f 85 05 01 00 00    	jne    13b4 <main+0x164>
    12af:	bf f8 ff ff 00       	mov    $0xfffff8,%edi
    12b4:	e8 47 0d 00 00       	call   2000 <init_memory_system>
    12b9:	49 89 c5             	mov    %rax,%r13
    12bc:	48 8d 3d 0c 1e 00 00 	lea    0x1e0c(%rip),%rdi        # 30cf <_IO_stdin_used+0xcf>
    12c3:	45 31 f6             	xor    %r14d,%r14d
    12c6:	48 89 c6             	mov    %rax,%rsi
    12c9:	31 c0                	xor    %eax,%eax
    12cb:	e8 90 fd ff ff       	call   1060 <printf@plt>
    12d0:	4b 8d 2c 64          	lea    (%r12,%r12,2),%rbp
    12d4:	31 ff                	xor    %edi,%edi
    12d6:	48 89 ee             	mov    %rbp,%rsi
    12d9:	ba 07 00 00 00       	mov    $0x7,%edx
    12de:	b9 22 00 00 00       	mov    $0x22,%ecx
    12e3:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    12e9:	45 31 c9             	xor    %r9d,%r9d
    12ec:	e8 5f fd ff ff       	call   1050 <mmap@plt>
    12f1:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    12f5:	0f 84 9a 00 00 00    	je     1395 <main+0x145>
    12fb:	48 89 c3             	mov    %rax,%rbx
    12fe:	48 89 c7             	mov    %rax,%rdi
    1301:	31 f6                	xor    %esi,%esi
    1303:	48 89 ea             	mov    %rbp,%rdx
    1306:	e8 75 fd ff ff       	call   1080 <memset@plt>
    130b:	48 89 df             	mov    %rbx,%rdi
    130e:	4c 89 ee             	mov    %r13,%rsi
    1311:	4c 89 fa             	mov    %r15,%rdx
    1314:	4c 89 e1             	mov    %r12,%rcx
    1317:	e8 24 01 00 00       	call   1440 <load_zero_segment>
    131c:	4c 89 ff             	mov    %r15,%rdi
    131f:	e8 1c fd ff ff       	call   1040 <fclose@plt>
    1324:	48 89 df             	mov    %rbx,%rdi
    1327:	4c 89 ee             	mov    %r13,%rsi
    132a:	e8 31 0b 00 00       	call   1e60 <run>
    132f:	e8 9c 0e 00 00       	call   21d0 <terminate_memory_system>
    1334:	44 89 f0             	mov    %r14d,%eax
    1337:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    133e:	5b                   	pop    %rbx
    133f:	41 5c                	pop    %r12
    1341:	41 5d                	pop    %r13
    1343:	41 5e                	pop    %r14
    1345:	41 5f                	pop    %r15
    1347:	5d                   	pop    %rbp
    1348:	c3                   	ret    
    1349:	48 8b 05 a8 3c 00 00 	mov    0x3ca8(%rip),%rax        # 4ff8 <stderr@GLIBC_2.2.5>
    1350:	48 8b 08             	mov    (%rax),%rcx
    1353:	48 8d 3d 0a 1d 00 00 	lea    0x1d0a(%rip),%rdi        # 3064 <_IO_stdin_used+0x64>
    135a:	be 1c 00 00 00       	mov    $0x1c,%esi
    135f:	ba 01 00 00 00       	mov    $0x1,%edx
    1364:	e8 c7 fd ff ff       	call   1130 <fwrite@plt>
    1369:	41 be 01 00 00 00    	mov    $0x1,%r14d
    136f:	eb c3                	jmp    1334 <main+0xe4>
    1371:	48 8b 05 80 3c 00 00 	mov    0x3c80(%rip),%rax        # 4ff8 <stderr@GLIBC_2.2.5>
    1378:	48 8b 38             	mov    (%rax),%rdi
    137b:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    137f:	48 8d 35 fd 1c 00 00 	lea    0x1cfd(%rip),%rsi        # 3083 <_IO_stdin_used+0x83>
    1386:	31 c0                	xor    %eax,%eax
    1388:	e8 23 fd ff ff       	call   10b0 <fprintf@plt>
    138d:	41 be 01 00 00 00    	mov    $0x1,%r14d
    1393:	eb 9f                	jmp    1334 <main+0xe4>
    1395:	48 8d 3d 50 1d 00 00 	lea    0x1d50(%rip),%rdi        # 30ec <_IO_stdin_used+0xec>
    139c:	48 8d 35 0f 1d 00 00 	lea    0x1d0f(%rip),%rsi        # 30b2 <_IO_stdin_used+0xb2>
    13a3:	48 8d 0d 55 1d 00 00 	lea    0x1d55(%rip),%rcx        # 30ff <_IO_stdin_used+0xff>
    13aa:	ba 6f 00 00 00       	mov    $0x6f,%edx
    13af:	e8 bc fc ff ff       	call   1070 <__assert_fail@plt>
    13b4:	48 8d 3d e6 1c 00 00 	lea    0x1ce6(%rip),%rdi        # 30a1 <_IO_stdin_used+0xa1>
    13bb:	48 8d 35 f0 1c 00 00 	lea    0x1cf0(%rip),%rsi        # 30b2 <_IO_stdin_used+0xb2>
    13c2:	48 8d 0d ef 1c 00 00 	lea    0x1cef(%rip),%rcx        # 30b8 <_IO_stdin_used+0xb8>
    13c9:	ba 56 00 00 00       	mov    $0x56,%edx
    13ce:	e8 9d fc ff ff       	call   1070 <__assert_fail@plt>
    13d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    13da:	00 00 00 
    13dd:	0f 1f 00             	nopl   (%rax)

00000000000013e0 <initialize_zero_segment>:
    13e0:	53                   	push   %rbx
    13e1:	48 89 fb             	mov    %rdi,%rbx
    13e4:	31 ff                	xor    %edi,%edi
    13e6:	48 89 de             	mov    %rbx,%rsi
    13e9:	ba 07 00 00 00       	mov    $0x7,%edx
    13ee:	b9 22 00 00 00       	mov    $0x22,%ecx
    13f3:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    13f9:	45 31 c9             	xor    %r9d,%r9d
    13fc:	e8 4f fc ff ff       	call   1050 <mmap@plt>
    1401:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    1405:	74 0e                	je     1415 <initialize_zero_segment+0x35>
    1407:	48 89 c7             	mov    %rax,%rdi
    140a:	31 f6                	xor    %esi,%esi
    140c:	48 89 da             	mov    %rbx,%rdx
    140f:	5b                   	pop    %rbx
    1410:	e9 6b fc ff ff       	jmp    1080 <memset@plt>
    1415:	48 8d 3d d0 1c 00 00 	lea    0x1cd0(%rip),%rdi        # 30ec <_IO_stdin_used+0xec>
    141c:	48 8d 35 8f 1c 00 00 	lea    0x1c8f(%rip),%rsi        # 30b2 <_IO_stdin_used+0xb2>
    1423:	48 8d 0d d5 1c 00 00 	lea    0x1cd5(%rip),%rcx        # 30ff <_IO_stdin_used+0xff>
    142a:	ba 6f 00 00 00       	mov    $0x6f,%edx
    142f:	e8 3c fc ff ff       	call   1070 <__assert_fail@plt>
    1434:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    143b:	00 00 00 
    143e:	66 90                	xchg   %ax,%ax

0000000000001440 <load_zero_segment>:
    1440:	55                   	push   %rbp
    1441:	41 57                	push   %r15
    1443:	41 56                	push   %r14
    1445:	41 55                	push   %r13
    1447:	41 54                	push   %r12
    1449:	53                   	push   %rbx
    144a:	50                   	push   %rax
    144b:	49 89 d5             	mov    %rdx,%r13
    144e:	48 89 34 24          	mov    %rsi,(%rsp)
    1452:	49 89 ff             	mov    %rdi,%r15
    1455:	89 cf                	mov    %ecx,%edi
    1457:	e8 04 0e 00 00       	call   2260 <kern_realloc>
    145c:	4c 89 ef             	mov    %r13,%rdi
    145f:	e8 dc fc ff ff       	call   1140 <getc@plt>
    1464:	83 f8 ff             	cmp    $0xffffffff,%eax
    1467:	0f 84 88 00 00 00    	je     14f5 <load_zero_segment+0xb5>
    146d:	45 31 e4             	xor    %r12d,%r12d
    1470:	48 8d 1d 8d 1b 00 00 	lea    0x1b8d(%rip),%rbx        # 3004 <_IO_stdin_used+0x4>
    1477:	31 ed                	xor    %ebp,%ebp
    1479:	45 31 f6             	xor    %r14d,%r14d
    147c:	eb 21                	jmp    149f <load_zero_segment+0x5f>
    147e:	66 90                	xchg   %ax,%ax
    1480:	81 e5 ff 00 ff ff    	and    $0xffff00ff,%ebp
    1486:	c1 e0 08             	shl    $0x8,%eax
    1489:	0f b7 c0             	movzwl %ax,%eax
    148c:	09 c5                	or     %eax,%ebp
    148e:	41 83 c6 01          	add    $0x1,%r14d
    1492:	4c 89 ef             	mov    %r13,%rdi
    1495:	e8 a6 fc ff ff       	call   1140 <getc@plt>
    149a:	83 f8 ff             	cmp    $0xffffffff,%eax
    149d:	74 56                	je     14f5 <load_zero_segment+0xb5>
    149f:	44 89 f1             	mov    %r14d,%ecx
    14a2:	83 e1 03             	and    $0x3,%ecx
    14a5:	48 63 0c 8b          	movslq (%rbx,%rcx,4),%rcx
    14a9:	48 01 d9             	add    %rbx,%rcx
    14ac:	ff e1                	jmp    *%rcx
    14ae:	81 e5 ff ff ff 00    	and    $0xffffff,%ebp
    14b4:	c1 e0 18             	shl    $0x18,%eax
    14b7:	eb d3                	jmp    148c <load_zero_segment+0x4c>
    14b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    14c0:	81 e5 ff ff 00 ff    	and    $0xff00ffff,%ebp
    14c6:	0f b6 c0             	movzbl %al,%eax
    14c9:	c1 e0 10             	shl    $0x10,%eax
    14cc:	eb be                	jmp    148c <load_zero_segment+0x4c>
    14ce:	66 90                	xchg   %ax,%ax
    14d0:	0f b6 c0             	movzbl %al,%eax
    14d3:	81 e5 00 ff ff ff    	and    $0xffffff00,%ebp
    14d9:	09 c5                	or     %eax,%ebp
    14db:	48 8b 04 24          	mov    (%rsp),%rax
    14df:	89 28                	mov    %ebp,(%rax)
    14e1:	4c 89 ff             	mov    %r15,%rdi
    14e4:	89 ee                	mov    %ebp,%esi
    14e6:	4c 89 e2             	mov    %r12,%rdx
    14e9:	e8 52 00 00 00       	call   1540 <compile_instruction>
    14ee:	49 89 c4             	mov    %rax,%r12
    14f1:	31 ed                	xor    %ebp,%ebp
    14f3:	eb 99                	jmp    148e <load_zero_segment+0x4e>
    14f5:	48 83 c4 08          	add    $0x8,%rsp
    14f9:	5b                   	pop    %rbx
    14fa:	41 5c                	pop    %r12
    14fc:	41 5d                	pop    %r13
    14fe:	41 5e                	pop    %r14
    1500:	41 5f                	pop    %r15
    1502:	5d                   	pop    %rbp
    1503:	c3                   	ret    
    1504:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    150b:	00 00 00 
    150e:	66 90                	xchg   %ax,%ax

0000000000001510 <make_word>:
    1510:	48 89 c8             	mov    %rcx,%rax
    1513:	8d 4e ff             	lea    -0x1(%rsi),%ecx
    1516:	be 02 00 00 00       	mov    $0x2,%esi
    151b:	48 d3 e6             	shl    %cl,%rsi
    151e:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
    1522:	89 d1                	mov    %edx,%ecx
    1524:	48 d3 e6             	shl    %cl,%rsi
    1527:	48 f7 d6             	not    %rsi
    152a:	48 21 fe             	and    %rdi,%rsi
    152d:	48 d3 e0             	shl    %cl,%rax
    1530:	48 09 f0             	or     %rsi,%rax
    1533:	c3                   	ret    
    1534:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    153b:	00 00 00 
    153e:	66 90                	xchg   %ax,%ax

0000000000001540 <compile_instruction>:
    1540:	55                   	push   %rbp
    1541:	41 57                	push   %r15
    1543:	41 56                	push   %r14
    1545:	53                   	push   %rbx
    1546:	50                   	push   %rax
    1547:	48 89 d5             	mov    %rdx,%rbp
    154a:	89 f3                	mov    %esi,%ebx
    154c:	49 89 ff             	mov    %rdi,%r15
    154f:	41 89 f6             	mov    %esi,%r14d
    1552:	41 c1 ee 1c          	shr    $0x1c,%r14d
    1556:	48 8d 3d c8 1b 00 00 	lea    0x1bc8(%rip),%rdi        # 3125 <_IO_stdin_used+0x125>
    155d:	44 89 f6             	mov    %r14d,%esi
    1560:	31 c0                	xor    %eax,%eax
    1562:	e8 f9 fa ff ff       	call   1060 <printf@plt>
    1567:	41 83 fe 0d          	cmp    $0xd,%r14d
    156b:	75 4c                	jne    15b9 <compile_instruction+0x79>
    156d:	89 d8                	mov    %ebx,%eax
    156f:	c1 e8 19             	shr    $0x19,%eax
    1572:	4c 89 f9             	mov    %r15,%rcx
    1575:	66 41 c7 04 2f 41 c7 	movw   $0xc741,(%r15,%rbp,1)
    157c:	24 07                	and    $0x7,%al
    157e:	0c c0                	or     $0xc0,%al
    1580:	41 88 44 2f 02       	mov    %al,0x2(%r15,%rbp,1)
    1585:	41 88 5c 2f 03       	mov    %bl,0x3(%r15,%rbp,1)
    158a:	88 7c 29 04          	mov    %bh,0x4(%rcx,%rbp,1)
    158e:	89 d8                	mov    %ebx,%eax
    1590:	c1 e8 10             	shr    $0x10,%eax
    1593:	41 88 44 2f 05       	mov    %al,0x5(%r15,%rbp,1)
    1598:	c1 eb 18             	shr    $0x18,%ebx
    159b:	80 e3 01             	and    $0x1,%bl
    159e:	41 88 5c 2f 06       	mov    %bl,0x6(%r15,%rbp,1)
    15a3:	66 41 c7 44 2f 07 0f 	movw   $0x1f0f,0x7(%r15,%rbp,1)
    15aa:	1f 
    15ab:	41 c6 44 2f 09 00    	movb   $0x0,0x9(%r15,%rbp,1)
    15b1:	48 89 e8             	mov    %rbp,%rax
    15b4:	e9 80 01 00 00       	jmp    1739 <compile_instruction+0x1f9>
    15b9:	48 89 e8             	mov    %rbp,%rax
    15bc:	89 dd                	mov    %ebx,%ebp
    15be:	83 e5 07             	and    $0x7,%ebp
    15c1:	89 da                	mov    %ebx,%edx
    15c3:	c1 ea 03             	shr    $0x3,%edx
    15c6:	83 e2 07             	and    $0x7,%edx
    15c9:	89 de                	mov    %ebx,%esi
    15cb:	c1 ee 06             	shr    $0x6,%esi
    15ce:	41 89 f0             	mov    %esi,%r8d
    15d1:	41 83 e0 07          	and    $0x7,%r8d
    15d5:	41 8d 7e fd          	lea    -0x3(%r14),%edi
    15d9:	83 ff 07             	cmp    $0x7,%edi
    15dc:	0f 87 f6 00 00 00    	ja     16d8 <compile_instruction+0x198>
    15e2:	48 8d 0d 2b 1a 00 00 	lea    0x1a2b(%rip),%rcx        # 3014 <_IO_stdin_used+0x14>
    15e9:	48 63 3c b9          	movslq (%rcx,%rdi,4),%rdi
    15ed:	48 01 cf             	add    %rcx,%rdi
    15f0:	ff e7                	jmp    *%rdi
    15f2:	66 41 c7 04 07 44 89 	movw   $0x8944,(%r15,%rax,1)
    15f9:	c0 e2 03             	shl    $0x3,%dl
    15fc:	80 ca c0             	or     $0xc0,%dl
    15ff:	41 88 54 07 02       	mov    %dl,0x2(%r15,%rax,1)
    1604:	66 41 c7 44 07 03 44 	movw   $0x144,0x3(%r15,%rax,1)
    160b:	01 
    160c:	40 c0 e5 03          	shl    $0x3,%bpl
    1610:	40 80 cd c0          	or     $0xc0,%bpl
    1614:	eb 1e                	jmp    1634 <compile_instruction+0xf4>
    1616:	66 41 c7 04 07 44 89 	movw   $0x8944,(%r15,%rax,1)
    161d:	c0 e2 03             	shl    $0x3,%dl
    1620:	80 ca c0             	or     $0xc0,%dl
    1623:	41 88 54 07 02       	mov    %dl,0x2(%r15,%rax,1)
    1628:	66 41 c7 44 07 03 41 	movw   $0xf741,0x3(%r15,%rax,1)
    162f:	f7 
    1630:	40 80 cd e0          	or     $0xe0,%bpl
    1634:	41 88 6c 07 05       	mov    %bpl,0x5(%r15,%rax,1)
    1639:	66 41 c7 44 07 06 41 	movw   $0x8941,0x6(%r15,%rax,1)
    1640:	89 
    1641:	41 80 c8 c0          	or     $0xc0,%r8b
    1645:	eb 7a                	jmp    16c1 <compile_instruction+0x181>
    1647:	41 c7 04 07 31 d2 44 	movl   $0x8944d231,(%r15,%rax,1)
    164e:	89 
    164f:	c0 e2 03             	shl    $0x3,%dl
    1652:	80 ca c0             	or     $0xc0,%dl
    1655:	41 88 54 07 04       	mov    %dl,0x4(%r15,%rax,1)
    165a:	66 41 c7 44 07 05 49 	movw   $0xf749,0x5(%r15,%rax,1)
    1661:	f7 
    1662:	40 80 cd f0          	or     $0xf0,%bpl
    1666:	41 88 6c 07 07       	mov    %bpl,0x7(%r15,%rax,1)
    166b:	41 c6 44 07 08 41    	movb   $0x41,0x8(%r15,%rax,1)
    1671:	41 80 c8 90          	or     $0x90,%r8b
    1675:	45 88 44 07 09       	mov    %r8b,0x9(%r15,%rax,1)
    167a:	e9 ba 00 00 00       	jmp    1739 <compile_instruction+0x1f9>
    167f:	41 39 e8             	cmp    %ebp,%r8d
    1682:	89 d1                	mov    %edx,%ecx
    1684:	0f 44 cd             	cmove  %ebp,%ecx
    1687:	0f 44 ea             	cmove  %edx,%ebp
    168a:	66 41 c7 04 07 45 8b 	movw   $0x8b45,(%r15,%rax,1)
    1691:	42 8d 0c c1          	lea    (%rcx,%r8,8),%ecx
    1695:	81 c1 c0 00 00 00    	add    $0xc0,%ecx
    169b:	41 88 4c 07 02       	mov    %cl,0x2(%r15,%rax,1)
    16a0:	66 41 c7 44 07 03 45 	movw   $0x2345,0x3(%r15,%rax,1)
    16a7:	23 
    16a8:	42 8d 8c c5 c0 00 00 	lea    0xc0(%rbp,%r8,8),%ecx
    16af:	00 
    16b0:	41 88 4c 07 05       	mov    %cl,0x5(%r15,%rax,1)
    16b5:	66 41 c7 44 07 06 41 	movw   $0xf741,0x6(%r15,%rax,1)
    16bc:	f7 
    16bd:	41 80 c8 d0          	or     $0xd0,%r8b
    16c1:	45 88 44 07 08       	mov    %r8b,0x8(%r15,%rax,1)
    16c6:	41 c6 44 07 09 90    	movb   $0x90,0x9(%r15,%rax,1)
    16cc:	eb 6b                	jmp    1739 <compile_instruction+0x1f9>
    16ce:	41 c7 04 07 b0 06 ff 	movl   $0xe3ff06b0,(%r15,%rax,1)
    16d5:	e3 
    16d6:	eb 61                	jmp    1739 <compile_instruction+0x1f9>
    16d8:	81 fb ff ff ff 0f    	cmp    $0xfffffff,%ebx
    16de:	77 68                	ja     1748 <compile_instruction+0x208>
    16e0:	66 41 c7 04 07 45 85 	movw   $0x8545,(%r15,%rax,1)
    16e7:	8d 4c ed 00          	lea    0x0(%rbp,%rbp,8),%ecx
    16eb:	80 c9 c0             	or     $0xc0,%cl
    16ee:	41 88 4c 07 02       	mov    %cl,0x2(%r15,%rax,1)
    16f3:	66 41 c7 44 07 03 45 	movw   $0xf45,0x3(%r15,%rax,1)
    16fa:	0f 
    16fb:	41 c6 44 07 05 45    	movb   $0x45,0x5(%r15,%rax,1)
    1701:	8d 0c f2             	lea    (%rdx,%rsi,8),%ecx
    1704:	80 c9 c0             	or     $0xc0,%cl
    1707:	41 88 4c 07 06       	mov    %cl,0x6(%r15,%rax,1)
    170c:	eb 1d                	jmp    172b <compile_instruction+0x1eb>
    170e:	66 41 c7 04 07 44 89 	movw   $0x8944,(%r15,%rax,1)
    1715:	40 c0 e5 03          	shl    $0x3,%bpl
    1719:	40 80 cd c7          	or     $0xc7,%bpl
    171d:	41 88 6c 07 02       	mov    %bpl,0x2(%r15,%rax,1)
    1722:	41 c7 44 07 03 b0 02 	movl   $0xd3ff02b0,0x3(%r15,%rax,1)
    1729:	ff d3 
    172b:	66 41 c7 44 07 07 0f 	movw   $0x1f0f,0x7(%r15,%rax,1)
    1732:	1f 
    1733:	41 c6 44 07 09 00    	movb   $0x0,0x9(%r15,%rax,1)
    1739:	48 83 c0 0a          	add    $0xa,%rax
    173d:	48 83 c4 08          	add    $0x8,%rsp
    1741:	5b                   	pop    %rbx
    1742:	41 5e                	pop    %r14
    1744:	41 5f                	pop    %r15
    1746:	5d                   	pop    %rbp
    1747:	c3                   	ret    
    1748:	41 83 c6 ff          	add    $0xffffffff,%r14d
    174c:	41 83 fe 0b          	cmp    $0xb,%r14d
    1750:	77 e7                	ja     1739 <compile_instruction+0x1f9>
    1752:	48 8d 0d db 18 00 00 	lea    0x18db(%rip),%rcx        # 3034 <_IO_stdin_used+0x34>
    1759:	4a 63 34 b1          	movslq (%rcx,%r14,4),%rsi
    175d:	48 01 ce             	add    %rcx,%rsi
    1760:	ff e6                	jmp    *%rsi
    1762:	66 41 c7 04 07 4c 89 	movw   $0x894c,(%r15,%rax,1)
    1769:	c0 e2 03             	shl    $0x3,%dl
    176c:	80 ca c6             	or     $0xc6,%dl
    176f:	41 88 54 07 02       	mov    %dl,0x2(%r15,%rax,1)
    1774:	41 c7 44 07 03 b0 08 	movl   $0xd3ff08b0,0x3(%r15,%rax,1)
    177b:	ff d3 
    177d:	eb ac                	jmp    172b <compile_instruction+0x1eb>
    177f:	66 41 c7 04 07 4c 89 	movw   $0x894c,(%r15,%rax,1)
    1786:	41 c0 e0 03          	shl    $0x3,%r8b
    178a:	41 80 c8 c6          	or     $0xc6,%r8b
    178e:	45 88 44 07 02       	mov    %r8b,0x2(%r15,%rax,1)
    1793:	41 c7 44 07 03 b0 09 	movl   $0xd3ff09b0,0x3(%r15,%rax,1)
    179a:	ff d3 
    179c:	eb 8d                	jmp    172b <compile_instruction+0x1eb>
    179e:	66 41 c7 04 07 44 89 	movw   $0x8944,(%r15,%rax,1)
    17a5:	40 c0 e5 03          	shl    $0x3,%bpl
    17a9:	40 80 cd c7          	or     $0xc7,%bpl
    17ad:	41 88 6c 07 02       	mov    %bpl,0x2(%r15,%rax,1)
    17b2:	41 c7 44 07 03 b0 00 	movl   $0xd3ff00b0,0x3(%r15,%rax,1)
    17b9:	ff d3 
    17bb:	66 41 c7 44 07 07 41 	movw   $0x8941,0x7(%r15,%rax,1)
    17c2:	89 
    17c3:	80 ca c0             	or     $0xc0,%dl
    17c6:	41 88 54 07 09       	mov    %dl,0x9(%r15,%rax,1)
    17cb:	e9 69 ff ff ff       	jmp    1739 <compile_instruction+0x1f9>
    17d0:	66 41 c7 04 07 44 89 	movw   $0x8944,(%r15,%rax,1)
    17d7:	40 c0 e5 03          	shl    $0x3,%bpl
    17db:	40 80 cd c7          	or     $0xc7,%bpl
    17df:	41 88 6c 07 02       	mov    %bpl,0x2(%r15,%rax,1)
    17e4:	41 c7 44 07 03 b0 01 	movl   $0xd3ff01b0,0x3(%r15,%rax,1)
    17eb:	ff d3 
    17ed:	e9 39 ff ff ff       	jmp    172b <compile_instruction+0x1eb>
    17f2:	41 c7 04 07 b0 03 ff 	movl   $0xd3ff03b0,(%r15,%rax,1)
    17f9:	d3 
    17fa:	66 41 c7 44 07 04 41 	movw   $0x8941,0x4(%r15,%rax,1)
    1801:	89 
    1802:	40 80 cd c0          	or     $0xc0,%bpl
    1806:	41 88 6c 07 06       	mov    %bpl,0x6(%r15,%rax,1)
    180b:	e9 1b ff ff ff       	jmp    172b <compile_instruction+0x1eb>
    1810:	66 41 c7 04 07 44 89 	movw   $0x8944,(%r15,%rax,1)
    1817:	40 c0 e5 03          	shl    $0x3,%bpl
    181b:	40 80 cd c6          	or     $0xc6,%bpl
    181f:	41 88 6c 07 02       	mov    %bpl,0x2(%r15,%rax,1)
    1824:	66 41 c7 44 07 03 44 	movw   $0x8944,0x3(%r15,%rax,1)
    182b:	89 
    182c:	c0 e2 03             	shl    $0x3,%dl
    182f:	80 ca c7             	or     $0xc7,%dl
    1832:	41 88 54 07 05       	mov    %dl,0x5(%r15,%rax,1)
    1837:	41 c7 44 07 06 b0 04 	movl   $0xe3ff04b0,0x6(%r15,%rax,1)
    183e:	ff e3 
    1840:	e9 f4 fe ff ff       	jmp    1739 <compile_instruction+0x1f9>
    1845:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    184c:	00 00 00 
    184f:	90                   	nop

0000000000001850 <load_reg>:
    1850:	66 c7 04 37 41 c7    	movw   $0xc741,(%rdi,%rsi,1)
    1856:	80 ca c0             	or     $0xc0,%dl
    1859:	88 54 37 02          	mov    %dl,0x2(%rdi,%rsi,1)
    185d:	88 4c 37 03          	mov    %cl,0x3(%rdi,%rsi,1)
    1861:	88 6c 37 04          	mov    %ch,0x4(%rdi,%rsi,1)
    1865:	89 c8                	mov    %ecx,%eax
    1867:	c1 e8 10             	shr    $0x10,%eax
    186a:	88 44 37 05          	mov    %al,0x5(%rdi,%rsi,1)
    186e:	c1 e9 18             	shr    $0x18,%ecx
    1871:	88 4c 37 06          	mov    %cl,0x6(%rdi,%rsi,1)
    1875:	66 c7 44 37 07 0f 1f 	movw   $0x1f0f,0x7(%rdi,%rsi,1)
    187c:	c6 44 37 09 00       	movb   $0x0,0x9(%rdi,%rsi,1)
    1881:	b8 0a 00 00 00       	mov    $0xa,%eax
    1886:	c3                   	ret    
    1887:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    188e:	00 00 

0000000000001890 <print_reg>:
    1890:	66 c7 04 37 44 89    	movw   $0x8944,(%rdi,%rsi,1)
    1896:	c0 e2 03             	shl    $0x3,%dl
    1899:	80 ca c7             	or     $0xc7,%dl
    189c:	88 54 37 02          	mov    %dl,0x2(%rdi,%rsi,1)
    18a0:	c7 44 37 03 b0 02 ff 	movl   $0xd3ff02b0,0x3(%rdi,%rsi,1)
    18a7:	d3 
    18a8:	66 c7 44 37 07 0f 1f 	movw   $0x1f0f,0x7(%rdi,%rsi,1)
    18af:	c6 44 37 09 00       	movb   $0x0,0x9(%rdi,%rsi,1)
    18b4:	b8 0a 00 00 00       	mov    $0xa,%eax
    18b9:	c3                   	ret    
    18ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000018c0 <add_regs>:
    18c0:	66 c7 04 37 44 89    	movw   $0x8944,(%rdi,%rsi,1)
    18c6:	c0 e1 03             	shl    $0x3,%cl
    18c9:	80 c9 c0             	or     $0xc0,%cl
    18cc:	88 4c 37 02          	mov    %cl,0x2(%rdi,%rsi,1)
    18d0:	66 c7 44 37 03 44 01 	movw   $0x144,0x3(%rdi,%rsi,1)
    18d7:	41 c0 e0 03          	shl    $0x3,%r8b
    18db:	41 80 c8 c0          	or     $0xc0,%r8b
    18df:	44 88 44 37 05       	mov    %r8b,0x5(%rdi,%rsi,1)
    18e4:	66 c7 44 37 06 41 89 	movw   $0x8941,0x6(%rdi,%rsi,1)
    18eb:	80 ca c0             	or     $0xc0,%dl
    18ee:	88 54 37 08          	mov    %dl,0x8(%rdi,%rsi,1)
    18f2:	c6 44 37 09 90       	movb   $0x90,0x9(%rdi,%rsi,1)
    18f7:	b8 0a 00 00 00       	mov    $0xa,%eax
    18fc:	c3                   	ret    
    18fd:	0f 1f 00             	nopl   (%rax)

0000000000001900 <handle_halt>:
    1900:	c7 04 37 b0 06 ff e3 	movl   $0xe3ff06b0,(%rdi,%rsi,1)
    1907:	b8 0a 00 00 00       	mov    $0xa,%eax
    190c:	c3                   	ret    
    190d:	0f 1f 00             	nopl   (%rax)

0000000000001910 <nand_regs>:
    1910:	44 39 c2             	cmp    %r8d,%edx
    1913:	89 c8                	mov    %ecx,%eax
    1915:	41 0f 44 c0          	cmove  %r8d,%eax
    1919:	44 0f 44 c1          	cmove  %ecx,%r8d
    191d:	66 c7 04 37 45 8b    	movw   $0x8b45,(%rdi,%rsi,1)
    1923:	89 d1                	mov    %edx,%ecx
    1925:	83 c9 18             	or     $0x18,%ecx
    1928:	c1 e1 03             	shl    $0x3,%ecx
    192b:	09 c8                	or     %ecx,%eax
    192d:	88 44 37 02          	mov    %al,0x2(%rdi,%rsi,1)
    1931:	66 c7 44 37 03 45 23 	movw   $0x2345,0x3(%rdi,%rsi,1)
    1938:	44 09 c1             	or     %r8d,%ecx
    193b:	88 4c 37 05          	mov    %cl,0x5(%rdi,%rsi,1)
    193f:	66 c7 44 37 06 41 f7 	movw   $0xf741,0x6(%rdi,%rsi,1)
    1946:	80 ca d0             	or     $0xd0,%dl
    1949:	88 54 37 08          	mov    %dl,0x8(%rdi,%rsi,1)
    194d:	c6 44 37 09 90       	movb   $0x90,0x9(%rdi,%rsi,1)
    1952:	b8 0a 00 00 00       	mov    $0xa,%eax
    1957:	c3                   	ret    
    1958:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    195f:	00 

0000000000001960 <mult_regs>:
    1960:	66 c7 04 37 44 89    	movw   $0x8944,(%rdi,%rsi,1)
    1966:	c0 e1 03             	shl    $0x3,%cl
    1969:	80 c9 c0             	or     $0xc0,%cl
    196c:	88 4c 37 02          	mov    %cl,0x2(%rdi,%rsi,1)
    1970:	66 c7 44 37 03 41 f7 	movw   $0xf741,0x3(%rdi,%rsi,1)
    1977:	41 80 c8 e0          	or     $0xe0,%r8b
    197b:	44 88 44 37 05       	mov    %r8b,0x5(%rdi,%rsi,1)
    1980:	66 c7 44 37 06 41 89 	movw   $0x8941,0x6(%rdi,%rsi,1)
    1987:	80 ca c0             	or     $0xc0,%dl
    198a:	88 54 37 08          	mov    %dl,0x8(%rdi,%rsi,1)
    198e:	c6 44 37 09 90       	movb   $0x90,0x9(%rdi,%rsi,1)
    1993:	b8 0a 00 00 00       	mov    $0xa,%eax
    1998:	c3                   	ret    
    1999:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000019a0 <div_regs>:
    19a0:	c7 04 37 31 d2 44 89 	movl   $0x8944d231,(%rdi,%rsi,1)
    19a7:	c0 e1 03             	shl    $0x3,%cl
    19aa:	80 c9 c0             	or     $0xc0,%cl
    19ad:	88 4c 37 04          	mov    %cl,0x4(%rdi,%rsi,1)
    19b1:	66 c7 44 37 05 49 f7 	movw   $0xf749,0x5(%rdi,%rsi,1)
    19b8:	41 80 c8 f0          	or     $0xf0,%r8b
    19bc:	44 88 44 37 07       	mov    %r8b,0x7(%rdi,%rsi,1)
    19c1:	c6 44 37 08 41       	movb   $0x41,0x8(%rdi,%rsi,1)
    19c6:	80 ca 90             	or     $0x90,%dl
    19c9:	88 54 37 09          	mov    %dl,0x9(%rdi,%rsi,1)
    19cd:	b8 0a 00 00 00       	mov    $0xa,%eax
    19d2:	c3                   	ret    
    19d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    19da:	00 00 00 
    19dd:	0f 1f 00             	nopl   (%rax)

00000000000019e0 <cond_move>:
    19e0:	66 c7 04 37 45 85    	movw   $0x8545,(%rdi,%rsi,1)
    19e6:	42 8d 04 c5 00 00 00 	lea    0x0(,%r8,8),%eax
    19ed:	00 
    19ee:	44 09 c0             	or     %r8d,%eax
    19f1:	0c c0                	or     $0xc0,%al
    19f3:	88 44 37 02          	mov    %al,0x2(%rdi,%rsi,1)
    19f7:	66 c7 44 37 03 45 0f 	movw   $0xf45,0x3(%rdi,%rsi,1)
    19fe:	c6 44 37 05 45       	movb   $0x45,0x5(%rdi,%rsi,1)
    1a03:	c1 e2 03             	shl    $0x3,%edx
    1a06:	09 ca                	or     %ecx,%edx
    1a08:	80 ca c0             	or     $0xc0,%dl
    1a0b:	88 54 37 06          	mov    %dl,0x6(%rdi,%rsi,1)
    1a0f:	66 c7 44 37 07 0f 1f 	movw   $0x1f0f,0x7(%rdi,%rsi,1)
    1a16:	c6 44 37 09 00       	movb   $0x0,0x9(%rdi,%rsi,1)
    1a1b:	b8 0a 00 00 00       	mov    $0xa,%eax
    1a20:	c3                   	ret    
    1a21:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1a28:	00 00 00 
    1a2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001a30 <read_into_reg>:
    1a30:	c7 04 37 b0 03 ff d3 	movl   $0xd3ff03b0,(%rdi,%rsi,1)
    1a37:	66 c7 44 37 04 41 89 	movw   $0x8941,0x4(%rdi,%rsi,1)
    1a3e:	80 ca c0             	or     $0xc0,%dl
    1a41:	88 54 37 06          	mov    %dl,0x6(%rdi,%rsi,1)
    1a45:	66 c7 44 37 07 0f 1f 	movw   $0x1f0f,0x7(%rdi,%rsi,1)
    1a4c:	c6 44 37 09 00       	movb   $0x0,0x9(%rdi,%rsi,1)
    1a51:	b8 0a 00 00 00       	mov    $0xa,%eax
    1a56:	c3                   	ret    
    1a57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1a5e:	00 00 

0000000000001a60 <seg_load>:
    1a60:	66 c7 04 37 4c 89    	movw   $0x894c,(%rdi,%rsi,1)
    1a66:	c0 e1 03             	shl    $0x3,%cl
    1a69:	80 c9 c6             	or     $0xc6,%cl
    1a6c:	88 4c 37 02          	mov    %cl,0x2(%rdi,%rsi,1)
    1a70:	c7 44 37 03 b0 08 ff 	movl   $0xd3ff08b0,0x3(%rdi,%rsi,1)
    1a77:	d3 
    1a78:	66 c7 44 37 07 0f 1f 	movw   $0x1f0f,0x7(%rdi,%rsi,1)
    1a7f:	c6 44 37 09 00       	movb   $0x0,0x9(%rdi,%rsi,1)
    1a84:	b8 0a 00 00 00       	mov    $0xa,%eax
    1a89:	c3                   	ret    
    1a8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001a90 <seg_store>:
    1a90:	66 c7 04 37 4c 89    	movw   $0x894c,(%rdi,%rsi,1)
    1a96:	c0 e2 03             	shl    $0x3,%dl
    1a99:	80 ca c6             	or     $0xc6,%dl
    1a9c:	88 54 37 02          	mov    %dl,0x2(%rdi,%rsi,1)
    1aa0:	c7 44 37 03 b0 09 ff 	movl   $0xd3ff09b0,0x3(%rdi,%rsi,1)
    1aa7:	d3 
    1aa8:	66 c7 44 37 07 0f 1f 	movw   $0x1f0f,0x7(%rdi,%rsi,1)
    1aaf:	c6 44 37 09 00       	movb   $0x0,0x9(%rdi,%rsi,1)
    1ab4:	b8 0a 00 00 00       	mov    $0xa,%eax
    1ab9:	c3                   	ret    
    1aba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001ac0 <inject_load_program>:
    1ac0:	66 c7 04 37 44 89    	movw   $0x8944,(%rdi,%rsi,1)
    1ac6:	c0 e1 03             	shl    $0x3,%cl
    1ac9:	80 c9 c6             	or     $0xc6,%cl
    1acc:	88 4c 37 02          	mov    %cl,0x2(%rdi,%rsi,1)
    1ad0:	66 c7 44 37 03 44 89 	movw   $0x8944,0x3(%rdi,%rsi,1)
    1ad7:	c0 e2 03             	shl    $0x3,%dl
    1ada:	80 ca c7             	or     $0xc7,%dl
    1add:	88 54 37 05          	mov    %dl,0x5(%rdi,%rsi,1)
    1ae1:	c7 44 37 06 b0 04 ff 	movl   $0xe3ff04b0,0x6(%rdi,%rsi,1)
    1ae8:	e3 
    1ae9:	b8 0a 00 00 00       	mov    $0xa,%eax
    1aee:	c3                   	ret    
    1aef:	90                   	nop

0000000000001af0 <inject_map_segment>:
    1af0:	66 c7 04 37 44 89    	movw   $0x8944,(%rdi,%rsi,1)
    1af6:	c0 e1 03             	shl    $0x3,%cl
    1af9:	80 c9 c7             	or     $0xc7,%cl
    1afc:	88 4c 37 02          	mov    %cl,0x2(%rdi,%rsi,1)
    1b00:	c7 44 37 03 b0 00 ff 	movl   $0xd3ff00b0,0x3(%rdi,%rsi,1)
    1b07:	d3 
    1b08:	66 c7 44 37 07 41 89 	movw   $0x8941,0x7(%rdi,%rsi,1)
    1b0f:	80 ca c0             	or     $0xc0,%dl
    1b12:	88 54 37 09          	mov    %dl,0x9(%rdi,%rsi,1)
    1b16:	b8 0a 00 00 00       	mov    $0xa,%eax
    1b1b:	c3                   	ret    
    1b1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001b20 <inject_unmap_segment>:
    1b20:	66 c7 04 37 44 89    	movw   $0x8944,(%rdi,%rsi,1)
    1b26:	c0 e2 03             	shl    $0x3,%dl
    1b29:	80 ca c7             	or     $0xc7,%dl
    1b2c:	88 54 37 02          	mov    %dl,0x2(%rdi,%rsi,1)
    1b30:	c7 44 37 03 b0 01 ff 	movl   $0xd3ff01b0,0x3(%rdi,%rsi,1)
    1b37:	d3 
    1b38:	66 c7 44 37 07 0f 1f 	movw   $0x1f0f,0x7(%rdi,%rsi,1)
    1b3f:	c6 44 37 09 00       	movb   $0x0,0x9(%rdi,%rsi,1)
    1b44:	b8 0a 00 00 00       	mov    $0xa,%eax
    1b49:	c3                   	ret    
    1b4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001b50 <seg_load_print>:
    1b50:	41 56                	push   %r14
    1b52:	53                   	push   %rbx
    1b53:	50                   	push   %rax
    1b54:	89 f3                	mov    %esi,%ebx
    1b56:	49 89 fe             	mov    %rdi,%r14
    1b59:	48 8d 3d d3 15 00 00 	lea    0x15d3(%rip),%rdi        # 3133 <_IO_stdin_used+0x133>
    1b60:	31 c0                	xor    %eax,%eax
    1b62:	e8 f9 f4 ff ff       	call   1060 <printf@plt>
    1b67:	48 8d 3d d1 15 00 00 	lea    0x15d1(%rip),%rdi        # 313f <_IO_stdin_used+0x13f>
    1b6e:	89 de                	mov    %ebx,%esi
    1b70:	31 c0                	xor    %eax,%eax
    1b72:	e8 e9 f4 ff ff       	call   1060 <printf@plt>
    1b77:	48 8d 3d d1 15 00 00 	lea    0x15d1(%rip),%rdi        # 314f <_IO_stdin_used+0x14f>
    1b7e:	4c 89 f6             	mov    %r14,%rsi
    1b81:	31 c0                	xor    %eax,%eax
    1b83:	48 83 c4 08          	add    $0x8,%rsp
    1b87:	5b                   	pop    %rbx
    1b88:	41 5e                	pop    %r14
    1b8a:	e9 d1 f4 ff ff       	jmp    1060 <printf@plt>
    1b8f:	90                   	nop

0000000000001b90 <seg_store_print>:
    1b90:	89 f0                	mov    %esi,%eax
    1b92:	c7 04 07 00 00 00 c0 	movl   $0xc0000000,(%rdi,%rax,1)
    1b99:	c3                   	ret    
    1b9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001ba0 <map_segment>:
    1ba0:	53                   	push   %rbx
    1ba1:	48 8d 05 30 35 00 00 	lea    0x3530(%rip),%rax        # 50d8 <rec>
    1ba8:	48 8b 10             	mov    (%rax),%rdx
    1bab:	8d 04 bd 07 00 00 00 	lea    0x7(,%rdi,4),%eax
    1bb2:	41 89 f8             	mov    %edi,%r8d
    1bb5:	41 c1 e0 02          	shl    $0x2,%r8d
    1bb9:	89 c1                	mov    %eax,%ecx
    1bbb:	c1 e9 05             	shr    $0x5,%ecx
    1bbe:	48 c1 e1 04          	shl    $0x4,%rcx
    1bc2:	48 8b 7c 0a 08       	mov    0x8(%rdx,%rcx,1),%rdi
    1bc7:	85 ff                	test   %edi,%edi
    1bc9:	74 2b                	je     1bf6 <map_segment+0x56>
    1bcb:	4c 8d 0c 0a          	lea    (%rdx,%rcx,1),%r9
    1bcf:	49 83 c1 08          	add    $0x8,%r9
    1bd3:	48 8b 0c 0a          	mov    (%rdx,%rcx,1),%rcx
    1bd7:	8d 57 ff             	lea    -0x1(%rdi),%edx
    1bda:	8b 1c 91             	mov    (%rcx,%rdx,4),%ebx
    1bdd:	48 b9 00 00 00 00 ff 	movabs $0xffffffff00000000,%rcx
    1be4:	ff ff ff 
    1be7:	48 21 f9             	and    %rdi,%rcx
    1bea:	48 09 d1             	or     %rdx,%rcx
    1bed:	49 89 09             	mov    %rcx,(%r9)
    1bf0:	48 83 fb 01          	cmp    $0x1,%rbx
    1bf4:	75 26                	jne    1c1c <map_segment+0x7c>
    1bf6:	48 8d 0d e3 34 00 00 	lea    0x34e3(%rip),%rcx        # 50e0 <start_unused>
    1bfd:	8b 19                	mov    (%rcx),%ebx
    1bff:	83 e0 e0             	and    $0xffffffe0,%eax
    1c02:	89 c2                	mov    %eax,%edx
    1c04:	83 ca 18             	or     $0x18,%edx
    1c07:	01 d8                	add    %ebx,%eax
    1c09:	83 c0 20             	add    $0x20,%eax
    1c0c:	83 c3 08             	add    $0x8,%ebx
    1c0f:	89 01                	mov    %eax,(%rcx)
    1c11:	89 54 1e f8          	mov    %edx,-0x8(%rsi,%rbx,1)
    1c15:	44 89 44 1e fc       	mov    %r8d,-0x4(%rsi,%rbx,1)
    1c1a:	eb 13                	jmp    1c2f <map_segment+0x8f>
    1c1c:	48 8d 3c 1e          	lea    (%rsi,%rbx,1),%rdi
    1c20:	44 89 44 1e fc       	mov    %r8d,-0x4(%rsi,%rbx,1)
    1c25:	44 89 c2             	mov    %r8d,%edx
    1c28:	31 f6                	xor    %esi,%esi
    1c2a:	e8 51 f4 ff ff       	call   1080 <memset@plt>
    1c2f:	48 8d 3d 2a 15 00 00 	lea    0x152a(%rip),%rdi        # 3160 <_IO_stdin_used+0x160>
    1c36:	89 de                	mov    %ebx,%esi
    1c38:	31 c0                	xor    %eax,%eax
    1c3a:	e8 21 f4 ff ff       	call   1060 <printf@plt>
    1c3f:	89 d8                	mov    %ebx,%eax
    1c41:	5b                   	pop    %rbx
    1c42:	c3                   	ret    
    1c43:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1c4a:	00 00 00 
    1c4d:	0f 1f 00             	nopl   (%rax)

0000000000001c50 <unmap_segment>:
    1c50:	55                   	push   %rbp
    1c51:	41 57                	push   %r15
    1c53:	41 56                	push   %r14
    1c55:	41 55                	push   %r13
    1c57:	41 54                	push   %r12
    1c59:	53                   	push   %rbx
    1c5a:	48 83 ec 18          	sub    $0x18,%rsp
    1c5e:	41 89 fe             	mov    %edi,%r14d
    1c61:	48 8d 05 68 34 00 00 	lea    0x3468(%rip),%rax        # 50d0 <usable>
    1c68:	48 8b 00             	mov    (%rax),%rax
    1c6b:	48 8d 0d 66 34 00 00 	lea    0x3466(%rip),%rcx        # 50d8 <rec>
    1c72:	48 8b 09             	mov    (%rcx),%rcx
    1c75:	41 8d 56 f8          	lea    -0x8(%r14),%edx
    1c79:	8b 04 10             	mov    (%rax,%rdx,1),%eax
    1c7c:	83 c0 08             	add    $0x8,%eax
    1c7f:	c1 e8 05             	shr    $0x5,%eax
    1c82:	83 c0 ff             	add    $0xffffffff,%eax
    1c85:	48 c1 e0 04          	shl    $0x4,%rax
    1c89:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    1c8d:	48 8b 1c 01          	mov    (%rcx,%rax,1),%rbx
    1c91:	48 8b 6c 01 08       	mov    0x8(%rcx,%rax,1),%rbp
    1c96:	4c 8d 2c 01          	lea    (%rcx,%rax,1),%r13
    1c9a:	49 83 c5 08          	add    $0x8,%r13
    1c9e:	49 89 ec             	mov    %rbp,%r12
    1ca1:	49 c1 ec 20          	shr    $0x20,%r12
    1ca5:	44 39 e5             	cmp    %r12d,%ebp
    1ca8:	75 4c                	jne    1cf6 <unmap_segment+0xa6>
    1caa:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    1caf:	49 c1 e4 21          	shl    $0x21,%r12
    1cb3:	89 e8                	mov    %ebp,%eax
    1cb5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1cba:	4c 89 e7             	mov    %r12,%rdi
    1cbd:	48 c1 ef 1e          	shr    $0x1e,%rdi
    1cc1:	e8 1a f4 ff ff       	call   10e0 <malloc@plt>
    1cc6:	49 89 c7             	mov    %rax,%r15
    1cc9:	85 ed                	test   %ebp,%ebp
    1ccb:	74 11                	je     1cde <unmap_segment+0x8e>
    1ccd:	89 ea                	mov    %ebp,%edx
    1ccf:	48 c1 e2 02          	shl    $0x2,%rdx
    1cd3:	4c 89 ff             	mov    %r15,%rdi
    1cd6:	48 89 de             	mov    %rbx,%rsi
    1cd9:	e8 f2 f3 ff ff       	call   10d0 <memcpy@plt>
    1cde:	4c 03 64 24 08       	add    0x8(%rsp),%r12
    1ce3:	48 89 df             	mov    %rbx,%rdi
    1ce6:	e8 45 f3 ff ff       	call   1030 <free@plt>
    1ceb:	4c 89 fb             	mov    %r15,%rbx
    1cee:	4c 89 e5             	mov    %r12,%rbp
    1cf1:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    1cf6:	8d 45 01             	lea    0x1(%rbp),%eax
    1cf9:	48 b9 00 00 00 00 ff 	movabs $0xffffffff00000000,%rcx
    1d00:	ff ff ff 
    1d03:	48 21 e9             	and    %rbp,%rcx
    1d06:	48 09 c1             	or     %rax,%rcx
    1d09:	89 e8                	mov    %ebp,%eax
    1d0b:	44 89 34 83          	mov    %r14d,(%rbx,%rax,4)
    1d0f:	48 89 1a             	mov    %rbx,(%rdx)
    1d12:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    1d16:	48 83 c4 18          	add    $0x18,%rsp
    1d1a:	5b                   	pop    %rbx
    1d1b:	41 5c                	pop    %r12
    1d1d:	41 5d                	pop    %r13
    1d1f:	41 5e                	pop    %r14
    1d21:	41 5f                	pop    %r15
    1d23:	5d                   	pop    %rbp
    1d24:	c3                   	ret    
    1d25:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1d2c:	00 00 00 
    1d2f:	90                   	nop

0000000000001d30 <load_program>:
    1d30:	55                   	push   %rbp
    1d31:	41 57                	push   %r15
    1d33:	41 56                	push   %r14
    1d35:	41 55                	push   %r13
    1d37:	41 54                	push   %r12
    1d39:	53                   	push   %rbx
    1d3a:	50                   	push   %rax
    1d3b:	85 ff                	test   %edi,%edi
    1d3d:	0f 84 df 00 00 00    	je     1e22 <load_program+0xf2>
    1d43:	49 89 f6             	mov    %rsi,%r14
    1d46:	89 fb                	mov    %edi,%ebx
    1d48:	48 8d 3d 5a 14 00 00 	lea    0x145a(%rip),%rdi        # 31a9 <_IO_stdin_used+0x1a9>
    1d4f:	89 de                	mov    %ebx,%esi
    1d51:	31 c0                	xor    %eax,%eax
    1d53:	e8 08 f3 ff ff       	call   1060 <printf@plt>
    1d58:	48 8d 3d 57 14 00 00 	lea    0x1457(%rip),%rdi        # 31b6 <_IO_stdin_used+0x1b6>
    1d5f:	4c 89 f6             	mov    %r14,%rsi
    1d62:	31 c0                	xor    %eax,%eax
    1d64:	e8 f7 f2 ff ff       	call   1060 <printf@plt>
    1d69:	89 d8                	mov    %ebx,%eax
    1d6b:	45 8b 7c 06 fc       	mov    -0x4(%r14,%rax,1),%r15d
    1d70:	45 89 fd             	mov    %r15d,%r13d
    1d73:	41 c1 ed 02          	shr    $0x2,%r13d
    1d77:	44 89 ff             	mov    %r15d,%edi
    1d7a:	e8 e1 04 00 00       	call   2260 <kern_realloc>
    1d7f:	89 df                	mov    %ebx,%edi
    1d81:	44 89 fe             	mov    %r15d,%esi
    1d84:	e8 57 05 00 00       	call   22e0 <kern_memcpy>
    1d89:	43 8d 1c 7f          	lea    (%r15,%r15,2),%ebx
    1d8d:	31 ff                	xor    %edi,%edi
    1d8f:	48 89 de             	mov    %rbx,%rsi
    1d92:	ba 03 00 00 00       	mov    $0x3,%edx
    1d97:	b9 22 00 00 00       	mov    $0x22,%ecx
    1d9c:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    1da2:	45 31 c9             	xor    %r9d,%r9d
    1da5:	e8 a6 f2 ff ff       	call   1050 <mmap@plt>
    1daa:	49 89 c4             	mov    %rax,%r12
    1dad:	48 89 c7             	mov    %rax,%rdi
    1db0:	31 f6                	xor    %esi,%esi
    1db2:	48 89 da             	mov    %rbx,%rdx
    1db5:	e8 c6 f2 ff ff       	call   1080 <memset@plt>
    1dba:	41 83 ff 04          	cmp    $0x4,%r15d
    1dbe:	72 37                	jb     1df7 <load_program+0xc7>
    1dc0:	41 83 fd 02          	cmp    $0x2,%r13d
    1dc4:	bb 01 00 00 00       	mov    $0x1,%ebx
    1dc9:	41 0f 43 dd          	cmovae %r13d,%ebx
    1dcd:	31 ed                	xor    %ebp,%ebp
    1dcf:	31 c0                	xor    %eax,%eax
    1dd1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1dd8:	00 00 00 
    1ddb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1de0:	41 8b 34 ae          	mov    (%r14,%rbp,4),%esi
    1de4:	89 c2                	mov    %eax,%edx
    1de6:	4c 89 e7             	mov    %r12,%rdi
    1de9:	e8 52 f7 ff ff       	call   1540 <compile_instruction>
    1dee:	48 83 c5 01          	add    $0x1,%rbp
    1df2:	48 39 eb             	cmp    %rbp,%rbx
    1df5:	75 e9                	jne    1de0 <load_program+0xb0>
    1df7:	45 01 ed             	add    %r13d,%r13d
    1dfa:	43 8d 74 ad 00       	lea    0x0(%r13,%r13,4),%esi
    1dff:	4c 89 e7             	mov    %r12,%rdi
    1e02:	ba 05 00 00 00       	mov    $0x5,%edx
    1e07:	e8 f4 f2 ff ff       	call   1100 <mprotect@plt>
    1e0c:	85 c0                	test   %eax,%eax
    1e0e:	75 31                	jne    1e41 <load_program+0x111>
    1e10:	4c 89 e0             	mov    %r12,%rax
    1e13:	48 83 c4 08          	add    $0x8,%rsp
    1e17:	5b                   	pop    %rbx
    1e18:	41 5c                	pop    %r12
    1e1a:	41 5d                	pop    %r13
    1e1c:	41 5e                	pop    %r14
    1e1e:	41 5f                	pop    %r15
    1e20:	5d                   	pop    %rbp
    1e21:	c3                   	ret    
    1e22:	48 8d 3d 4d 13 00 00 	lea    0x134d(%rip),%rdi        # 3176 <_IO_stdin_used+0x176>
    1e29:	48 8d 35 82 12 00 00 	lea    0x1282(%rip),%rsi        # 30b2 <_IO_stdin_used+0xb2>
    1e30:	48 8d 0d 4a 13 00 00 	lea    0x134a(%rip),%rcx        # 3181 <_IO_stdin_used+0x181>
    1e37:	ba 14 03 00 00       	mov    $0x314,%edx
    1e3c:	e8 2f f2 ff ff       	call   1070 <__assert_fail@plt>
    1e41:	48 8d 3d 7a 13 00 00 	lea    0x137a(%rip),%rdi        # 31c2 <_IO_stdin_used+0x1c2>
    1e48:	48 8d 35 63 12 00 00 	lea    0x1263(%rip),%rsi        # 30b2 <_IO_stdin_used+0xb2>
    1e4f:	48 8d 0d 2b 13 00 00 	lea    0x132b(%rip),%rcx        # 3181 <_IO_stdin_used+0x181>
    1e56:	ba 32 03 00 00       	mov    $0x332,%edx
    1e5b:	e8 10 f2 ff ff       	call   1070 <__assert_fail@plt>

0000000000001e60 <run>:
    1e60:	53                   	push   %rbx
    1e61:	55                   	push   %rbp
    1e62:	41 54                	push   %r12
    1e64:	41 55                	push   %r13
    1e66:	41 56                	push   %r14
    1e68:	41 57                	push   %r15
    1e6a:	4d 31 c0             	xor    %r8,%r8
    1e6d:	4d 31 c9             	xor    %r9,%r9
    1e70:	4d 31 d2             	xor    %r10,%r10
    1e73:	4d 31 db             	xor    %r11,%r11
    1e76:	4d 31 e4             	xor    %r12,%r12
    1e79:	4d 31 ed             	xor    %r13,%r13
    1e7c:	4d 31 f6             	xor    %r14,%r14
    1e7f:	4d 31 ff             	xor    %r15,%r15
    1e82:	48 8d 1d 29 00 00 00 	lea    0x29(%rip),%rbx        # 1eb2 <function>
    1e89:	48 89 fd             	mov    %rdi,%rbp
    1e8c:	48 89 f1             	mov    %rsi,%rcx
    1e8f:	be 00 00 00 00       	mov    $0x0,%esi

0000000000001e94 <loop>:
    1e94:	48 89 ef             	mov    %rbp,%rdi
    1e97:	48 85 ff             	test   %rdi,%rdi
    1e9a:	74 0b                	je     1ea7 <done>
    1e9c:	89 f0                	mov    %esi,%eax
    1e9e:	48 6b c0 0a          	imul   $0xa,%rax,%rax
    1ea2:	48 01 f8             	add    %rdi,%rax
    1ea5:	ff e0                	jmp    *%rax

0000000000001ea7 <done>:
    1ea7:	41 5f                	pop    %r15
    1ea9:	41 5e                	pop    %r14
    1eab:	41 5d                	pop    %r13
    1ead:	41 5c                	pop    %r12
    1eaf:	5d                   	pop    %rbp
    1eb0:	5b                   	pop    %rbx
    1eb1:	c3                   	ret    

0000000000001eb2 <function>:
    1eb2:	3c 08                	cmp    $0x8,%al
    1eb4:	74 35                	je     1eeb <.val_load>
    1eb6:	3c 09                	cmp    $0x9,%al
    1eb8:	74 4c                	je     1f06 <.val_store>
    1eba:	3c 04                	cmp    $0x4,%al
    1ebc:	0f 84 b1 00 00 00    	je     1f73 <.load>
    1ec2:	3c 00                	cmp    $0x0,%al
    1ec4:	74 5b                	je     1f21 <.map>
    1ec6:	3c 01                	cmp    $0x1,%al
    1ec8:	74 72                	je     1f3c <.unmap>
    1eca:	3c 02                	cmp    $0x2,%al
    1ecc:	0f 84 82 00 00 00    	je     1f54 <.out>
    1ed2:	3c 03                	cmp    $0x3,%al
    1ed4:	0f 84 c6 00 00 00    	je     1fa0 <.in>
    1eda:	3c 06                	cmp    $0x6,%al
    1edc:	0f 84 d6 00 00 00    	je     1fb8 <.halt>
    1ee2:	3c 07                	cmp    $0x7,%al
    1ee4:	0f 84 d3 00 00 00    	je     1fbd <.debug>
    1eea:	c3                   	ret    

0000000000001eeb <.val_load>:
    1eeb:	41 50                	push   %r8
    1eed:	41 51                	push   %r9
    1eef:	41 52                	push   %r10
    1ef1:	41 53                	push   %r11
    1ef3:	51                   	push   %rcx
    1ef4:	48 89 cf             	mov    %rcx,%rdi
    1ef7:	e8 54 fc ff ff       	call   1b50 <seg_load_print>
    1efc:	59                   	pop    %rcx
    1efd:	41 5b                	pop    %r11
    1eff:	41 5a                	pop    %r10
    1f01:	41 59                	pop    %r9
    1f03:	41 58                	pop    %r8
    1f05:	c3                   	ret    

0000000000001f06 <.val_store>:
    1f06:	41 50                	push   %r8
    1f08:	41 51                	push   %r9
    1f0a:	41 52                	push   %r10
    1f0c:	41 53                	push   %r11
    1f0e:	51                   	push   %rcx
    1f0f:	48 89 cf             	mov    %rcx,%rdi
    1f12:	e8 79 fc ff ff       	call   1b90 <seg_store_print>
    1f17:	59                   	pop    %rcx
    1f18:	41 5b                	pop    %r11
    1f1a:	41 5a                	pop    %r10
    1f1c:	41 59                	pop    %r9
    1f1e:	41 58                	pop    %r8
    1f20:	c3                   	ret    

0000000000001f21 <.map>:
    1f21:	41 50                	push   %r8
    1f23:	41 51                	push   %r9
    1f25:	41 52                	push   %r10
    1f27:	41 53                	push   %r11
    1f29:	51                   	push   %rcx
    1f2a:	48 89 ce             	mov    %rcx,%rsi
    1f2d:	e8 6e fc ff ff       	call   1ba0 <map_segment>
    1f32:	59                   	pop    %rcx
    1f33:	41 5b                	pop    %r11
    1f35:	41 5a                	pop    %r10
    1f37:	41 59                	pop    %r9
    1f39:	41 58                	pop    %r8
    1f3b:	c3                   	ret    

0000000000001f3c <.unmap>:
    1f3c:	41 50                	push   %r8
    1f3e:	41 51                	push   %r9
    1f40:	41 52                	push   %r10
    1f42:	41 53                	push   %r11
    1f44:	51                   	push   %rcx
    1f45:	e8 06 fd ff ff       	call   1c50 <unmap_segment>
    1f4a:	59                   	pop    %rcx
    1f4b:	41 5b                	pop    %r11
    1f4d:	41 5a                	pop    %r10
    1f4f:	41 59                	pop    %r9
    1f51:	41 58                	pop    %r8
    1f53:	c3                   	ret    

0000000000001f54 <.out>:
    1f54:	41 50                	push   %r8
    1f56:	41 51                	push   %r9
    1f58:	41 52                	push   %r10
    1f5a:	41 53                	push   %r11
    1f5c:	51                   	push   %rcx
    1f5d:	48 8b 35 54 31 00 00 	mov    0x3154(%rip),%rsi        # 50b8 <stdout@GLIBC_2.2.5>
    1f64:	e8 27 f1 ff ff       	call   1090 <fputc@plt>
    1f69:	59                   	pop    %rcx
    1f6a:	41 5b                	pop    %r11
    1f6c:	41 5a                	pop    %r10
    1f6e:	41 59                	pop    %r9
    1f70:	41 58                	pop    %r8
    1f72:	c3                   	ret    

0000000000001f73 <.load>:
    1f73:	85 ff                	test   %edi,%edi
    1f75:	75 05                	jne    1f7c <skip>
    1f77:	e9 18 ff ff ff       	jmp    1e94 <loop>

0000000000001f7c <skip>:
    1f7c:	56                   	push   %rsi
    1f7d:	41 50                	push   %r8
    1f7f:	41 51                	push   %r9
    1f81:	41 52                	push   %r10
    1f83:	41 53                	push   %r11
    1f85:	51                   	push   %rcx
    1f86:	48 89 ce             	mov    %rcx,%rsi
    1f89:	e8 a2 fd ff ff       	call   1d30 <load_program>
    1f8e:	59                   	pop    %rcx
    1f8f:	41 5b                	pop    %r11
    1f91:	41 5a                	pop    %r10
    1f93:	41 59                	pop    %r9
    1f95:	41 58                	pop    %r8
    1f97:	5e                   	pop    %rsi
    1f98:	48 89 c5             	mov    %rax,%rbp
    1f9b:	e9 f4 fe ff ff       	jmp    1e94 <loop>

0000000000001fa0 <.in>:
    1fa0:	41 50                	push   %r8
    1fa2:	41 51                	push   %r9
    1fa4:	41 52                	push   %r10
    1fa6:	41 53                	push   %r11
    1fa8:	51                   	push   %rcx
    1fa9:	e8 f2 f0 ff ff       	call   10a0 <getchar@plt>
    1fae:	59                   	pop    %rcx
    1faf:	41 5b                	pop    %r11
    1fb1:	41 5a                	pop    %r10
    1fb3:	41 59                	pop    %r9
    1fb5:	41 58                	pop    %r8
    1fb7:	c3                   	ret    

0000000000001fb8 <.halt>:
    1fb8:	e9 ea fe ff ff       	jmp    1ea7 <done>

0000000000001fbd <.debug>:
    1fbd:	50                   	push   %rax
    1fbe:	55                   	push   %rbp
    1fbf:	57                   	push   %rdi
    1fc0:	56                   	push   %rsi
    1fc1:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    1fc6:	48 8d 3d 01 12 00 00 	lea    0x1201(%rip),%rdi        # 31ce <rax_fmt>
    1fcd:	31 c0                	xor    %eax,%eax
    1fcf:	e8 8c f0 ff ff       	call   1060 <printf@plt>
    1fd4:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    1fd9:	48 8d 3d fa 11 00 00 	lea    0x11fa(%rip),%rdi        # 31da <rbp_fmt>
    1fe0:	31 c0                	xor    %eax,%eax
    1fe2:	e8 79 f0 ff ff       	call   1060 <printf@plt>
    1fe7:	5e                   	pop    %rsi
    1fe8:	5f                   	pop    %rdi
    1fe9:	5d                   	pop    %rbp
    1fea:	58                   	pop    %rax
    1feb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1ff2:	e8 29 f1 ff ff       	call   1120 <exit@plt>
    1ff7:	c3                   	ret    
    1ff8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1fff:	00 

0000000000002000 <init_memory_system>:
    2000:	55                   	push   %rbp
    2001:	48 89 e5             	mov    %rsp,%rbp
    2004:	48 83 ec 10          	sub    $0x10,%rsp
    2008:	89 7d fc             	mov    %edi,-0x4(%rbp)
    200b:	48 83 3d b5 30 00 00 	cmpq   $0x0,0x30b5(%rip)        # 50c8 <mem>
    2012:	00 
    2013:	0f 85 05 00 00 00    	jne    201e <init_memory_system+0x1e>
    2019:	e9 1f 00 00 00       	jmp    203d <init_memory_system+0x3d>
    201e:	48 8d 3d c1 11 00 00 	lea    0x11c1(%rip),%rdi        # 31e6 <rbp_fmt+0xc>
    2025:	48 8d 35 c6 11 00 00 	lea    0x11c6(%rip),%rsi        # 31f2 <rbp_fmt+0x18>
    202c:	ba 10 00 00 00       	mov    $0x10,%edx
    2031:	48 8d 0d c1 11 00 00 	lea    0x11c1(%rip),%rcx        # 31f9 <rbp_fmt+0x1f>
    2038:	e8 33 f0 ff ff       	call   1070 <__assert_fail@plt>
    203d:	bf 20 00 00 00       	mov    $0x20,%edi
    2042:	e8 99 f0 ff ff       	call   10e0 <malloc@plt>
    2047:	48 89 05 7a 30 00 00 	mov    %rax,0x307a(%rip)        # 50c8 <mem>
    204e:	48 83 3d 72 30 00 00 	cmpq   $0x0,0x3072(%rip)        # 50c8 <mem>
    2055:	00 
    2056:	0f 84 05 00 00 00    	je     2061 <init_memory_system+0x61>
    205c:	e9 1f 00 00 00       	jmp    2080 <init_memory_system+0x80>
    2061:	48 8d 3d b7 11 00 00 	lea    0x11b7(%rip),%rdi        # 321f <rbp_fmt+0x45>
    2068:	48 8d 35 83 11 00 00 	lea    0x1183(%rip),%rsi        # 31f2 <rbp_fmt+0x18>
    206f:	ba 12 00 00 00       	mov    $0x12,%edx
    2074:	48 8d 0d 7e 11 00 00 	lea    0x117e(%rip),%rcx        # 31f9 <rbp_fmt+0x1f>
    207b:	e8 f0 ef ff ff       	call   1070 <__assert_fail@plt>
    2080:	31 c0                	xor    %eax,%eax
    2082:	41 89 c1             	mov    %eax,%r9d
    2085:	48 be 00 00 00 00 01 	movabs $0x100000000,%rsi
    208c:	00 00 00 
    208f:	ba 03 00 00 00       	mov    $0x3,%edx
    2094:	b9 22 00 00 00       	mov    $0x22,%ecx
    2099:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    209f:	4c 89 cf             	mov    %r9,%rdi
    20a2:	e8 a9 ef ff ff       	call   1050 <mmap@plt>
    20a7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    20ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    20af:	48 83 c0 08          	add    $0x8,%rax
    20b3:	48 89 05 16 30 00 00 	mov    %rax,0x3016(%rip)        # 50d0 <usable>
    20ba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    20be:	48 8b 05 03 30 00 00 	mov    0x3003(%rip),%rax        # 50c8 <mem>
    20c5:	48 89 08             	mov    %rcx,(%rax)
    20c8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    20cc:	48 83 c1 08          	add    $0x8,%rcx
    20d0:	48 8b 05 f1 2f 00 00 	mov    0x2ff1(%rip),%rax        # 50c8 <mem>
    20d7:	48 89 48 08          	mov    %rcx,0x8(%rax)
    20db:	e8 50 00 00 00       	call   2130 <recycler_init>
    20e0:	48 89 05 f1 2f 00 00 	mov    %rax,0x2ff1(%rip)        # 50d8 <rec>
    20e7:	48 8b 0d ea 2f 00 00 	mov    0x2fea(%rip),%rcx        # 50d8 <rec>
    20ee:	48 8b 05 d3 2f 00 00 	mov    0x2fd3(%rip),%rax        # 50c8 <mem>
    20f5:	48 89 48 10          	mov    %rcx,0x10(%rax)
    20f9:	8b 4d fc             	mov    -0x4(%rbp),%ecx
    20fc:	83 e9 08             	sub    $0x8,%ecx
    20ff:	48 8b 05 c2 2f 00 00 	mov    0x2fc2(%rip),%rax        # 50c8 <mem>
    2106:	89 48 18             	mov    %ecx,0x18(%rax)
    2109:	8b 4d fc             	mov    -0x4(%rbp),%ecx
    210c:	48 8b 05 b5 2f 00 00 	mov    0x2fb5(%rip),%rax        # 50c8 <mem>
    2113:	89 48 1c             	mov    %ecx,0x1c(%rax)
    2116:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2119:	89 05 c1 2f 00 00    	mov    %eax,0x2fc1(%rip)        # 50e0 <start_unused>
    211f:	48 8b 05 aa 2f 00 00 	mov    0x2faa(%rip),%rax        # 50d0 <usable>
    2126:	48 83 c4 10          	add    $0x10,%rsp
    212a:	5d                   	pop    %rbp
    212b:	c3                   	ret    
    212c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002130 <recycler_init>:
    2130:	55                   	push   %rbp
    2131:	48 89 e5             	mov    %rsp,%rbp
    2134:	48 83 ec 20          	sub    $0x20,%rsp
    2138:	bf 00 00 80 00       	mov    $0x800000,%edi
    213d:	e8 9e ef ff ff       	call   10e0 <malloc@plt>
    2142:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2146:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    214b:	0f 84 05 00 00 00    	je     2156 <recycler_init+0x26>
    2151:	e9 1f 00 00 00       	jmp    2175 <recycler_init+0x45>
    2156:	48 8d 3d 0f 11 00 00 	lea    0x110f(%rip),%rdi        # 326c <rbp_fmt+0x92>
    215d:	48 8d 35 8e 10 00 00 	lea    0x108e(%rip),%rsi        # 31f2 <rbp_fmt+0x18>
    2164:	ba 63 00 00 00       	mov    $0x63,%edx
    2169:	48 8d 0d 0d 11 00 00 	lea    0x110d(%rip),%rcx        # 327d <rbp_fmt+0xa3>
    2170:	e8 fb ee ff ff       	call   1070 <__assert_fail@plt>
    2175:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    217c:	81 7d f4 00 00 08 00 	cmpl   $0x80000,-0xc(%rbp)
    2183:	0f 83 3d 00 00 00    	jae    21c6 <recycler_init+0x96>
    2189:	bf 02 00 00 00       	mov    $0x2,%edi
    218e:	e8 9d 01 00 00       	call   2330 <stack_init>
    2193:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2197:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    219b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    219f:	8b 4d f4             	mov    -0xc(%rbp),%ecx
    21a2:	48 c1 e1 04          	shl    $0x4,%rcx
    21a6:	48 01 c8             	add    %rcx,%rax
    21a9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    21ad:	48 89 08             	mov    %rcx,(%rax)
    21b0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    21b4:	48 89 48 08          	mov    %rcx,0x8(%rax)
    21b8:	8b 45 f4             	mov    -0xc(%rbp),%eax
    21bb:	83 c0 01             	add    $0x1,%eax
    21be:	89 45 f4             	mov    %eax,-0xc(%rbp)
    21c1:	e9 b6 ff ff ff       	jmp    217c <recycler_init+0x4c>
    21c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    21ca:	48 83 c4 20          	add    $0x20,%rsp
    21ce:	5d                   	pop    %rbp
    21cf:	c3                   	ret    

00000000000021d0 <terminate_memory_system>:
    21d0:	55                   	push   %rbp
    21d1:	48 89 e5             	mov    %rsp,%rbp
    21d4:	48 8b 05 ed 2e 00 00 	mov    0x2eed(%rip),%rax        # 50c8 <mem>
    21db:	48 8b 38             	mov    (%rax),%rdi
    21de:	48 be 00 00 00 00 01 	movabs $0x100000000,%rsi
    21e5:	00 00 00 
    21e8:	e8 03 ef ff ff       	call   10f0 <munmap@plt>
    21ed:	48 8b 3d e4 2e 00 00 	mov    0x2ee4(%rip),%rdi        # 50d8 <rec>
    21f4:	e8 07 00 00 00       	call   2200 <free_recycler>
    21f9:	5d                   	pop    %rbp
    21fa:	c3                   	ret    
    21fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002200 <free_recycler>:
    2200:	55                   	push   %rbp
    2201:	48 89 e5             	mov    %rsp,%rbp
    2204:	48 83 ec 10          	sub    $0x10,%rsp
    2208:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    220c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2213:	81 7d f4 00 00 08 00 	cmpl   $0x80000,-0xc(%rbp)
    221a:	0f 83 28 00 00 00    	jae    2248 <free_recycler+0x48>
    2220:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2224:	8b 4d f4             	mov    -0xc(%rbp),%ecx
    2227:	48 c1 e1 04          	shl    $0x4,%rcx
    222b:	48 01 c8             	add    %rcx,%rax
    222e:	48 8b 38             	mov    (%rax),%rdi
    2231:	48 8b 70 08          	mov    0x8(%rax),%rsi
    2235:	e8 66 01 00 00       	call   23a0 <stack_free>
    223a:	8b 45 f4             	mov    -0xc(%rbp),%eax
    223d:	83 c0 01             	add    $0x1,%eax
    2240:	89 45 f4             	mov    %eax,-0xc(%rbp)
    2243:	e9 cb ff ff ff       	jmp    2213 <free_recycler+0x13>
    2248:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    224c:	e8 df ed ff ff       	call   1030 <free@plt>
    2251:	48 83 c4 10          	add    $0x10,%rsp
    2255:	5d                   	pop    %rbp
    2256:	c3                   	ret    
    2257:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    225e:	00 00 

0000000000002260 <kern_realloc>:
    2260:	55                   	push   %rbp
    2261:	48 89 e5             	mov    %rsp,%rbp
    2264:	48 83 ec 10          	sub    $0x10,%rsp
    2268:	89 7d fc             	mov    %edi,-0x4(%rbp)
    226b:	48 8b 05 56 2e 00 00 	mov    0x2e56(%rip),%rax        # 50c8 <mem>
    2272:	8b 40 18             	mov    0x18(%rax),%eax
    2275:	3b 45 fc             	cmp    -0x4(%rbp),%eax
    2278:	0f 82 05 00 00 00    	jb     2283 <kern_realloc+0x23>
    227e:	e9 1f 00 00 00       	jmp    22a2 <kern_realloc+0x42>
    2283:	48 8d 3d a1 0f 00 00 	lea    0xfa1(%rip),%rdi        # 322b <rbp_fmt+0x51>
    228a:	48 8d 35 61 0f 00 00 	lea    0xf61(%rip),%rsi        # 31f2 <rbp_fmt+0x18>
    2291:	ba 33 00 00 00       	mov    $0x33,%edx
    2296:	48 8d 0d af 0f 00 00 	lea    0xfaf(%rip),%rcx        # 324c <rbp_fmt+0x72>
    229d:	e8 ce ed ff ff       	call   1070 <__assert_fail@plt>
    22a2:	48 8b 05 1f 2e 00 00 	mov    0x2e1f(%rip),%rax        # 50c8 <mem>
    22a9:	48 8b 00             	mov    (%rax),%rax
    22ac:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    22b0:	48 8b 05 11 2e 00 00 	mov    0x2e11(%rip),%rax        # 50c8 <mem>
    22b7:	8b 48 18             	mov    0x18(%rax),%ecx
    22ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    22be:	89 08                	mov    %ecx,(%rax)
    22c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    22c4:	48 83 c0 04          	add    $0x4,%rax
    22c8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    22cc:	8b 4d fc             	mov    -0x4(%rbp),%ecx
    22cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    22d3:	89 08                	mov    %ecx,(%rax)
    22d5:	31 c0                	xor    %eax,%eax
    22d7:	48 83 c4 10          	add    $0x10,%rsp
    22db:	5d                   	pop    %rbp
    22dc:	c3                   	ret    
    22dd:	0f 1f 00             	nopl   (%rax)

00000000000022e0 <kern_memcpy>:
    22e0:	55                   	push   %rbp
    22e1:	48 89 e5             	mov    %rsp,%rbp
    22e4:	48 83 ec 20          	sub    $0x20,%rsp
    22e8:	89 7d fc             	mov    %edi,-0x4(%rbp)
    22eb:	89 75 f8             	mov    %esi,-0x8(%rbp)
    22ee:	48 8b 05 db 2d 00 00 	mov    0x2ddb(%rip),%rax        # 50d0 <usable>
    22f5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    22f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    22fd:	8b 4d fc             	mov    -0x4(%rbp),%ecx
    2300:	48 01 c8             	add    %rcx,%rax
    2303:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2307:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    230b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    230f:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    2313:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    2317:	8b 45 f8             	mov    -0x8(%rbp),%eax
    231a:	89 c2                	mov    %eax,%edx
    231c:	e8 af ed ff ff       	call   10d0 <memcpy@plt>
    2321:	48 83 c4 20          	add    $0x20,%rsp
    2325:	5d                   	pop    %rbp
    2326:	c3                   	ret    
    2327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    232e:	00 00 

0000000000002330 <stack_init>:
    2330:	55                   	push   %rbp
    2331:	48 89 e5             	mov    %rsp,%rbp
    2334:	48 83 ec 20          	sub    $0x20,%rsp
    2338:	89 7d ec             	mov    %edi,-0x14(%rbp)
    233b:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    233f:	0f 86 05 00 00 00    	jbe    234a <stack_init+0x1a>
    2345:	e9 1f 00 00 00       	jmp    2369 <stack_init+0x39>
    234a:	48 8d 3d 49 0f 00 00 	lea    0xf49(%rip),%rdi        # 329a <rbp_fmt+0xc0>
    2351:	48 8d 35 9a 0e 00 00 	lea    0xe9a(%rip),%rsi        # 31f2 <rbp_fmt+0x18>
    2358:	ba 51 00 00 00       	mov    $0x51,%edx
    235d:	48 8d 0d 3f 0f 00 00 	lea    0xf3f(%rip),%rcx        # 32a3 <rbp_fmt+0xc9>
    2364:	e8 07 ed ff ff       	call   1070 <__assert_fail@plt>
    2369:	8b 45 ec             	mov    -0x14(%rbp),%eax
    236c:	89 c7                	mov    %eax,%edi
    236e:	48 c1 e7 02          	shl    $0x2,%rdi
    2372:	e8 69 ed ff ff       	call   10e0 <malloc@plt>
    2377:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    237b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    237e:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2381:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    2388:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    238c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2390:	48 83 c4 20          	add    $0x20,%rsp
    2394:	5d                   	pop    %rbp
    2395:	c3                   	ret    
    2396:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    239d:	00 00 00 

00000000000023a0 <stack_free>:
    23a0:	55                   	push   %rbp
    23a1:	48 89 e5             	mov    %rsp,%rbp
    23a4:	48 83 ec 10          	sub    $0x10,%rsp
    23a8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    23ac:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    23b0:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
    23b4:	e8 77 ec ff ff       	call   1030 <free@plt>
    23b9:	48 83 c4 10          	add    $0x10,%rsp
    23bd:	5d                   	pop    %rbp
    23be:	c3                   	ret    

Disassembly of section .fini:

00000000000023c0 <_fini>:
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	48 83 ec 08          	sub    $0x8,%rsp
    23c8:	48 83 c4 08          	add    $0x8,%rsp
    23cc:	c3                   	ret    
