jit:
(__TEXT,__text) section
_main:
0000000100002f18	sub	sp, sp, #0xd0
0000000100002f1c	stp	d9, d8, [sp, #0xa0]
0000000100002f20	stp	x20, x19, [sp, #0xb0]
0000000100002f24	stp	x29, x30, [sp, #0xc0]
0000000100002f28	add	x29, sp, #0xc0
0000000100002f2c	cmp	w0, #0x2
0000000100002f30	b.ne	0x100002f70
0000000100002f34	mov	x19, x1
0000000100002f38	ldr	x0, [x1, #0x8]
0000000100002f3c	adrp	x1, 1 ; 0x100003000
0000000100002f40	add	x1, x1, #0xe65 ; literal pool for: "r"
0000000100002f44	bl	0x100003da4 ; symbol stub for: _fopen
0000000100002f48	cbnz	x0, 0x100002fa8
0000000100002f4c	adrp	x8, 2 ; 0x100004000
0000000100002f50	ldr	x8, [x8, #0x8] ; literal pool symbol address: ___stderrp
0000000100002f54	ldr	x0, [x8]
0000000100002f58	ldr	x8, [x19, #0x8]
0000000100002f5c	str	x8, [sp]
0000000100002f60	adrp	x1, 1 ; 0x100003000
0000000100002f64	add	x1, x1, #0xe67 ; literal pool for: "File %s could not be opened.\n"
0000000100002f68	bl	0x100003db0 ; symbol stub for: _fprintf
0000000100002f6c	b	0x100002f90
0000000100002f70	adrp	x8, 2 ; 0x100004000
0000000100002f74	ldr	x8, [x8, #0x8] ; literal pool symbol address: ___stderrp
0000000100002f78	ldr	x3, [x8]
0000000100002f7c	adrp	x0, 1 ; 0x100003000
0000000100002f80	add	x0, x0, #0xe48 ; literal pool for: "Usage: ./um [executable.um]\n"
0000000100002f84	mov	w1, #0x1c
0000000100002f88	mov	w2, #0x1
0000000100002f8c	bl	0x100003dbc ; symbol stub for: _fwrite
0000000100002f90	mov	w0, #0x1
0000000100002f94	ldp	x29, x30, [sp, #0xc0]
0000000100002f98	ldp	x20, x19, [sp, #0xb0]
0000000100002f9c	ldp	d9, d8, [sp, #0xa0]
0000000100002fa0	add	sp, sp, #0xd0
0000000100002fa4	ret
0000000100002fa8	str	x0, [sp, #0x8]
0000000100002fac	mov	w0, #0x0
0000000100002fb0	bl	0x100003dec ; symbol stub for: _pthread_jit_write_protect_np
0000000100002fb4	adrp	x20, 6 ; 0x100008000
0000000100002fb8	add	x20, x20, #0x0
0000000100002fbc	str	wzr, [x20]
0000000100002fc0	adrp	x8, 1 ; 0x100003000
0000000100002fc4	ldr	d8, [x8, #0xe28]
0000000100002fc8	stur	d8, [x20, #0x1c]
0000000100002fcc	mov	w0, #0x7ef4
0000000100002fd0	mov	w1, #0x8
0000000100002fd4	bl	0x100003d8c ; symbol stub for: _calloc
0000000100002fd8	stur	x0, [x20, #0xc]
0000000100002fdc	mov	w0, #0x7ef4
0000000100002fe0	mov	w1, #0x4
0000000100002fe4	bl	0x100003d8c ; symbol stub for: _calloc
0000000100002fe8	stur	x0, [x20, #0x14]
0000000100002fec	stur	d8, [x20, #0x2c]
0000000100002ff0	mov	w0, #0x7ef4
0000000100002ff4	mov	w1, #0x4
0000000100002ff8	bl	0x100003d8c ; symbol stub for: _calloc
0000000100002ffc	stur	x0, [x20, #0x24]
0000000100003000	ldr	x0, [x19, #0x8]
0000000100003004	add	x1, sp, #0x10
0000000100003008	bl	0x100003e1c ; symbol stub for: _stat
000000010000300c	cbnz	w0, 0x100003024
0000000100003010	ldr	x0, [sp, #0x70]
0000000100003014	tst	x0, #0x3
0000000100003018	b.ne	0x100003030
000000010000301c	ldr	x1, [sp, #0x8]
0000000100003020	bl	_main.cold.1
0000000100003024	mov	x0, #0x0
0000000100003028	ldr	x1, [sp, #0x8]
000000010000302c	bl	_main.cold.1
0000000100003030	bl	_main.cold.2
_initialize_zero_segment:
0000000100003034	stp	x20, x19, [sp, #-0x20]!
0000000100003038	stp	x29, x30, [sp, #0x10]
000000010000303c	add	x29, sp, #0x10
0000000100003040	mov	x19, x0
0000000100003044	mov	x0, #0x0
0000000100003048	mov	x1, x19
000000010000304c	mov	w2, #0x7
0000000100003050	mov	w3, #0x1802
0000000100003054	mov	w4, #-0x1
0000000100003058	mov	x5, #0x0
000000010000305c	bl	0x100003de0 ; symbol stub for: _mmap
0000000100003060	cmn	x0, #0x1
0000000100003064	b.eq	0x100003078
0000000100003068	mov	x1, x19
000000010000306c	ldp	x29, x30, [sp, #0x10]
0000000100003070	ldp	x20, x19, [sp], #0x20
0000000100003074	b	0x100003d80 ; symbol stub for: _bzero
0000000100003078	bl	_initialize_zero_segment.cold.1
_load_zero_segment:
000000010000307c	stp	x26, x25, [sp, #-0x50]!
0000000100003080	stp	x24, x23, [sp, #0x10]
0000000100003084	stp	x22, x21, [sp, #0x20]
0000000100003088	stp	x20, x19, [sp, #0x30]
000000010000308c	stp	x29, x30, [sp, #0x40]
0000000100003090	add	x29, sp, #0x40
0000000100003094	mov	x19, x2
0000000100003098	mov	x20, x1
000000010000309c	mov	x21, x0
00000001000030a0	mov	x0, x2
00000001000030a4	bl	0x100003dc8 ; symbol stub for: _getc
00000001000030a8	cmn	w0, #0x1
00000001000030ac	b.eq	0x10000312c
00000001000030b0	mov	x22, #0x0
00000001000030b4	mov	w23, #0x0
00000001000030b8	mov	w24, #0x0
00000001000030bc	adrp	x25, 0 ; 0x100003000
00000001000030c0	add	x25, x25, #0xe30
00000001000030c4	b	0x1000030e0
00000001000030c8	bfi	w23, w0, #8, #8
00000001000030cc	add	w24, w24, #0x1
00000001000030d0	mov	x0, x19
00000001000030d4	bl	0x100003dc8 ; symbol stub for: _getc
00000001000030d8	cmn	w0, #0x1
00000001000030dc	b.eq	0x10000312c
00000001000030e0	and	w8, w24, #0x3
00000001000030e4	adr	x9, #-0x1c
00000001000030e8	ldrb	w10, [x25, x8]
00000001000030ec	add	x9, x9, x10, lsl #2
00000001000030f0	br	x9
00000001000030f4	bfi	w23, w0, #24, #8
00000001000030f8	b	0x1000030cc
00000001000030fc	bfi	w23, w0, #16, #8
0000000100003100	b	0x1000030cc
0000000100003104	bfxil	w23, w0, #0, #8
0000000100003108	and	w8, w24, #0xfffffffc
000000010000310c	str	w23, [x20, w8, uxtw]
0000000100003110	mov	x0, x21
0000000100003114	mov	x1, x23
0000000100003118	mov	x2, x22
000000010000311c	bl	_compile_instruction
0000000100003120	mov	x22, x0
0000000100003124	mov	w23, #0x0
0000000100003128	b	0x1000030cc
000000010000312c	ldp	x29, x30, [sp, #0x40]
0000000100003130	ldp	x20, x19, [sp, #0x30]
0000000100003134	ldp	x22, x21, [sp, #0x20]
0000000100003138	ldp	x24, x23, [sp, #0x10]
000000010000313c	ldp	x26, x25, [sp], #0x50
0000000100003140	ret
_make_word:
0000000100003144	sub	w8, w1, #0x1
0000000100003148	mov	w9, #0x2
000000010000314c	lsl	x8, x9, x8
0000000100003150	sub	x8, x8, #0x1
0000000100003154	lsl	x8, x8, x2
0000000100003158	bic	x8, x0, x8
000000010000315c	lsl	x9, x3, x2
0000000100003160	orr	x0, x8, x9
0000000100003164	ret
_compile_instruction:
0000000100003168	stp	x20, x19, [sp, #-0x20]!
000000010000316c	stp	x29, x30, [sp, #0x10]
0000000100003170	add	x29, sp, #0x10
0000000100003174	mov	x19, x2
0000000100003178	lsr	w8, w1, #28
000000010000317c	cmp	w8, #0xd
0000000100003180	b.ne	0x1000031e4
0000000100003184	add	x8, x0, x19
0000000100003188	mov	w9, #0xc741
000000010000318c	strh	w9, [x8]
0000000100003190	mov	w9, #0xc0
0000000100003194	bfxil	w9, w1, #25, #3
0000000100003198	strb	w9, [x8, #0x2]
000000010000319c	strb	w1, [x8, #0x3]
00000001000031a0	lsr	w9, w1, #8
00000001000031a4	strb	w9, [x8, #0x4]
00000001000031a8	lsr	w9, w1, #16
00000001000031ac	strb	w9, [x8, #0x5]
00000001000031b0	ubfx	w9, w1, #24, #1
00000001000031b4	strb	w9, [x8, #0x6]
00000001000031b8	mov	x9, #0x1f0f
00000001000031bc	movk	x9, #0xf00, lsl #16
00000001000031c0	movk	x9, #0x1f, lsl #32
00000001000031c4	movk	x9, #0x1f0f, lsl #48
00000001000031c8	stur	x9, [x8, #0x7]
00000001000031cc	mov	w9, #0xf00
00000001000031d0	movk	w9, #0x1f, lsl #16
00000001000031d4	stur	w9, [x8, #0xf]
00000001000031d8	mov	w9, #0x9090
00000001000031dc	sturh	w9, [x8, #0x13]
00000001000031e0	b	0x1000033a4
00000001000031e4	and	w4, w1, #0x7
00000001000031e8	ubfx	w3, w1, #3, #3
00000001000031ec	ubfx	w2, w1, #6, #3
00000001000031f0	sub	w9, w8, #0x3
00000001000031f4	cmp	w9, #0x7
00000001000031f8	b.hi	0x10000334c
00000001000031fc	adrp	x10, 0 ; 0x100003000
0000000100003200	add	x10, x10, #0xe34
0000000100003204	adr	x11, #0x10
0000000100003208	ldrb	w12, [x10, x9]
000000010000320c	add	x11, x11, x12, lsl #2
0000000100003210	br	x11
0000000100003214	add	x8, x0, x19
0000000100003218	mov	w9, #0x8944
000000010000321c	strh	w9, [x8]
0000000100003220	mov	w9, #0xc0
0000000100003224	bfi	w9, w3, #3, #3
0000000100003228	strb	w9, [x8, #0x2]
000000010000322c	mov	w9, #0x144
0000000100003230	sturh	w9, [x8, #0x3]
0000000100003234	mov	w9, #0xc0
0000000100003238	bfi	w9, w4, #3, #3
000000010000323c	b	0x100003264
0000000100003240	add	x8, x0, x19
0000000100003244	mov	w9, #0x8944
0000000100003248	strh	w9, [x8]
000000010000324c	mov	w9, #0xc0
0000000100003250	bfi	w9, w3, #3, #3
0000000100003254	strb	w9, [x8, #0x2]
0000000100003258	mov	w9, #0xf741
000000010000325c	sturh	w9, [x8, #0x3]
0000000100003260	orr	w9, w4, #0xe0
0000000100003264	strb	w9, [x8, #0x5]
0000000100003268	mov	w9, #0x8941
000000010000326c	strh	w9, [x8, #0x6]
0000000100003270	b	0x10000337c
0000000100003274	add	x8, x0, x19
0000000100003278	mov	w9, #0x3148
000000010000327c	movk	w9, #0x44d2, lsl #16
0000000100003280	str	w9, [x8]
0000000100003284	mov	w9, #0x89
0000000100003288	strb	w9, [x8, #0x4]
000000010000328c	mov	w9, #0xc0
0000000100003290	bfi	w9, w3, #3, #3
0000000100003294	strb	w9, [x8, #0x5]
0000000100003298	mov	w9, #0xf749
000000010000329c	strh	w9, [x8, #0x6]
00000001000032a0	orr	w9, w4, #0xf0
00000001000032a4	strb	w9, [x8, #0x8]
00000001000032a8	mov	w9, #0x8941
00000001000032ac	sturh	w9, [x8, #0x9]
00000001000032b0	orr	w9, w2, #0xc0
00000001000032b4	strb	w9, [x8, #0xb]
00000001000032b8	mov	x9, #0x1f0f
00000001000032bc	movk	x9, #0xf00, lsl #16
00000001000032c0	movk	x9, #0x1f, lsl #32
00000001000032c4	movk	x9, #0x1f0f, lsl #48
00000001000032c8	stur	x9, [x8, #0xc]
00000001000032cc	mov	w9, #0x9000
00000001000032d0	strh	w9, [x8, #0x14]
00000001000032d4	b	0x1000033a4
00000001000032d8	add	x8, x0, x19
00000001000032dc	mov	w9, #0x8944
00000001000032e0	strh	w9, [x8]
00000001000032e4	mov	w9, #0xc0
00000001000032e8	bfi	w9, w3, #3, #3
00000001000032ec	strb	w9, [x8, #0x2]
00000001000032f0	mov	w9, #0x2144
00000001000032f4	sturh	w9, [x8, #0x3]
00000001000032f8	mov	w9, #0xc0
00000001000032fc	bfi	w9, w4, #3, #3
0000000100003300	strb	w9, [x8, #0x5]
0000000100003304	mov	w9, #0xf740
0000000100003308	movk	w9, #0x41d0, lsl #16
000000010000330c	stur	w9, [x8, #0x6]
0000000100003310	mov	w9, #0x89
0000000100003314	strb	w9, [x8, #0xa]
0000000100003318	orr	w9, w2, #0xc0
000000010000331c	strb	w9, [x8, #0xb]
0000000100003320	mov	x9, #0x1f0f
0000000100003324	movk	x9, #0xf00, lsl #16
0000000100003328	movk	x9, #0x1f, lsl #32
000000010000332c	movk	x9, #0x1f0f, lsl #48
0000000100003330	stur	x9, [x8, #0xc]
0000000100003334	strb	wzr, [x8, #0x14]
0000000100003338	b	0x1000033a4
000000010000333c	mov	w8, #0x3148
0000000100003340	movk	w8, #0xc3c0, lsl #16
0000000100003344	str	w8, [x0, x19]
0000000100003348	b	0x1000033a4
000000010000334c	cbnz	w8, 0x1000033f4
0000000100003350	add	x8, x0, x19
0000000100003354	mov	w9, #0x8341
0000000100003358	strh	w9, [x8]
000000010000335c	orr	w9, w1, #0xf8
0000000100003360	strb	w9, [x8, #0x2]
0000000100003364	mov	w9, #0x7400
0000000100003368	movk	w9, #0x4503, lsl #16
000000010000336c	stur	w9, [x8, #0x3]
0000000100003370	mov	w9, #0x89
0000000100003374	strb	w9, [x8, #0x7]
0000000100003378	bfi	w2, w3, #3, #3
000000010000337c	orr	w9, w2, #0xc0
0000000100003380	strb	w9, [x8, #0x8]
0000000100003384	mov	x9, #0x1f0f
0000000100003388	movk	x9, #0xf00, lsl #16
000000010000338c	movk	x9, #0x1f, lsl #32
0000000100003390	movk	x9, #0x1f0f, lsl #48
0000000100003394	stur	x9, [x8, #0x9]
0000000100003398	mov	w9, #0xf00
000000010000339c	movk	w9, #0x1f, lsl #16
00000001000033a0	stur	w9, [x8, #0x11]
00000001000033a4	add	x0, x19, #0x15
00000001000033a8	ldp	x29, x30, [sp, #0x10]
00000001000033ac	ldp	x20, x19, [sp], #0x20
00000001000033b0	ret
00000001000033b4	add	x8, x0, x19
00000001000033b8	mov	w9, #0x8944
00000001000033bc	strh	w9, [x8]
00000001000033c0	lsl	w9, w4, #3
00000001000033c4	orr	w9, w9, #0xffffffc7
00000001000033c8	strb	w9, [x8, #0x2]
00000001000033cc	mov	x9, #0x2b0
00000001000033d0	movk	x9, #0xd3ff, lsl #16
00000001000033d4	movk	x9, #0x1f0f, lsl #32
00000001000033d8	movk	x9, #0xf00, lsl #48
00000001000033dc	stur	x9, [x8, #0x3]
00000001000033e0	mov	x9, #0x1f001f001f001f
00000001000033e4	movk	x9, #0x1f0f, lsl #16
00000001000033e8	movk	x9, #0xf00, lsl #32
00000001000033ec	stur	x9, [x8, #0xb]
00000001000033f0	b	0x1000031d8
00000001000033f4	sub	w8, w8, #0x1
00000001000033f8	cmp	w8, #0xb
00000001000033fc	b.hi	0x1000033a4
0000000100003400	adrp	x9, 0 ; 0x100003000
0000000100003404	add	x9, x9, #0xe3c
0000000100003408	adr	x10, #-0x64
000000010000340c	ldrb	w11, [x9, x8]
0000000100003410	add	x10, x10, x11, lsl #2
0000000100003414	br	x10
0000000100003418	mov	x1, x19
000000010000341c	bl	_seg_load
0000000100003420	b	0x1000033a4
0000000100003424	mov	x1, x19
0000000100003428	bl	_seg_store
000000010000342c	b	0x1000033a4
0000000100003430	mov	x1, x19
0000000100003434	mov	x2, x3
0000000100003438	mov	x3, x4
000000010000343c	bl	_inject_map_segment
0000000100003440	b	0x1000033a4
0000000100003444	mov	x1, x19
0000000100003448	mov	x2, x4
000000010000344c	bl	_inject_unmap_segment
0000000100003450	b	0x1000033a4
0000000100003454	mov	x1, x19
0000000100003458	mov	x2, x4
000000010000345c	bl	_read_into_reg
0000000100003460	b	0x1000033a4
0000000100003464	mov	x1, x19
0000000100003468	mov	x2, x3
000000010000346c	mov	x3, x4
0000000100003470	bl	_inject_load_program
0000000100003474	b	0x1000033a4
_load_reg:
0000000100003478	add	x8, x0, x1
000000010000347c	mov	w9, #0xc741
0000000100003480	strh	w9, [x8]
0000000100003484	orr	w9, w2, #0xc0
0000000100003488	strb	w9, [x8, #0x2]
000000010000348c	strb	w3, [x8, #0x3]
0000000100003490	lsr	w9, w3, #8
0000000100003494	strb	w9, [x8, #0x4]
0000000100003498	lsr	w9, w3, #16
000000010000349c	strb	w9, [x8, #0x5]
00000001000034a0	lsr	w9, w3, #24
00000001000034a4	strb	w9, [x8, #0x6]
00000001000034a8	mov	x9, #0x1f0f
00000001000034ac	movk	x9, #0xf00, lsl #16
00000001000034b0	movk	x9, #0x1f, lsl #32
00000001000034b4	movk	x9, #0x1f0f, lsl #48
00000001000034b8	stur	x9, [x8, #0x7]
00000001000034bc	mov	w9, #0xf00
00000001000034c0	movk	w9, #0x1f, lsl #16
00000001000034c4	stur	w9, [x8, #0xf]
00000001000034c8	mov	w9, #0x9090
00000001000034cc	sturh	w9, [x8, #0x13]
00000001000034d0	mov	w0, #0x15
00000001000034d4	ret
_print_reg:
00000001000034d8	add	x8, x0, x1
00000001000034dc	mov	w9, #0x8944
00000001000034e0	strh	w9, [x8]
00000001000034e4	lsl	w9, w2, #3
00000001000034e8	orr	w9, w9, #0xffffffc7
00000001000034ec	strb	w9, [x8, #0x2]
00000001000034f0	mov	x9, #0x2b0
00000001000034f4	movk	x9, #0xd3ff, lsl #16
00000001000034f8	movk	x9, #0x1f0f, lsl #32
00000001000034fc	movk	x9, #0xf00, lsl #48
0000000100003500	stur	x9, [x8, #0x3]
0000000100003504	mov	x9, #0x1f001f001f001f
0000000100003508	movk	x9, #0x1f0f, lsl #16
000000010000350c	movk	x9, #0xf00, lsl #32
0000000100003510	stur	x9, [x8, #0xb]
0000000100003514	mov	w9, #0x9090
0000000100003518	sturh	w9, [x8, #0x13]
000000010000351c	mov	w0, #0x15
0000000100003520	ret
_add_regs:
0000000100003524	add	x8, x0, x1
0000000100003528	mov	w9, #0x8944
000000010000352c	strh	w9, [x8]
0000000100003530	lsl	w9, w3, #3
0000000100003534	orr	w9, w9, #0xc0
0000000100003538	strb	w9, [x8, #0x2]
000000010000353c	mov	w9, #0x144
0000000100003540	sturh	w9, [x8, #0x3]
0000000100003544	lsl	w9, w4, #3
0000000100003548	orr	w9, w9, #0xc0
000000010000354c	strb	w9, [x8, #0x5]
0000000100003550	mov	w9, #0x8941
0000000100003554	strh	w9, [x8, #0x6]
0000000100003558	orr	w9, w2, #0xc0
000000010000355c	strb	w9, [x8, #0x8]
0000000100003560	mov	x9, #0x1f0f
0000000100003564	movk	x9, #0xf00, lsl #16
0000000100003568	movk	x9, #0x1f, lsl #32
000000010000356c	movk	x9, #0x1f0f, lsl #48
0000000100003570	stur	x9, [x8, #0x9]
0000000100003574	mov	w9, #0xf00
0000000100003578	movk	w9, #0x1f, lsl #16
000000010000357c	stur	w9, [x8, #0x11]
0000000100003580	mov	w0, #0x15
0000000100003584	ret
_handle_halt:
0000000100003588	mov	w8, #0x3148
000000010000358c	movk	w8, #0xc3c0, lsl #16
0000000100003590	str	w8, [x0, x1]
0000000100003594	mov	w0, #0x15
0000000100003598	ret
_nand_regs:
000000010000359c	add	x8, x0, x1
00000001000035a0	mov	w9, #0x8944
00000001000035a4	strh	w9, [x8]
00000001000035a8	lsl	w9, w3, #3
00000001000035ac	orr	w9, w9, #0xc0
00000001000035b0	strb	w9, [x8, #0x2]
00000001000035b4	mov	w9, #0x2144
00000001000035b8	sturh	w9, [x8, #0x3]
00000001000035bc	lsl	w9, w4, #3
00000001000035c0	orr	w9, w9, #0xc0
00000001000035c4	strb	w9, [x8, #0x5]
00000001000035c8	mov	w9, #0xf740
00000001000035cc	movk	w9, #0x41d0, lsl #16
00000001000035d0	stur	w9, [x8, #0x6]
00000001000035d4	mov	w9, #0x89
00000001000035d8	strb	w9, [x8, #0xa]
00000001000035dc	orr	w9, w2, #0xc0
00000001000035e0	strb	w9, [x8, #0xb]
00000001000035e4	mov	x9, #0x1f0f
00000001000035e8	movk	x9, #0xf00, lsl #16
00000001000035ec	movk	x9, #0x1f, lsl #32
00000001000035f0	movk	x9, #0x1f0f, lsl #48
00000001000035f4	stur	x9, [x8, #0xc]
00000001000035f8	strb	wzr, [x8, #0x14]
00000001000035fc	mov	w0, #0x15
0000000100003600	ret
_mult_regs:
0000000100003604	add	x8, x0, x1
0000000100003608	mov	w9, #0x8944
000000010000360c	strh	w9, [x8]
0000000100003610	lsl	w9, w3, #3
0000000100003614	orr	w9, w9, #0xc0
0000000100003618	strb	w9, [x8, #0x2]
000000010000361c	mov	w9, #0xf741
0000000100003620	sturh	w9, [x8, #0x3]
0000000100003624	orr	w9, w4, #0xe0
0000000100003628	strb	w9, [x8, #0x5]
000000010000362c	mov	w9, #0x8941
0000000100003630	strh	w9, [x8, #0x6]
0000000100003634	orr	w9, w2, #0xc0
0000000100003638	strb	w9, [x8, #0x8]
000000010000363c	mov	x9, #0x1f0f
0000000100003640	movk	x9, #0xf00, lsl #16
0000000100003644	movk	x9, #0x1f, lsl #32
0000000100003648	movk	x9, #0x1f0f, lsl #48
000000010000364c	stur	x9, [x8, #0x9]
0000000100003650	mov	w9, #0xf00
0000000100003654	movk	w9, #0x1f, lsl #16
0000000100003658	stur	w9, [x8, #0x11]
000000010000365c	mov	w0, #0x15
0000000100003660	ret
_div_regs:
0000000100003664	add	x8, x0, x1
0000000100003668	mov	w9, #0x3148
000000010000366c	movk	w9, #0x44d2, lsl #16
0000000100003670	str	w9, [x8]
0000000100003674	mov	w9, #0x89
0000000100003678	strb	w9, [x8, #0x4]
000000010000367c	lsl	w9, w3, #3
0000000100003680	orr	w9, w9, #0xc0
0000000100003684	strb	w9, [x8, #0x5]
0000000100003688	mov	w9, #0xf749
000000010000368c	strh	w9, [x8, #0x6]
0000000100003690	orr	w9, w4, #0xf0
0000000100003694	strb	w9, [x8, #0x8]
0000000100003698	mov	w9, #0x8941
000000010000369c	sturh	w9, [x8, #0x9]
00000001000036a0	orr	w9, w2, #0xc0
00000001000036a4	strb	w9, [x8, #0xb]
00000001000036a8	mov	x9, #0x1f0f
00000001000036ac	movk	x9, #0xf00, lsl #16
00000001000036b0	movk	x9, #0x1f, lsl #32
00000001000036b4	movk	x9, #0x1f0f, lsl #48
00000001000036b8	stur	x9, [x8, #0xc]
00000001000036bc	mov	w9, #0x9000
00000001000036c0	strh	w9, [x8, #0x14]
00000001000036c4	mov	w0, #0x15
00000001000036c8	ret
_cond_move:
00000001000036cc	add	x8, x0, x1
00000001000036d0	mov	w9, #0x8341
00000001000036d4	strh	w9, [x8]
00000001000036d8	orr	w9, w4, #0xf8
00000001000036dc	strb	w9, [x8, #0x2]
00000001000036e0	mov	w9, #0x7400
00000001000036e4	movk	w9, #0x4503, lsl #16
00000001000036e8	stur	w9, [x8, #0x3]
00000001000036ec	mov	w9, #0x89
00000001000036f0	strb	w9, [x8, #0x7]
00000001000036f4	orr	w9, w2, w3, lsl #3
00000001000036f8	orr	w9, w9, #0xc0
00000001000036fc	strb	w9, [x8, #0x8]
0000000100003700	mov	x9, #0x1f0f
0000000100003704	movk	x9, #0xf00, lsl #16
0000000100003708	movk	x9, #0x1f, lsl #32
000000010000370c	movk	x9, #0x1f0f, lsl #48
0000000100003710	stur	x9, [x8, #0x9]
0000000100003714	mov	w9, #0xf00
0000000100003718	movk	w9, #0x1f, lsl #16
000000010000371c	stur	w9, [x8, #0x11]
0000000100003720	mov	w0, #0x15
0000000100003724	ret
_read_into_reg:
0000000100003728	add	x8, x0, x1
000000010000372c	mov	w9, #0x3b0
0000000100003730	movk	w9, #0xd3ff, lsl #16
0000000100003734	str	w9, [x8]
0000000100003738	mov	w9, #0x8941
000000010000373c	strh	w9, [x8, #0x4]
0000000100003740	orr	w9, w2, #0xc0
0000000100003744	strb	w9, [x8, #0x6]
0000000100003748	mov	x9, #0x1f0f
000000010000374c	movk	x9, #0xf00, lsl #16
0000000100003750	movk	x9, #0x1f, lsl #32
0000000100003754	movk	x9, #0x1f0f, lsl #48
0000000100003758	stur	x9, [x8, #0x7]
000000010000375c	mov	w9, #0xf00
0000000100003760	movk	w9, #0x1f, lsl #16
0000000100003764	stur	w9, [x8, #0xf]
0000000100003768	mov	w9, #0x9090
000000010000376c	sturh	w9, [x8, #0x13]
0000000100003770	mov	w0, #0x15
0000000100003774	ret
_seg_load:
0000000100003778	add	x8, x0, x1
000000010000377c	mov	w9, #0xb848
0000000100003780	strh	w9, [x8]
0000000100003784	adrp	x9, 5 ; 0x100008000
0000000100003788	add	x9, x9, #0x0
000000010000378c	add	x9, x9, #0xc
0000000100003790	stur	x9, [x8, #0x2]
0000000100003794	mov	w9, #0x8b48
0000000100003798	movk	w9, #0x4a00, lsl #16
000000010000379c	stur	w9, [x8, #0xa]
00000001000037a0	mov	w9, #0x48b
00000001000037a4	strh	w9, [x8, #0xe]
00000001000037a8	lsl	w9, w3, #3
00000001000037ac	orr	w9, w9, #0xc0
00000001000037b0	strb	w9, [x8, #0x10]
00000001000037b4	mov	w9, #0x8b46
00000001000037b8	sturh	w9, [x8, #0x11]
00000001000037bc	mov	w9, #0x4
00000001000037c0	bfi	w9, w2, #3, #29
00000001000037c4	strb	w9, [x8, #0x13]
00000001000037c8	lsl	w9, w4, #3
00000001000037cc	orr	w9, w9, #0x80
00000001000037d0	strb	w9, [x8, #0x14]
00000001000037d4	mov	w0, #0x15
00000001000037d8	ret
_seg_store:
00000001000037dc	add	x8, x0, x1
00000001000037e0	mov	w9, #0xb848
00000001000037e4	strh	w9, [x8]
00000001000037e8	adrp	x9, 5 ; 0x100008000
00000001000037ec	add	x9, x9, #0x0
00000001000037f0	add	x9, x9, #0xc
00000001000037f4	stur	x9, [x8, #0x2]
00000001000037f8	mov	w9, #0x8b48
00000001000037fc	movk	w9, #0x4a00, lsl #16
0000000100003800	stur	w9, [x8, #0xa]
0000000100003804	mov	w9, #0x48b
0000000100003808	strh	w9, [x8, #0xe]
000000010000380c	lsl	w9, w2, #3
0000000100003810	orr	w9, w9, #0xc0
0000000100003814	strb	w9, [x8, #0x10]
0000000100003818	mov	w9, #0x8946
000000010000381c	sturh	w9, [x8, #0x11]
0000000100003820	mov	w9, #0x4
0000000100003824	bfi	w9, w4, #3, #29
0000000100003828	strb	w9, [x8, #0x13]
000000010000382c	lsl	w9, w3, #3
0000000100003830	orr	w9, w9, #0x80
0000000100003834	strb	w9, [x8, #0x14]
0000000100003838	mov	w0, #0x15
000000010000383c	ret
_inject_load_program:
0000000100003840	add	x8, x0, x1
0000000100003844	mov	w9, #0x8944
0000000100003848	strh	w9, [x8]
000000010000384c	mov	w9, #0xc6
0000000100003850	orr	w9, w9, w3, lsl #3
0000000100003854	strb	w9, [x8, #0x2]
0000000100003858	mov	w9, #0x8948
000000010000385c	movk	w9, #0x45e8, lsl #16
0000000100003860	stur	w9, [x8, #0x3]
0000000100003864	mov	w9, #0x85
0000000100003868	strb	w9, [x8, #0x7]
000000010000386c	lsl	w9, w2, #3
0000000100003870	orr	w10, w9, w2
0000000100003874	orr	w10, w10, #0xc0
0000000100003878	strb	w10, [x8, #0x8]
000000010000387c	mov	w10, #0x175
0000000100003880	movk	w10, #0x44c3, lsl #16
0000000100003884	stur	w10, [x8, #0x9]
0000000100003888	mov	w10, #0x89
000000010000388c	strb	w10, [x8, #0xd]
0000000100003890	orr	w9, w9, #0xffffffc7
0000000100003894	strb	w9, [x8, #0xe]
0000000100003898	mov	w9, #0x4b0
000000010000389c	movk	w9, #0xd3ff, lsl #16
00000001000038a0	stur	w9, [x8, #0xf]
00000001000038a4	mov	w9, #0xc3
00000001000038a8	strb	w9, [x8, #0x13]
00000001000038ac	mov	w0, #0x15
00000001000038b0	ret
_inject_map_segment:
00000001000038b4	add	x8, x0, x1
00000001000038b8	mov	w9, #0x8944
00000001000038bc	strh	w9, [x8]
00000001000038c0	lsl	w9, w3, #3
00000001000038c4	orr	w9, w9, #0xffffffc7
00000001000038c8	strb	w9, [x8, #0x2]
00000001000038cc	mov	w9, #0xb0
00000001000038d0	movk	w9, #0xd3ff, lsl #16
00000001000038d4	stur	w9, [x8, #0x3]
00000001000038d8	mov	w9, #0x8941
00000001000038dc	sturh	w9, [x8, #0x7]
00000001000038e0	orr	w9, w2, #0xc0
00000001000038e4	strb	w9, [x8, #0x9]
00000001000038e8	mov	x9, #0x1f0f
00000001000038ec	movk	x9, #0xf00, lsl #16
00000001000038f0	movk	x9, #0x1f, lsl #32
00000001000038f4	movk	x9, #0x1f0f, lsl #48
00000001000038f8	stur	x9, [x8, #0xa]
00000001000038fc	mov	w9, #0x9000
0000000100003900	strh	w9, [x8, #0x12]
0000000100003904	mov	w9, #0x90
0000000100003908	strb	w9, [x8, #0x14]
000000010000390c	mov	w0, #0x15
0000000100003910	ret
_inject_unmap_segment:
0000000100003914	add	x8, x0, x1
0000000100003918	mov	w9, #0x8944
000000010000391c	strh	w9, [x8]
0000000100003920	lsl	w9, w2, #3
0000000100003924	orr	w9, w9, #0xffffffc7
0000000100003928	strb	w9, [x8, #0x2]
000000010000392c	mov	x9, #0x1b0
0000000100003930	movk	x9, #0xd3ff, lsl #16
0000000100003934	movk	x9, #0x1f0f, lsl #32
0000000100003938	movk	x9, #0xf00, lsl #48
000000010000393c	stur	x9, [x8, #0x3]
0000000100003940	mov	x9, #0x1f001f001f001f
0000000100003944	movk	x9, #0x1f0f, lsl #16
0000000100003948	movk	x9, #0xf00, lsl #32
000000010000394c	stur	x9, [x8, #0xb]
0000000100003950	mov	w9, #0x9090
0000000100003954	sturh	w9, [x8, #0x13]
0000000100003958	mov	w0, #0x15
000000010000395c	ret
_map_segment:
0000000100003960	stp	x22, x21, [sp, #-0x30]!
0000000100003964	stp	x20, x19, [sp, #0x10]
0000000100003968	stp	x29, x30, [sp, #0x20]
000000010000396c	add	x29, sp, #0x20
0000000100003970	mov	x19, x0
0000000100003974	adrp	x22, 5 ; 0x100008000
0000000100003978	add	x22, x22, #0x0
000000010000397c	ldr	w8, [x22, #0x2c]
0000000100003980	cbz	w8, 0x100003998
0000000100003984	ldur	x9, [x22, #0x24]
0000000100003988	sub	w8, w8, #0x1
000000010000398c	str	w8, [x22, #0x2c]
0000000100003990	ldr	w8, [x9, w8, uxtw  #2]
0000000100003994	b	0x100003a10
0000000100003998	ldp	w8, w9, [x22, #0x1c]
000000010000399c	cmp	w8, w9
00000001000039a0	b.ne	0x100003a08
00000001000039a4	lsl	w8, w8, #1
00000001000039a8	str	w8, [x22, #0x20]
00000001000039ac	ldur	x0, [x22, #0x14]
00000001000039b0	ubfiz	x1, x8, #2, #32
00000001000039b4	bl	0x100003e10 ; symbol stub for: _realloc
00000001000039b8	stur	x0, [x22, #0x14]
00000001000039bc	cbz	x0, 0x100003a84
00000001000039c0	ldur	x0, [x22, #0xc]
00000001000039c4	ldr	w8, [x22, #0x20]
00000001000039c8	lsl	x1, x8, #3
00000001000039cc	bl	0x100003e10 ; symbol stub for: _realloc
00000001000039d0	stur	x0, [x22, #0xc]
00000001000039d4	cbz	x0, 0x100003a88
00000001000039d8	ldp	w8, w9, [x22, #0x1c]
00000001000039dc	cmp	w8, w9
00000001000039e0	b.hs	0x100003a08
00000001000039e4	ldur	x9, [x22, #0xc]
00000001000039e8	str	xzr, [x9, x8, lsl  #3]
00000001000039ec	ldur	x9, [x22, #0x14]
00000001000039f0	str	wzr, [x9, x8, lsl  #2]
00000001000039f4	add	x8, x8, #0x1
00000001000039f8	ldr	w9, [x22, #0x20]
00000001000039fc	cmp	x8, x9
0000000100003a00	b.lo	0x1000039e4
0000000100003a04	ldr	w8, [x22, #0x1c]
0000000100003a08	add	w9, w8, #0x1
0000000100003a0c	str	w9, [x22, #0x1c]
0000000100003a10	ldur	x9, [x22, #0xc]
0000000100003a14	mov	w20, w8
0000000100003a18	ldr	x0, [x9, w8, uxtw  #3]
0000000100003a1c	cbz	x0, 0x100003a30
0000000100003a20	ldur	x8, [x22, #0x14]
0000000100003a24	ldr	w8, [x8, x20, lsl  #2]
0000000100003a28	cmp	w8, w19
0000000100003a2c	b.hs	0x100003a60
0000000100003a30	ubfiz	x21, x19, #2, #32
0000000100003a34	mov	x1, x21
0000000100003a38	bl	0x100003e10 ; symbol stub for: _realloc
0000000100003a3c	ldur	x8, [x22, #0xc]
0000000100003a40	lsl	x9, x20, #3
0000000100003a44	str	x0, [x8, x9]
0000000100003a48	ldur	x8, [x22, #0xc]
0000000100003a4c	ldr	x0, [x8, x9]
0000000100003a50	cbz	x0, 0x100003a80
0000000100003a54	ldur	x8, [x22, #0x14]
0000000100003a58	str	w19, [x8, x20, lsl  #2]
0000000100003a5c	b	0x100003a64
0000000100003a60	ubfiz	x21, x19, #2, #32
0000000100003a64	mov	x1, x21
0000000100003a68	bl	0x100003d80 ; symbol stub for: _bzero
0000000100003a6c	mov	x0, x20
0000000100003a70	ldp	x29, x30, [sp, #0x20]
0000000100003a74	ldp	x20, x19, [sp, #0x10]
0000000100003a78	ldp	x22, x21, [sp], #0x30
0000000100003a7c	ret
0000000100003a80	bl	_map_segment.cold.3
0000000100003a84	bl	_map_segment.cold.1
0000000100003a88	bl	_map_segment.cold.2
_unmap_segment:
0000000100003a8c	stp	x20, x19, [sp, #-0x20]!
0000000100003a90	stp	x29, x30, [sp, #0x10]
0000000100003a94	add	x29, sp, #0x10
0000000100003a98	mov	x19, x0
0000000100003a9c	adrp	x20, 5 ; 0x100008000
0000000100003aa0	add	x20, x20, #0x0
0000000100003aa4	ldp	w8, w9, [x20, #0x2c]
0000000100003aa8	cmp	w8, w9
0000000100003aac	b.ne	0x100003ad0
0000000100003ab0	lsl	w8, w8, #1
0000000100003ab4	str	w8, [x20, #0x30]
0000000100003ab8	ldur	x0, [x20, #0x24]
0000000100003abc	ubfiz	x1, x8, #2, #32
0000000100003ac0	bl	0x100003e10 ; symbol stub for: _realloc
0000000100003ac4	stur	x0, [x20, #0x24]
0000000100003ac8	ldr	w8, [x20, #0x2c]
0000000100003acc	b	0x100003ad4
0000000100003ad0	ldur	x0, [x20, #0x24]
0000000100003ad4	add	w9, w8, #0x1
0000000100003ad8	str	w9, [x20, #0x2c]
0000000100003adc	str	w19, [x0, w8, uxtw  #2]
0000000100003ae0	ldp	x29, x30, [sp, #0x10]
0000000100003ae4	ldp	x20, x19, [sp], #0x20
0000000100003ae8	ret
_load_program:
0000000100003aec	stp	x24, x23, [sp, #-0x40]!
0000000100003af0	stp	x22, x21, [sp, #0x10]
0000000100003af4	stp	x20, x19, [sp, #0x20]
0000000100003af8	stp	x29, x30, [sp, #0x30]
0000000100003afc	add	x29, sp, #0x30
0000000100003b00	mov	x21, x0
0000000100003b04	adrp	x23, 5 ; 0x100008000
0000000100003b08	add	x23, x23, #0x0
0000000100003b0c	ldur	x8, [x23, #0x14]
0000000100003b10	ldr	w19, [x8, w0, uxtw  #2]
0000000100003b14	mov	x0, x19
0000000100003b18	mov	w1, #0x4
0000000100003b1c	bl	0x100003d8c ; symbol stub for: _calloc
0000000100003b20	mov	x20, x0
0000000100003b24	ldur	x22, [x23, #0xc]
0000000100003b28	ldr	x1, [x22, w21, uxtw  #3]
0000000100003b2c	lsl	x2, x19, #2
0000000100003b30	bl	0x100003dd4 ; symbol stub for: _memcpy
0000000100003b34	str	x20, [x22]
0000000100003b38	ldur	x8, [x23, #0x14]
0000000100003b3c	str	w19, [x8]
0000000100003b40	mov	w8, #0x15
0000000100003b44	mul	w22, w19, w8
0000000100003b48	mov	x0, #0x0
0000000100003b4c	mov	x1, x22
0000000100003b50	mov	w2, #0x7
0000000100003b54	mov	w3, #0x1002
0000000100003b58	mov	w4, #-0x1
0000000100003b5c	mov	x5, #0x0
0000000100003b60	bl	0x100003de0 ; symbol stub for: _mmap
0000000100003b64	mov	x21, x0
0000000100003b68	mov	x1, x22
0000000100003b6c	bl	0x100003d80 ; symbol stub for: _bzero
0000000100003b70	cbz	w19, 0x100003b90
0000000100003b74	mov	x0, #0x0
0000000100003b78	ldr	w1, [x20], #0x4
0000000100003b7c	and	x2, x0, #0xffffffff
0000000100003b80	mov	x0, x21
0000000100003b84	bl	_compile_instruction
0000000100003b88	subs	x19, x19, #0x1
0000000100003b8c	b.ne	0x100003b78
0000000100003b90	stur	x21, [x23, #0x4]
0000000100003b94	mov	x0, x21
0000000100003b98	ldp	x29, x30, [sp, #0x30]
0000000100003b9c	ldp	x20, x19, [sp, #0x20]
0000000100003ba0	ldp	x22, x21, [sp, #0x10]
0000000100003ba4	ldp	x24, x23, [sp], #0x40
0000000100003ba8	ret
0000000100003bac	udf	#0x0
_run:
0000000100003bb0	mov	x19, xzr
0000000100003bb4	mov	x20, xzr
0000000100003bb8	mov	x21, xzr
0000000100003bbc	mov	x22, xzr
0000000100003bc0	mov	x23, xzr
0000000100003bc4	mov	x24, xzr
0000000100003bc8	mov	x25, xzr
0000000100003bcc	mov	x26, xzr
0000000100003bd0	ldr	x27, #0x18
0000000100003bd4	stp	x30, xzr, [sp, #-0x10]!
_loop:
0000000100003bd8	mov	x0, #0x36
0000000100003bdc	bl	0x100003df8 ; symbol stub for: _putchar
0000000100003be0	ldp	x30, xzr, [sp], #0x10
0000000100003be4	ret
_handler:
0000000100003be8	udf	#0x0
0000000100003bec	udf	#0x0
_main.cold.1:
0000000100003bf0	stp	x22, x21, [sp, #-0x30]!
0000000100003bf4	stp	x20, x19, [sp, #0x10]
0000000100003bf8	stp	x29, x30, [sp, #0x20]
0000000100003bfc	add	x29, sp, #0x20
0000000100003c00	mov	x19, x1
0000000100003c04	mov	x20, x0
0000000100003c08	add	x8, x0, x0, lsl #1
0000000100003c0c	lsl	x0, x8, #1
0000000100003c10	bl	_initialize_zero_segment
0000000100003c14	mov	x21, x0
0000000100003c18	mov	x0, x20
0000000100003c1c	mov	w1, #0x4
0000000100003c20	bl	0x100003d8c ; symbol stub for: _calloc
0000000100003c24	mov	x22, x0
0000000100003c28	mov	x0, x21
0000000100003c2c	mov	x1, x22
0000000100003c30	mov	x2, x19
0000000100003c34	bl	_load_zero_segment
0000000100003c38	mov	x0, x19
0000000100003c3c	bl	0x100003d98 ; symbol stub for: _fclose
0000000100003c40	adrp	x8, 5 ; 0x100008000
0000000100003c44	add	x8, x8, #0x0
0000000100003c48	ldur	x9, [x8, #0xc]
0000000100003c4c	str	x22, [x9]
0000000100003c50	lsr	x9, x20, #2
0000000100003c54	ldur	x10, [x8, #0x14]
0000000100003c58	str	w9, [x10]
0000000100003c5c	ldr	w9, [x8, #0x1c]
0000000100003c60	add	w9, w9, #0x1
0000000100003c64	str	w9, [x8, #0x1c]
0000000100003c68	stur	x21, [x8, #0x4]
0000000100003c6c	adrp	x0, 0 ; 0x100003000
0000000100003c70	add	x0, x0, #0xf24 ; literal pool for: "Making it this far"
0000000100003c74	bl	0x100003e04 ; symbol stub for: _puts
0000000100003c78	mov	x0, x21
0000000100003c7c	bl	_run
0000000100003c80	adrp	x0, 0 ; 0x100003000
0000000100003c84	add	x0, x0, #0xf37 ; literal pool for: "\nFinished running the assembly code"
0000000100003c88	bl	0x100003e04 ; symbol stub for: _puts
0000000100003c8c	adrp	x0, 0 ; 0x100003000
0000000100003c90	add	x0, x0, #0xe85 ; literal pool for: "main"
0000000100003c94	adrp	x1, 0 ; 0x100003000
0000000100003c98	add	x1, x1, #0xe8a ; literal pool for: "jit.c"
0000000100003c9c	adrp	x3, 0 ; 0x100003000
0000000100003ca0	add	x3, x3, #0xea1 ; literal pool for: "false"
0000000100003ca4	mov	w2, #0x8b
0000000100003ca8	bl	0x100003d74 ; symbol stub for: ___assert_rtn
_main.cold.2:
0000000100003cac	stp	x29, x30, [sp, #-0x10]!
0000000100003cb0	mov	x29, sp
0000000100003cb4	adrp	x0, 0 ; 0x100003000
0000000100003cb8	add	x0, x0, #0xe85 ; literal pool for: "main"
0000000100003cbc	adrp	x1, 0 ; 0x100003000
0000000100003cc0	add	x1, x1, #0xe8a ; literal pool for: "jit.c"
0000000100003cc4	adrp	x3, 0 ; 0x100003000
0000000100003cc8	add	x3, x3, #0xe90 ; literal pool for: "(fsize % 4) == 0"
0000000100003ccc	mov	w2, #0x75
0000000100003cd0	bl	0x100003d74 ; symbol stub for: ___assert_rtn
_initialize_zero_segment.cold.1:
0000000100003cd4	stp	x29, x30, [sp, #-0x10]!
0000000100003cd8	mov	x29, sp
0000000100003cdc	adrp	x0, 0 ; 0x100003000
0000000100003ce0	add	x0, x0, #0xea7 ; literal pool for: "initialize_zero_segment"
0000000100003ce4	adrp	x1, 0 ; 0x100003000
0000000100003ce8	add	x1, x1, #0xe8a ; literal pool for: "jit.c"
0000000100003cec	adrp	x3, 0 ; 0x100003000
0000000100003cf0	add	x3, x3, #0xebf ; literal pool for: "zero != MAP_FAILED"
0000000100003cf4	mov	w2, #0x9f
0000000100003cf8	bl	0x100003d74 ; symbol stub for: ___assert_rtn
_map_segment.cold.1:
0000000100003cfc	stp	x29, x30, [sp, #-0x10]!
0000000100003d00	mov	x29, sp
0000000100003d04	adrp	x0, 0 ; 0x100003000
0000000100003d08	add	x0, x0, #0xed2 ; literal pool for: "map_segment"
0000000100003d0c	adrp	x1, 0 ; 0x100003000
0000000100003d10	add	x1, x1, #0xe8a ; literal pool for: "jit.c"
0000000100003d14	adrp	x3, 0 ; 0x100003000
0000000100003d18	add	x3, x3, #0xede ; literal pool for: "gs.seg_lens != NULL"
0000000100003d1c	mov	w2, #0x28e
0000000100003d20	bl	0x100003d74 ; symbol stub for: ___assert_rtn
_map_segment.cold.2:
0000000100003d24	stp	x29, x30, [sp, #-0x10]!
0000000100003d28	mov	x29, sp
0000000100003d2c	adrp	x0, 0 ; 0x100003000
0000000100003d30	add	x0, x0, #0xed2 ; literal pool for: "map_segment"
0000000100003d34	adrp	x1, 0 ; 0x100003000
0000000100003d38	add	x1, x1, #0xe8a ; literal pool for: "jit.c"
0000000100003d3c	adrp	x3, 0 ; 0x100003000
0000000100003d40	add	x3, x3, #0xef2 ; literal pool for: "gs.val_seq != NULL"
0000000100003d44	mov	w2, #0x292
0000000100003d48	bl	0x100003d74 ; symbol stub for: ___assert_rtn
_map_segment.cold.3:
0000000100003d4c	stp	x29, x30, [sp, #-0x10]!
0000000100003d50	mov	x29, sp
0000000100003d54	adrp	x0, 0 ; 0x100003000
0000000100003d58	add	x0, x0, #0xed2 ; literal pool for: "map_segment"
0000000100003d5c	adrp	x1, 0 ; 0x100003000
0000000100003d60	add	x1, x1, #0xe8a ; literal pool for: "jit.c"
0000000100003d64	adrp	x3, 0 ; 0x100003000
0000000100003d68	add	x3, x3, #0xf05 ; literal pool for: "gs.val_seq[new_seg_id] != NULL"
0000000100003d6c	mov	w2, #0x2a9
0000000100003d70	bl	0x100003d74 ; symbol stub for: ___assert_rtn
